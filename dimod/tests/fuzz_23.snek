(fun (our_code_starts_here energy z d g h i a j e) (if (<= energy 0) 50 (block (set! energy (- energy 1)) (let ((d (let ((d (let ((y (block true)) (c (set! e -11))) (let ((f "h") (e true) (b 23)) "f"))) (i (+ (+ "a" -11) (set! d 23))) (f false)) (let ((c (set! d false)) (i (block "d" -11))) "h"))) (b (set! h (main (block true false 54) (= "e" "a") (block "a")))) (c (block (> "z" (block "z" "energy"))))) (set! j (set! i (let ((y true)) 37)))))))
(fun (main energy g j) (if (<= energy 0) false (block (set! energy (- energy 1)) (block (set! energy (block (set! g -70) (let ((i "energy") (g -55) (z -55)) "z") (if "j" "j" false) (set! g false) (* 74 "g"))) (+ (set! energy "energy") (+ (- "energy" "energy") (let ((b "j") (x "g") (j -55)) -55))) (set! energy (< (- "g" "g") (block -32 "j" -55 "energy")))))))
(fun (fun1 energy j h e z) (if (<= energy 0) -80 (block (set! energy (- energy 1)) (let ((g (- (+ (let ((a "e")) "j") (block false -97 -39)) "j"))) (block (set! energy (- "j" "j")) (add1 (* "h" -27)))))))
(fun (fun2 energy) (if (<= energy 0) 42 (block (set! energy (- energy 1)) (add1 (block (let ((g (>= -22 "energy")) (h (main -88 false 44)) (x "g")) "g") (* (* "energy" "energy") (* 17 "energy")))))))
(fun (fun3 energy z c e x g) (if (<= energy 0) 26 (block (set! energy (- energy 1)) (* (sub1 (let ((d 20)) (+ -9 27))) (let ((d (block (block "z" "z" 29 "energy" "z") (<= 24 "z") (let ((y -58) (g "energy")) "g") (let ((f "c")) "energy")))) (- (let ((e "x") (y "e")) 50) (+ "z" "energy")))))))
(fun (fun4 energy x j h d) (if (<= energy 0) 69 (block (set! energy (- energy 1)) (let ((x (let ((z (add1 (block -78))) (f true)) (add1 (let ((c "f") (z 15)) 54))))) (- (sub1 (block 89 -79)) (block (<= -86 "x") (block -85)))))))
(fun (fun5 energy z g a j y e c) (if (<= energy 0) 17 (block (set! energy (- energy 1)) "c")))
(fun (fun6 energy j g y d e i h f) (if (<= energy 0) false (block (set! energy (- energy 1)) (let ((i (let ((a (> -72 (block "y" true "f"))) (f (set! y (sub1 53))) (y (let ((c (>= "f" -5)) (e (+ "energy" "d"))) (fun3 "j" "e" false true true "f")))) (* (* 58 "energy") (set! a -11))))) (let ((c (let ((h (isnum "y")) (y (main 30 false "j")) (a true)) (if "y" -75 "f")))) (if (< "d" "d") (let ((x "y")) "x") (let ((e 86) (c false) (g "h")) "e")))))))
(fun (fun7 energy) (if (<= energy 0) -30 (block (set! energy (- energy 1)) (add1 (block (< (- -88 -88) (block "energy" -49 21 "energy")) (block (fun4 "energy" false false 11 "energy") (set! energy -44) (isnum true) (add1 "energy")) (set! energy 64))))))
(let ((loop_var_176 (block -64 23 61 true -82))) (loop (if (< loop_var_176 (+ (block -64 23 61 true -82) 176)) (block (set! loop_var_176 (+ loop_var_176 1)) (let ((y (let ((h (let ((h (let ((x (let ((y (isbool true)) (i (= true "y")) (z (- 27 33))) (< 57 22)))) (+ (block -77 false 54 67) (- 90 -69)))) (y (let ((j (set! h (= false true)))) (fun6 (- -77 35) (sub1 "h") (main 43 "j" "h") (sub1 "h") (block -27 "h" -22 false) (sub1 input) "h" (* -83 71) (let ((b "j") (h "j")) "h")))) (f (block (let ((f (add1 input)) (x (block "h"))) (let ((y false)) 54)) (set! y (block false))))) (block (block (isbool "f") (- "h" 47) (set! y 98) (fun5 "y" "h" "f" true "f" true -77 input)) (let ((i (set! h "h")) (h (block true -40 "f")) (d (block "y" "h" -64 "h"))) (< "i" "d"))))) (d (block (let ((x (block (block false -66 -81 -80) (set! h -78) (block -90 "h" false false 12) (let ((y "h") (c 53)) 22) (block -75 -80 false))) (f (let ((a "h")) (fun6 -18 100 false -67 false 39 -45 input "x")))) (block (let ((i "f") (y true)) "y") 90 (let ((i "h")) false) (block "h" false "x"))) (>= (- (sub1 -59) (* -75 -23)) (let ((g (block 22))) (sub1 input))) (< (sub1 (+ -97 -3)) (+ -75 (fun2 input))) (* (+ (set! h 32) (block 12)) (block (set! h -73))) 15)) (y (= (let ((y (- (+ 53 66) (block -34 "h" "d")))) (isbool (let ((x "h")) true))) (main (add1 (+ "d" "d")) (<= (set! h -17) -23) (let ((c (<= "d" "d"))) (block input true 28)))))) true))) (let ((i (let ((i (let ((b "y") (a (let ((i (> -18 -31)) (g 45) (f (block true 95 "b" "g" false))) (fun6 "g" input "f" "g" "f" input "g" "g" "f")))) (let ((c (= -52 44)) (b (let ((x false)) false)) (x (our_code_starts_here 62 true "b" false 33 -29 true -20 40))) true))) (z (block (set! y (= 28 52)) (let ((a true) (x (fun3 -95 "a" false true "i" -74))) (let ((d -37) (h false)) "d")))) (h (> (add1 (let ((d "z") (i "y") (h false)) 43)) (fun7 (set! i "z"))))) (let ((y (set! i (let ((j "y") (g "y") (e "i")) input)))) (< 39 (- "y" "z"))))) (z (* (let ((d (* (block 79) (* -19 -68))) (g (+ (block 58) (if -40 "d" "d")))) -96) (set! y (let ((c (let ((x "i") (z true) (h 98)) "z"))) (block "c" true "i" -99)))))) (fun6 (* (let ((a (let ((d 91)) "i")) (b (* "z" "z")) (h (let ((h "z") (a false)) false))) (sub1 "z")) (let ((b (isbool false)) (e 74)) (- input 36))) (let ((e (<= (set! i "z") -4)) (d (- (block false "z" "y" "e" "z") (set! i -80)))) (- (let ((y "i") (x 34) (j 36)) -94) (* -46 "d"))) (if (>= (+ 22 "z") (fun7 "z")) (block (isbool false) (isnum true) (let ((j "z") (y "y")) false)) (< (let ((j "i") (a -49)) -65) (let ((h 8) (d "h") (f "i")) "h"))) (block (let ((z "y") (d (= true false))) (block 64 -58 24 -52 "z"))) (> "z" (sub1 (+ -69 -82))) (* (block (let ((g "y") (y "g")) "z")) (if (set! z false) (set! y "z") (set! z -81))) (let ((x (* (+ "z" "z") (block "i" true 92 true "z")))) (set! x input)) (+ (* (- "z" "z") (block 17)) (let ((j (<= 87 28))) (block 24 "z" "j" -34 -10))) (<= (if (let ((h -63)) "h") (block 91 true true -84) (block "i" 95)) (+ (block true 86 20) (let ((g "z") (c "g") (b false)) 50))))))) (break (let ((b (isbool (set! loop_var_176 (= (set! loop_var_176 (block true)) (block (let ((g false)) -40) (= 37 "loop_var_176") (isnum false) (let ((i false)) "i")))))) (f (<= (block (block (isbool "b") (let ((g false) (x (+ "loop_var_176" -38))) (fun6 52 "x" false "x" true "loop_var_176" 84 "loop_var_176" "b")) "loop_var_176" (<= (let ((i true) (e "b")) -56) (set! b "loop_var_176"))) (let ((f (sub1 (let ((h "b")) 35))) (y (- (set! f 33) (* -40 92)))) (< (let ((d 47)) "y") (let ((g "b")) "f"))) (block "loop_var_176" (block (let ((d "b") (a "loop_var_176")) "b") (fun7 50) (block "loop_var_176" "b" 67)))) (our_code_starts_here (let ((h (* (add1 "loop_var_176") (let ((i input) (x "b")) "i")))) (+ (block 56) (let ((f "b") (g "b") (b "h")) 62))) (let ((e (let ((j (let ((b "b")) "b"))) (set! b "j"))) (b (set! b (let ((g "b") (y "b")) "g")))) (block (let ((e input)) true) (>= "loop_var_176" "loop_var_176"))) (let ((d (let ((z (add1 "loop_var_176")) (y (sub1 -34)) (a (let ((e 89) (c true)) true))) (isbool "b"))) (j (block (< "loop_var_176" "loop_var_176") (let ((h "b")) "b"))) (i (* (* -21 "loop_var_176") (block "loop_var_176" 81)))) (let ((i (let ((j 61) (y "j") (z 53)) "y")) (g (< "i" input)) (b (+ 13 "i"))) (>= "b" -84))) (let ((f (set! loop_var_176 (set! loop_var_176 "b"))) (c (add1 (set! loop_var_176 -34))) (g (let ((a (block "b")) (c (set! b "c"))) (* 20 "loop_var_176")))) (block (let ((f "f") (c "g") (a true)) "loop_var_176") (let ((z "b")) "z"))) (set! loop_var_176 (let ((f (if "loop_var_176" "loop_var_176" -69)) (j (set! b "b"))) (set! b 59))) (block (>= (* "loop_var_176" "loop_var_176") (block 91)) (set! loop_var_176 (set! b "loop_var_176"))) (set! loop_var_176 (let ((j (let ((i "b") (y false) (x input)) -43)) (b (block "j" "b" 4 -31)) (z (isbool "b"))) (let ((e "b") (a 59)) "b"))) (let ((a (+ (- -23 "loop_var_176") (add1 "loop_var_176")))) (set! a (block 88 36 -40))) (let ((y (sub1 (let ((c 21)) -48))) (c (add1 (sub1 82)))) (set! c (+ "loop_var_176" "loop_var_176")))))) (y (let ((d (* (+ (let ((x "loop_var_176") (i (- "loop_var_176" 72))) (sub1 68)) (let ((b "b") (c "loop_var_176")) (* 11 "c"))) (let ((y (let ((x (let ((y false) (h "loop_var_176")) 9)) (c (block "b" "loop_var_176" "x" "f" "x"))) "f"))) (let ((i (block -86 true)) (j true)) (set! b "loop_var_176"))))) (j (let ((z (let ((b (isnum (set! b true))) (c "d")) (* (let ((e "b")) "c") (let ((d "f")) "d")))) (y (isnum (block (block "b" 43 "b")))) (g (let ((a (* (set! d "loop_var_176") (* "d" -19)))) (block (let ((e "f") (d "z")) 99) (set! loop_var_176 "f") (let ((b "b")) false) (set! b false))))) (let ((j (block (> 43 -75) (fun6 24 "loop_var_176" false "z" true -99 "d" 78 "g") (* 11 -75))) (f (let ((f (block false false)) (e (+ "loop_var_176" "loop_var_176"))) 85)) (e (let ((j (isbool true)) (g (<= "d" "loop_var_176"))) (+ 59 84)))) (set! d (set! z false))))) (h (let ((b (sub1 (set! b (let ((f "j") (h "b")) "loop_var_176")))) (j (if (block (main -53 false 84) (let ((z true) (d -25)) "loop_var_176")) (if (block false "b" 79) (isnum true) (let ((b 55) (d -20)) "b")) (block (isnum false) (isnum false) (> "loop_var_176" "b"))))) (+ (let ((y (set! b "f")) (b (block -47)) (e (let ((a false)) "j"))) (add1 "loop_var_176")) (set! b (let ((c true)) 99)))))) (> (let ((z (set! d (let ((c true)) false)))) (if (block "z") "d" (block 36 -9 "f" "z" 9))) (- (block (block input -54 "loop_var_176") (if -26 "loop_var_176" 38) (block -3 "h")) (+ (let ((a 89) (f false) (h "d")) "d") (sub1 "loop_var_176"))))))) "b")))))