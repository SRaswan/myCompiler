(fun (our_code_starts_here energy y i g c e x) (if (<= energy 0) -29 (block (set! energy (- energy 1)) (fun1 energy (sub1 (+ (if 43 88 "energy") (sub1 "energy")))))))
(fun (main energy) (if (<= energy 0) true (block (set! energy (- energy 1)) (let ((i (block (if "energy" "energy" (sub1 "energy")) (+ (let ((e "energy") (x "energy") (a "e")) "x") (block "energy" false false "energy" 3)) -81 (let ((z (if 53 false true)) (y (> 28 "energy")) (x (set! energy false))) (let ((i "energy") (c "i")) "x")))) (g (let ((x (set! energy false)) (b (let ((x (let ((d -97) (a -69) (b "x")) "a"))) (fun3 "x" "x"))) (c (< (block "energy" false "b") (add1 "energy")))) (let ((c (- "b" "energy")) (y (>= 9 "b")) (a (set! x "b"))) (set! energy -43)))) (h (let ((j (let ((i (< 19 -40)) (j (* -31 "g")) (x (isbool false))) (let ((g "g") (x -45) (h -26)) true))) (b "j") (d (add1 (set! b "g")))) (sub1 (sub1 "energy"))))) false))))
(fun (fun1 energy y) (if (<= energy 0) -14 (block (set! energy (- energy 1)) (let ((d (let ((b (fun2 (block 74 32) (block false) (let ((y false)) "energy") false (- 67 -22) "y" (<= 39 -15) (- -78 -100) (= false true))) (j (let ((b (- -30 "y")) (y (= true false)) (i (sub1 45))) (set! y "y"))) (i 40)) (set! y (block -60 82))))) (block (< (let ((b -3) (j false) (y false)) "d") (let ((d true) (a "y")) -3)) (block (let ((a -8) (i -44) (b -8)) -32) (let ((x -69)) -24) (block "d" 73) (isnum true)) (- (let ((i "y") (g "energy") (a false)) -87) (let ((h true)) "y")) (if (> -50 "y") (isbool false) false) (- (sub1 -11) (block "d")))))))
(fun (fun2 energy a j i d h z c f) (if (<= energy 0) false (block (set! energy (- energy 1)) (set! h "d"))))
(fun (fun3 energy g) (if (<= energy 0) true (block (set! energy (- energy 1)) (isbool (> (* (block true 41) (set! energy "g")) (set! g (add1 "g")))))))
(let ((i (let ((d (>= (let ((loop_var_77 (* -20 89))) (let ((loop_var_111 (block true true true -88))) (loop (if (< loop_var_111 (+ (block true true true -88) 111)) (block (set! loop_var_111 (+ loop_var_111 1))) (break (block (block (< "loop_var_111" "loop_var_111") (block 30)) (let ((z (* "loop_var_111" "loop_var_111")) (i (let ((d true)) -57))) (let ((z false) (a "z")) true)) true (block (isnum true) (block true false) (add1 "loop_var_111")))))))) (* (sub1 (add1 (sub1 (+ 16 -21)))) (* (let ((b (if (our_code_starts_here 59 -6 -28 52 -93 -9 68) 59 61))) (* (let ((h true) (z true)) 36) (let ((e true)) "b"))) (our_code_starts_here (let ((loop_var_140 -38)) (loop (if (> loop_var_140 (- -38 140)) (block (set! loop_var_140 (- loop_var_140 1))) (break "loop_var_140")))) (* (fun1 -60 27) (fun1 63 -23)) (let ((b (let ((d -7)) false)) (z (- -53 -89)) (c (+ "z" -36))) (let ((a false) (z false)) 62)) (block (< -69 92) (< -56 -25) (add1 -39)) (our_code_starts_here (let ((d -25)) -43) (fun1 24 59) 14 (let ((loop_var_163 62)) (loop (if (< loop_var_163 (+ 62 163)) (block (set! loop_var_163 (+ loop_var_163 1))) (break 5)))) (let ((b true) (c false) (f true)) -69) (* -68 -38) (* 38 -54)) (sub1 (add1 18)) (block (let ((a false) (i 29) (x "i")) 37) (block false false 59 -12) 24 (let ((loop_var_179 -97)) (loop (if (> loop_var_179 (- -97 179)) (block (set! loop_var_179 (- loop_var_179 1))) (break -75)))))))))) (a (isnum (block (= (block (let ((d (let ((g true) (i input)) "g"))) true) (* (sub1 25) (let ((g "d") (d input)) 24)) (* (add1 -55) (let ((c false)) -14)) (let ((f (let ((loop_var_11 12)) (let ((loop_var_38 99)) (loop (if (> loop_var_38 (- 99 38)) (block (set! loop_var_38 (- loop_var_38 1)) (set! d -1) (set! d 26)) (break "loop_var_38")))))) (b (+ "f" "f")) (j (fun2 "f" "d" "f" "d" "b" 81 false "f" "d"))) (let ((loop_var_5 64)) (loop (if (< loop_var_5 (+ 64 5)) (block (set! loop_var_5 (+ loop_var_5 1)) (set! d true) (set! j "d") true input) (break true))))) (> (+ 4 4) (let ((g 29)) 2))) (block (set! d -35) (let ((y (let ((loop_var_92 -61)) (let ((loop_var_188 93)) (loop (if (> loop_var_188 (- 93 188)) (block (set! loop_var_188 (- loop_var_188 1)) false) (break true))))))) (block -32 40)) (if (>= -40 56) (isnum "d") (let ((c "d") (b -66)) true)))) (set! d -48) (let ((i (if "d" (sub1 (let ((loop_var_112 -11)) (let ((loop_var_83 24)) (let ((loop_var_20 7)) (loop (if (< loop_var_20 (+ 7 20)) (block (set! loop_var_20 (+ loop_var_20 1)) (set! d -66)) (break -52))))))) -35))) (let ((loop_var_93 (* 46 "i"))) (loop (if (> loop_var_93 (- (* 46 "i") 93)) (block (set! loop_var_93 (- loop_var_93 1))) (break "d")))))))) (e (block (let ((loop_var_43 (block "a" true -6 "d" 1))) (loop (if (< loop_var_43 (+ (block "a" true -6 "d" 1) 43)) (block (set! loop_var_43 (+ loop_var_43 1)) (set! d (+ (let ((b (main -39)) (e (if 90 "d" true)) (d (block "b" false -74 true))) (+ -43 13)) (let ((j (set! d -49))) (- "j" "j")))) (set! d (block (block (add1 60)) (fun1 (if "a" -33 -67) (block "d" true false -41 -30)))) (set! a (block (block (set! a false)) (- (let ((i "d") (y -98) (j "y")) "j") (+ -70 40)) (block (block false true) (block "a" 23 -24 37 false) (- 61 -85) (let ((f -7)) "f"))))) (break (let ((d (set! a (block "d")))) 91))))) (let ((x (< (sub1 (+ (* -99 -19) 25)) -61)) (d (> (set! d -90) (add1 (let ((loop_var_80 26)) (let ((loop_var_192 84)) (loop (if (< loop_var_192 (+ 84 192)) (block (set! loop_var_192 (+ loop_var_192 1))) (break "loop_var_192"))))))))) (set! d (let ((z (isnum (> 91 -75))) (b (set! x (- -77 -65))) (y (let ((h (let ((z "b") (g "b")) "g")) (x (isbool "x")) (g (= false "x"))) (let ((h input) (j "b") (d "d")) "h")))) (block (let ((i -31)) "b") (set! a "d") (block "z"))))) (block (set! a (* (let ((x (fun1 21 4))) (let ((d input) (x false) (g true)) -82)) (* (- -48 56) (block 6)))) (+ 54 (let ((y (+ (add1 31) (block true 11)))) (let ((z (+ 63 80)) (d (let ((loop_var_107 "z")) (loop (if (< loop_var_107 (+ "z" 107)) (block (set! loop_var_107 (+ loop_var_107 1)) (set! y "d") false) (break "a")))))) (block true "y" "y")))) (let ((loop_var_199 (if 51 35 -18))) (loop (if (< loop_var_199 (+ (if 51 35 -18) 199)) (block (set! loop_var_199 (+ loop_var_199 1)) (let ((j (>= -69 -58))) (set! j "j")) (set! a (let ((i 22) (b "d")) "a")) (set! a (< 79 -41))) (break "a")))))))) (add1 (let ((a (let ((loop_var_109 -46)) (loop (if (> loop_var_109 (- -46 109)) (block (set! loop_var_109 (- loop_var_109 1)) (set! a (= (let ((f -26) (b -94) (e -27)) true) (isbool "d"))) false) (break (isbool (set! e "a"))))))) (i (let ((loop_var_184 (if -58 -97 42))) (let ((loop_var_56 (+ -23 85))) (loop (if (> loop_var_56 (- (+ -23 85) 56)) (block (set! loop_var_56 (- loop_var_56 1)) true (let ((g (<= 13 22))) (set! a "a")) (isbool (isnum "a"))) (break (let ((c (block false -57 "loop_var_56" "a")) (h (- -34 "loop_var_56")) (d (- -74 -18))) (block "d" input false true)))))))) (z (let ((h (let ((loop_var_191 (our_code_starts_here -21 58 -43 -25 40 -49 68))) (loop (if (> loop_var_191 (- (our_code_starts_here -21 58 -43 -25 40 -49 68) 191)) (block (set! loop_var_191 (- loop_var_191 1))) (break (let ((g true) (y true)) true))))))) (block (let ((loop_var_49 -94)) (loop (if (< loop_var_49 (+ -94 49)) (block (set! loop_var_49 (+ loop_var_49 1)) (set! e true) (set! e "a")) (break "i")))) (let ((j (block 44 -74))) (block "d" true "j")))))) "z")))) (j (let ((a (- (block (let ((loop_var_41 65)) (loop (if (> loop_var_41 (- 65 41)) (block (set! loop_var_41 (- loop_var_41 1)) (set! i (if (- 28 -33) (+ -58 "i") (let ((j true) (i -37) (d "j")) 83)))) (break (let ((g "i")) (add1 "i")))))) true 8) "i")) (b (let ((loop_var_186 (* "i" "i"))) (loop (if (> loop_var_186 (- (* "i" "i") 186)) (block (set! loop_var_186 (- loop_var_186 1)) (set! a (add1 (block (+ (set! i "a") (set! a "a"))))) (set! a (sub1 (- (our_code_starts_here (let ((j false) (c "a")) "a") "i" "i" (let ((f true) (i 76) (d "i")) 45) (block -38 96 false true -96) (* "a" -66) (add1 63)) (* (let ((a true) (y 41) (c -31)) 68) (- 60 -71))))) (set! a "i")) (break "i")))))) (let ((d (let ((c (* -67 (+ (+ (* 1 -57) "i") (+ (let ((loop_var_144 -24)) (let ((loop_var_35 "i")) (loop (if (< loop_var_35 (+ "i" 35)) (block (set! loop_var_35 (+ loop_var_35 1))) (break "b"))))) (let ((i 56)) -95))))) (z (+ (let ((loop_var_13 (set! i "a"))) (loop (if (> loop_var_13 (- (set! i "a") 13)) (block (set! loop_var_13 (- loop_var_13 1)) (set! b (set! a "a")) (set! a (+ -97 97))) (break (- "a" 49))))) (let ((y (sub1 (let ((loop_var_157 -71)) (loop (if (< loop_var_157 (+ -71 157)) (block (set! loop_var_157 (+ loop_var_157 1)) (set! b "b") 4 -37 "i") (break 36)))))) (h (let ((z (let ((x "c")) false)) (f (let ((z false) (f 48) (c -93)) "z"))) (add1 -86)))) (+ (let ((b true)) -19) (block -69 "h"))))) (e (block (< "i" (let ((f 3) (a (block -52)) (h (let ((g false) (c "i")) "g"))) (sub1 "a"))) -42 (let ((z (let ((i (isbool false)) (j (block false false "i" "i" "i")) (x "i")) (let ((i "i") (y -60) (z "c")) "z"))) (a (let ((g (if 13 true false))) (block "a" "a")))) (* (let ((f false) (x 87) (i "z")) "i") (let ((x "i") (b 22) (h "x")) -52)))))) (block (* (if (fun1 -20 -36) (* "z" 26) (let ((loop_var_19 "b")) (let ((loop_var_41 64)) (loop (if (< loop_var_41 (+ 64 41)) (block (set! loop_var_41 (+ loop_var_41 1))) (break 62)))))) (- (block "b" "z" true "z") (our_code_starts_here 66 "a" "c" "b" "i" "i" 60))) (> (+ (let ((b true)) "e") (let ((loop_var_52 "c")) (loop (if (> loop_var_52 (- "c" 52)) (block (set! loop_var_52 (- loop_var_52 1)) 90) (break 34))))) (+ (let ((i "e") (j true)) "i") (sub1 "e")))))) (g (isbool (let ((x true)) (let ((e (our_code_starts_here (add1 16) (let ((h true) (e -4)) -44) (+ "b" "a") (let ((h "i") (f "b") (g "f")) 75) -19 (set! b -55) (if "x" "i" -96))) (i (<= (let ((x -78) (a "x") (z 45)) "i") (block "a" 42 true "x" "b"))) (y (block (+ 46 -74) (> -22 "i") (block -83 "i" -29 true)))) "y"))))) (block (sub1 (* (let ((loop_var_97 "b")) (loop (if (> loop_var_97 (- "b" 97)) (block (set! loop_var_97 (- loop_var_97 1)) (set! g "a") (set! d 51)) (break "a")))) "i")) (let ((loop_var_141 (let ((b -35) (f 87) (z true)) 80))) (loop (if (< loop_var_141 (+ (let ((b -35) (f 87) (z true)) 80) 141)) (block (set! loop_var_141 (+ loop_var_141 1)) (set! a (< (let ((a "a") (j false)) 79) (let ((c "i") (z -34) (d false)) "c"))) (set! g (let ((e (block -99 "d"))) (let ((x -10) (i "e")) true))) (set! b (> (let ((z -60) (b -29) (y 68)) "b") (* "a" -78)))) (break (let ((d (let ((z 33)) -97))) (let ((e "g") (i false) (b 13)) true)))))) (<= (sub1 (if (fun1 34 "a") (add1 "i") (sub1 "a"))) (let ((e (let ((c (block 58 "g" -20 "a")) (b (let ((f "a") (y input)) -14)) (i (let ((x false)) "i"))) (let ((loop_var_200 -67)) (loop (if (> loop_var_200 (- -67 200)) (block (set! loop_var_200 (- loop_var_200 1)) (set! c "d") (set! a true) (set! c "g")) (break true))))))) "i")))))) (g (- (* -96 (let ((f (+ (let ((z (let ((j (- 0 -26)) (g (block "j" "j" "j")) (e (let ((loop_var_155 45)) (loop (if (> loop_var_155 (- 45 155)) (block (set! loop_var_155 (- loop_var_155 1))) (break false)))))) (< 60 "j"))) (h (let ((loop_var_102 -83)) (let ((loop_var_131 83)) (loop (if (< loop_var_131 (+ 83 131)) (block (set! loop_var_131 (+ loop_var_131 1))) (break "loop_var_131"))))))) "h") (block (let ((d (* "i" "i")) (y (let ((loop_var_148 -97)) (let ((loop_var_31 -16)) (loop (if (> loop_var_31 (- -16 31)) (block (set! loop_var_31 (- loop_var_31 1))) (break "j")))))) (g (set! y "d"))) (* "i" "g"))))) (z (block (block (let ((i (block 63 "i")) (z (block 51)) (x (isnum false))) (let ((e 44) (i true) (d "z")) false))) (let ((loop_var_172 (block "f" 57 "f"))) (loop (if (< loop_var_172 (+ (block "f" 57 "f") 172)) (block (set! loop_var_172 (+ loop_var_172 1)) (set! j (block "j" 27 "j" false "f"))) (break "f")))) (> (let ((i (+ 39 59))) (set! i 70)) (let ((f (isnum false)) (h (add1 "f")) (g (if "f" "f" "f"))) (* 44 "i"))) (block (main "f") (let ((x (let ((loop_var_162 "f")) (loop (if (< loop_var_162 (+ "f" 162)) (block (set! loop_var_162 (+ loop_var_162 1)) true true "j") (break "j"))))) (g (set! j true))) (let ((j 23) (c true) (g "c")) false)) (add1 (let ((b 10)) -54)) (let ((loop_var_42 16)) (let ((loop_var_72 35)) (loop (if (< loop_var_72 (+ 35 72)) (block (set! loop_var_72 (+ loop_var_72 1)) (set! f "f") -49 -76 48) (break -71)))))) (let ((loop_var_69 (let ((g "j") (f "f") (z false)) "f"))) (loop (if (< loop_var_69 (+ (let ((g "j") (f "f") (z false)) "f") 69)) (block (set! loop_var_69 (+ loop_var_69 1)) (set! f 75) "f") (break (block -25 "j" 87)))))))) (block (let ((loop_var_162 (block false "j" "z"))) (loop (if (< loop_var_162 (+ (block false "j" "z") 162)) (block (set! loop_var_162 (+ loop_var_162 1)) (- "z" 77) (let ((a "f") (x true) (y "a")) "y") (fun1 7 "i")) (break (+ 92 -2))))) (isnum (<= (+ "f" 60) (let ((x 2) (g "x") (j "j")) "f"))) (isnum (let ((f (let ((b true) (g "i")) "i")) (i (let ((h -20) (x false) (z "j")) "j")) (j input)) (isbool false))) (block (block (let ((z "z") (f "j")) true) (let ((y 78) (x 28) (z "f")) false)) (+ (add1 "i") (let ((x "i") (a -51) (e "j")) 77)) (set! f (* "i" 17)))))) (let ((c (isnum (> (- (let ((z (block "j" "i" -37 73 false)) (h (block "i" "i" -67 false)) (c (sub1 "i"))) (let ((z "c") (x false)) "i")) (let ((loop_var_119 "i")) (loop (if (> loop_var_119 (- "i" 119)) (block (set! loop_var_119 (- loop_var_119 1)) -4 "i") (break "loop_var_119"))))) "i")))) (let ((a (let ((i (isnum (block (let ((d "i")) "c")))) (j (+ (let ((b (let ((y "i")) "j")) (d (* "i" "i")) (c (block "i" 71 false false "c"))) (let ((loop_var_73 "i")) (loop (if (< loop_var_73 (+ "i" 73)) (block (set! loop_var_73 (+ loop_var_73 1)) (set! i "d")) (break -57))))) (set! i (+ "i" 30)))) (x (- (- (block "c" "j" "i" false "i") (block 89)) (let ((loop_var_93 "i")) (let ((loop_var_115 -17)) (loop (if (< loop_var_115 (+ -17 115)) (block (set! loop_var_115 (+ loop_var_115 1))) (break "loop_var_115")))))))) (let ((e (+ (sub1 -26) (+ -89 "i"))) (c (* (block 20 input "e") (let ((loop_var_158 "e")) (let ((loop_var_140 21)) (loop (if (> loop_var_140 (- 21 140)) (block (set! loop_var_140 (- loop_var_140 1)) (set! i -87)) (break "j"))))))) (f (+ (set! e "i") (+ "i" -56)))) (< (let ((d "i") (j "i")) "x") 85)))) (e (let ((a (let ((i (let ((y (- "i" "i"))) (isbool false)))) -58))) (let ((g (> (set! j "i") (let ((f "i") (i 38)) "a")))) (- (* -97 "i") (add1 54))))) (j (let ((h (= (let ((z (block "e" 80 "e" false)) (e (if "i" false "a"))) (+ "e" 13)) (let ((loop_var_157 19)) (let ((loop_var_49 "i")) (loop (if (> loop_var_49 (- "i" 49)) (block (set! loop_var_49 (- loop_var_49 1))) (break 91))))))) (g (let ((i (isnum true))) true))) (set! h (let ((z (let ((x "e")) 97)) (i (block "z")) (c "j")) (let ((loop_var_38 -16)) (loop (if (< loop_var_38 (+ -16 38)) (block (set! loop_var_38 (+ loop_var_38 1)) (set! e false) (set! i false)) (break false))))))))) (block true (<= (- (set! j "e") (let ((z false) (a -26)) "a")) (let ((f 16) (b (let ((b -57) (g false)) "c")) (z (let ((i -9)) input))) (let ((e "e") (b -21)) "f"))) (let ((x (let ((x (add1 -76)) (a (let ((z "i") (f "z") (a -96)) false))) false)) (h (let ((d (add1 3)) (y (isbool input)) (x (let ((h "d") (c 95)) "x"))) (isnum "x"))) (z (let ((g (if "x" "j" false)) (c (add1 "e")) (x -85)) (let ((g "c") (f "i") (c "g")) "j")))) (let ((h (- -61 1)) (z (sub1 23)) (b (block 35))) (add1 -51))))))))) (- (block (let ((h (< (block "j" (- (let ((loop_var_126 "i")) (loop (if (> loop_var_126 (- "i" 126)) (block (set! loop_var_126 (- loop_var_126 1)) 55 27) (break -4)))) (let ((loop_var_174 "i")) (let ((loop_var_52 "i")) (loop (if (< loop_var_52 (+ "i" 52)) (block (set! loop_var_52 (+ loop_var_52 1)) (set! g "i") (set! j 97) 94) (break "g"))))))) (block -6 (let ((b (isnum input))) (add1 "i")) (+ (let ((f false)) "i") (let ((y 61) (j "i")) "g"))))) (g (let ((y false)) (let ((x (isnum "y"))) (let ((g (<= 5 "i")) (c input) (b (let ((loop_var_129 80)) (let ((loop_var_162 "g")) (loop (if (< loop_var_162 (+ "g" 162)) (block (set! loop_var_162 (+ loop_var_162 1)) true) (break false))))))) (< "g" "i"))))) (j (let ((a (let ((h (let ((j (add1 -59)) (g (let ((c -73)) input)) (c (let ((loop_var_119 "g")) (let ((loop_var_43 "g")) (loop (if (< loop_var_43 (+ "g" 43)) (block (set! loop_var_43 (+ loop_var_43 1))) (break true))))))) (isbool true))) (b (> (let ((g "j") (h -42) (x "g")) 51) (+ -36 "i"))) (d (- (let ((c false) (x "h")) "g") (let ((f "j") (x "g") (a "i")) "g")))) (<= (* "g" "g") 97)))) (block false (< (let ((e "g") (g 25) (c false)) "g") (* 55 -25)) (> (block "g" -41) (block 92 false true "j" 61)) (<= (set! j "i") (if "h" "i" -39)))))) (let ((z (let ((loop_var_66 (let ((d "i") (a "j") (g "j")) "i"))) (let ((loop_var_129 (let ((i "j") (g true)) "i"))) (loop (if (> loop_var_129 (- (let ((i "j") (g true)) "i") 129)) (block (set! loop_var_129 (- loop_var_129 1)) (set! g "h") (set! g (let ((d true)) "j"))) (break (block "j" "loop_var_129" "g" "h"))))))) (y (let ((a (let ((b (- "i" -36)) (a (let ((g "h") (x -22) (z false)) "h")) (j (< -87 "b"))) (let ((y 38)) "a")))) (let ((loop_var_195 -81)) (let ((loop_var_35 "g")) (loop (if (< loop_var_35 (+ "g" 35)) (block (set! loop_var_35 (+ loop_var_35 1))) (break true))))))) (b (+ (sub1 (add1 "i")) (* (let ((c true)) 1) (- "i" "g"))))) (block (+ (block "h" 51) (* "i" 41)) (block (block "j" 44 false "g" -38) "i" (block "j" "b" "b" "g" "h")) (let ((e "g") (j (if input false true))) (let ((x "g") (j -33)) true)) (let ((x (let ((x "i") (d true)) -66)) (h (let ((b "h") (c -78)) true))) (block "x" "g" "g" "b" -5)) (let ((f (block "h" "g" "g")) (e (let ((loop_var_88 "g")) (loop (if (> loop_var_88 (- "g" 88)) (block (set! loop_var_88 (- loop_var_88 1)) false false false) (break "y"))))) (y (let ((y true) (h "e") (e false)) "e"))) (let ((h false) (d 64)) true))))) (block (block "j") "j") (+ (block (set! g "j") (let ((e (let ((loop_var_37 "g")) (let ((loop_var_10 79)) (loop (if (< loop_var_10 (+ 79 10)) (block (set! loop_var_10 (+ loop_var_10 1))) (break "i")))))) (y (block (+ "g" -11) (let ((loop_var_62 -92)) (loop (if (< loop_var_62 (+ -92 62)) (block (set! loop_var_62 (+ loop_var_62 1)) (set! i "j") (set! i true) (set! e "j")) (break true)))) input (add1 "g")))) (+ (set! g "y") (let ((loop_var_191 "g")) (let ((loop_var_146 -15)) (let ((loop_var_102 -80)) (loop (if (> loop_var_102 (- -80 102)) (block (set! loop_var_102 (- loop_var_102 1))) (break "i")))))))) (let ((c (let ((b (block "j" -27 "j" "g"))) (* "b" 36)))) (add1 (add1 "g"))) (if (* (block false "g" -27) (+ "i" "i")) (block (let ((loop_var_138 -21)) (loop (if (> loop_var_138 (- -21 138)) (block (set! loop_var_138 (- loop_var_138 1)) (set! i "j") (set! g "j") false true) (break false)))) (block 27) "g") (let ((h (let ((loop_var_18 "g")) (loop (if (< loop_var_18 (+ "g" 18)) (block (set! loop_var_18 (+ loop_var_18 1)) (set! i "j") (set! g input) (set! i false)) (break "j")))))) (set! j "i")))) (* (* 86 (let ((b (- -24 27)) (g (let ((j "b") (x -43) (a "j")) false))) (let ((y false) (a "i") (h 58)) "g"))) (let ((b (block (block true) (+ "i" "i") (let ((y -60) (h false)) "j") (let ((j false) (i 67) (a true)) "j") (let ((h 84) (b "h")) "i")))) (let ((c (block "b" "b")) (d (>= 61 -16))) (let ((i -73) (x true)) -24)))))) (add1 (let ((i (+ (* (block 61) (let ((c (- "g" "g")) (i (let ((j -82) (x true)) 29)) (j (let ((y "j") (c "i") (d "c")) false))) (* "i" "c"))) (- (let ((h (* 87 "g"))) (let ((g -80)) -54)) (block (block 44 "j" input -68 "g") (let ((loop_var_40 -13)) (let ((loop_var_149 61)) (loop (if (> loop_var_149 (- 61 149)) (block (set! loop_var_149 (- loop_var_149 1))) (break "i"))))))))) (a (- (- (* (let ((g -75)) -4) (sub1 -41)) (+ (set! g "i") "i")) (- 59 (* (* "i" "g") (let ((g "g")) "g")))))) (let ((loop_var_94 (block "j" 30 "j" "i" 64))) (let ((loop_var_186 (sub1 "i"))) (loop (if (> loop_var_186 (- (sub1 "i") 186)) (block (set! loop_var_186 (- loop_var_186 1)) (block (> -26 "a") (* "a" 43) (+ "g" "a") (- 89 "i")) (block (set! j "a") (block "j" "j" -22 "j" true) (isbool false) (fun1 -29 -16))) (break (if (> 90 "a") (let ((c -5)) "a") (let ((i -38) (c true) (e true)) -71)))))))))))