(fun (our_code_starts_here energy y z e x i b) (if (<= energy 0) -53 (block (set! energy (- energy 1)) (set! y (block (- (block 4) (let ((c "energy") (f "e") (j 53)) "b")))))))
(fun (main energy b z i d) (if (<= energy 0) true (block (set! energy (- energy 1)) (isbool (set! z (> (our_code_starts_here -81 false true "energy" "i" -48 "b") (block "i")))))))
(fun (fun1 energy d z j c f) (if (<= energy 0) true (block (set! energy (- energy 1)) false)))
(fun (fun2 energy j a x f h d b) (if (<= energy 0) true (block (set! energy (- energy 1)) (isnum (block (block (let ((x true) (g "x")) -81) (set! h -43)) (+ (+ -51 "energy") (let ((c true) (z false)) 68)) (let ((y (- "energy" 17)) (d (= "y" 22))) (let ((j 1) (h 97) (d false)) "j")) (isnum (let ((j true) (i false)) "x")))))))
(fun (fun3 energy a b i h z d y x) (if (<= energy 0) -94 (block (set! energy (- energy 1)) (let ((y (sub1 (set! energy (+ -16 "energy")))) (x (set! y (fun6 (block false "d") (+ "a" -60) (set! d false) (> "y" "a") (let ((y "y") (b "x") (i true)) true) (let ((d "y") (z -90)) "i"))))) (* (set! y (- "a" -65)) (let ((z (block "y" true -77 true)) (d (block "y" "z" "b"))) (- 98 70)))))))
(fun (fun4 energy e z x h j y i a) (if (<= energy 0) false (block (set! energy (- energy 1)) (let ((h (block (= (let ((f "a")) "x") (let ((d false) (g "x")) false)) (set! h (if "a" false "x")) (let ((h (>= 6 51)) (e (block "i" "e" false -61 92)) (y (set! energy false))) (let ((z true) (e true) (j false)) false))))) (= (let ((x (< 96 -51)) (y (block -70 false)) (b 94)) (- "y" 14)) (* (our_code_starts_here "i" "a" true "i" "e" "e" "i") (sub1 "h")))))))
(fun (fun5 energy y i g) (if (<= energy 0) false (block (set! energy (- energy 1)) (let ((i (isnum (<= (let ((c true)) -86) (let ((f true) (i 32) (g "g")) "i")))) (x (add1 (block (let ((g -99) (f true) (d -100)) true) (fun5 "y" "g" "g" true) (block 4 -61 "energy" false) (+ -99 "i") (- "i" "energy")))) (d -23)) (= (< (if 12 -80 "energy") (block true "i" "i")) (let ((b (< -90 "d")) (h "i") (z (let ((b true)) 2))) "i"))))))
(fun (fun6 energy y i j h z) (if (<= energy 0) false (block (set! energy (- energy 1)) (let ((c (sub1 (our_code_starts_here (block -46) false (isbool "z") (* -6 "i") (- 68 "i") (* "energy" 0) (- -87 "energy")))) (e (block (block (- "i" "y") (+ "y" -80) (let ((g "c")) false)) (let ((a 54) (i (let ((d false) (e true) (i -62)) "i")) (y (let ((e "i") (b 6) (i true)) "h"))) (let ((a 15) (h "y") (y -40)) "z")) (- (let ((g "h")) "i") 10) (if (block false "z" true -78) (let ((j "z")) "i") (sub1 "y")) (set! c (let ((c "y") (b "c") (j "i")) "c"))))) false))))
(fun (fun7 energy y z g) (if (<= energy 0) -91 (block (set! energy (- energy 1)) (- (+ (set! g (- "energy" "y")) (* (- "z" 66) (sub1 "energy"))) (let ((c (block (isnum false) (* 49 "energy"))) (d (block (let ((h true)) "h") (if "z" 14 "y"))) (z (let ((h (let ((i "energy") (j false)) 35)) (c (set! c "z"))) (set! z false)))) (- (+ "d" -100) (- "energy" -26)))))))
(fun (fun8 energy x) (if (<= energy 0) true (block (set! energy (- energy 1)) (set! energy (<= (set! energy (let ((f 8) (y 60) (i "energy")) "i")) (+ (let ((y false) (i "x")) 62) (let ((g false) (z 72) (x "g")) -99)))))))
(let ((loop_var_157 (block false true -39 false -77))) (loop (if (> loop_var_157 (- (block false true -39 false -77) 157)) (block (set! loop_var_157 (- loop_var_157 1))) (break (let ((c (let ((b (+ (block (block (let ((b "loop_var_157") (f true)) 9) -57 (if -85 -88 "loop_var_157") (add1 23)) (let ((e (- 73 "loop_var_157"))) (let ((h false) (f -6)) "h")) (<= "loop_var_157" (block false "loop_var_157" "loop_var_157")) (block (let ((z true)) false) (set! loop_var_157 68)) (let ((e (let ((x "loop_var_157") (y false) (c true)) true)) (j 62)) (block "j" true "j"))) (set! loop_var_157 (* (let ((g 27) (f true)) "g") (* 19 -9))))) (a (= (let ((c (block (block "loop_var_157" -69 -88) (block true true true))) (a (< (let ((g true)) "loop_var_157") (sub1 "b")))) (let ((g (- "loop_var_157" 43)) (j (fun5 "b" -15 "loop_var_157" true)) (d (let ((b -25) (y "c") (f 27)) false))) (+ 59 96))) (block 81)))) (let ((h (let ((y (set! loop_var_157 (let ((b "a")) "b"))) (e (let ((j (block "a" "y" -60 "loop_var_157")) (h (let ((c "a") (d "a")) false)) (x (= "h" "a"))) (set! y false)))) false))) (- (let ((y (let ((x -67)) "h"))) (set! y "b")) (* (let ((y 29) (i false) (x "h")) "loop_var_157") (block -41))))))) (set! loop_var_157 (- "c" (let ((g (<= (block true true "loop_var_157" "c") (block -74 25 13 "loop_var_157")))) (set! g (let ((j true) (a false) (e "loop_var_157")) 57))))))))))