(fun (our_code_starts_here energy b e j f a i h x) (if (<= energy 0) 9 (block (set! energy (- energy 1)) (let ((i (let ((d (set! b (let ((i "j")) -71))) (x (add1 (let ((z "x")) 71)))) (block (>= 15 "j"))))) "energy"))))
(fun (main energy i b) (if (<= energy 0) true (block (set! energy (- energy 1)) (let ((f true)) (let ((f (let ((g (let ((e 62) (f "e") (h 99)) 12))) (block -9 -92))) (g "f") (j (add1 (let ((y true) (f 81)) 9)))) (block (let ((j false) (d true)) false) (let ((i 32) (d false)) false) (our_code_starts_here "b" true 54 "g" "f" -70 "i" 26 false) (+ "b" "f") (> "energy" "i")))))))
(fun (fun1 energy z g y d x a c) (if (<= energy 0) false (block (set! energy (- energy 1)) (<= (- (add1 (let ((h false)) -100)) (set! energy (let ((d 81) (z "y") (f 31)) 16))) (block (block (our_code_starts_here "energy" "c" -28 "c" "x" 97 "energy" -15 "c") (block "d" "y" "g" "energy" "c") (let ((b "c")) true) (let ((x "g") (f false)) -33)))))))
(fun (fun2 energy y i e j c d a) (if (<= energy 0) true (block (set! energy (- energy 1)) (isnum (main (our_code_starts_here (let ((i 37)) -4) (let ((h true) (b -8)) false) (block false "j") (block "c" 61 true) (let ((x false)) "c") (block "e" "c" -86) (- 73 "a") (set! c -67) (>= -61 53)) (- (let ((z "c")) "j") "a") (block (block false false false 66 "i") (+ "d" "a") (+ "i" "energy")))))))
(block (let ((g (>= (let ((y (block (block (block (isbool true) (let ((z 10) (h "z") (y true)) true) (block false true false))) (>= (add1 (- -14 -19)) (sub1 (let ((loop_var_49 28)) (loop (if (< loop_var_49 (+ 28 49)) (block (set! loop_var_49 (+ loop_var_49 1)) -61 29) (break -99)))))))) (f (let ((loop_var_69 (let ((h 81) (z "y")) "h"))) (let ((loop_var_109 (let ((z false) (i "y")) -6))) (loop (if (> loop_var_109 (- (let ((z false) (i "y")) -6) 109)) (block (set! loop_var_109 (- loop_var_109 1)) (set! y (let ((a (* 38 -94)) (j (block "y" 33)) (i (set! j 57))) (let ((a "y")) true))) (set! y (isbool (fun1 54 -94 -90 "y" "y" false "y" false))) (set! y (> (our_code_starts_here 61 "y" -62 false true -24 -4 13 false) (- -37 20))) (< (block 36 "y" -98 true 61) (let ((h false)) -76)) (set! y (let ((b false) (d -6) (x true)) false))) (break (= (block -86 "loop_var_109" 70 false "y") (<= input 99))))))))) -13) (+ (block (+ (let ((h (let ((g false) (f -99)) false)) (g (block "h"))) (let ((j "g") (h true) (b -80)) -10)) (- 37 (let ((loop_var_133 78)) (loop (if (> loop_var_133 (- 78 133)) (block (set! loop_var_133 (- loop_var_133 1)) 2 62 4) (break "loop_var_133"))))))) (sub1 (block (our_code_starts_here (+ -87 75) true 33 (isbool true) (let ((loop_var_183 50)) (loop (if (< loop_var_183 (+ 50 183)) (block (set! loop_var_183 (+ loop_var_183 1))) (break false)))) -12 (add1 64) (* 44 -16) (let ((i false) (c 34)) "i")) (> (sub1 69) (let ((a false)) 51)) (>= (let ((d true) (y false)) -33) (block 66 -23)) false (if (<= 2 78) (+ -20 -66) (let ((loop_var_196 20)) (loop (if (> loop_var_196 (- 20 196)) (block (set! loop_var_196 (- loop_var_196 1))) (break -91)))))))))) (y (let ((c (+ (let ((y (let ((loop_var_2 -12)) (let ((loop_var_93 (let ((h false)) -4))) (loop (if (> loop_var_93 (- (let ((h false)) -4) 93)) (block (set! loop_var_93 (- loop_var_93 1))) (break (set! loop_var_93 input)))))))) (sub1 (block (let ((h false) (a -57) (j "a")) "h") 29))) (let ((j (let ((loop_var_164 (block "g" -61 38 -94))) (loop (if (< loop_var_164 (+ (block "g" -61 38 -94) 164)) (block (set! loop_var_164 (+ loop_var_164 1)) (set! g (let ((a -35) (f "g") (e "a")) "a"))) (break (block "loop_var_164" -85)))))) (i (block (> (our_code_starts_here -66 "g" -46 false true 37 85 83 "g") (block "j")) (block (* "j" "j") (isbool "g") (block "j")))) (f (* (let ((x (= 100 "i"))) -16) (* (let ((loop_var_52 "i")) (loop (if (> loop_var_52 (- "i" 52)) (block (set! loop_var_52 (- loop_var_52 1))) (break 45)))) (add1 "j"))))) (let ((y (isnum (set! j "g"))) (c (let ((g "y") (z (let ((e "i") (z true) (i true)) true))) (our_code_starts_here -9 false "f" true "z" 42 "f" 25 false)))) (+ (- input 31) (* -54 21)))))) (j (let ((h (let ((g (block (sub1 (let ((b 14)) -79))))) true))) "g"))) (let ((g (+ (* (let ((j (our_code_starts_here "c" true "c" false "j" "c" "c" "c" true))) 94) (let ((j "j") (i (sub1 -51))) (* -72 -82))) (+ (let ((loop_var_33 "c")) (loop (if (> loop_var_33 (- "c" 33)) (block (set! loop_var_33 (- loop_var_33 1)) (set! c -73) (set! j -75) (set! g 76)) (break "c")))) (let ((c (let ((x "j") (c "c") (d "c")) "x"))) (- 82 "c"))))) (x (let ((loop_var_134 (* "g" 30))) (let ((loop_var_31 (add1 "c"))) (loop (if (> loop_var_31 (- (add1 "c") 31)) (block (set! loop_var_31 (- loop_var_31 1)) (set! g (+ (* "c" "c") (- 79 76))) (set! c (block (set! g "g")))) (break (let ((i (- "g" "g")) (e (isnum true))) (block -30 1 "g" false 90)))))))) (b (our_code_starts_here (let ((e (block "c" (block "c" true false 33 "c"))) (f (set! j (= 16 96))) (z (fun1 (let ((x input) (z "g")) 20) (* "c" 35) (- input 78) (fun1 -43 "c" -76 "j" true true false false) (let ((loop_var_52 "x")) (loop (if (> loop_var_52 (- "x" 52)) (block (set! loop_var_52 (- loop_var_52 1)) (set! g "g") (set! g false) (set! e false) false false false) (break "f")))) (let ((g false) (b -54)) "f") (>= "c" "x") (= true true)))) (set! g (if 66 7 24))) (fun2 47 (+ (block 60) (block "g")) (let ((i (let ((h "g") (z "g") (d -74)) -88)) (h (block "i" "g")) (f (block false -15 "h" "g" 63))) (let ((loop_var_160 61)) (let ((loop_var_5 "i")) (loop (if (> loop_var_5 (- "i" 5)) (block (set! loop_var_5 (- loop_var_5 1)) false) (break "j")))))) (+ (let ((h "j")) -50) (let ((h "j") (g 15)) -74)) (let ((loop_var_29 -19)) (loop (if (< loop_var_29 (+ -19 29)) (block (set! loop_var_29 (+ loop_var_29 1)) (set! x true)) (break false)))) (add1 (+ "x" -94)) (sub1 (block "c" 55)) "g") (block (block "j" (* -69 input) (* -36 "x") (sub1 "x"))) (set! c (let ((h (let ((loop_var_173 25)) (let ((loop_var_154 -7)) (loop (if (< loop_var_154 (+ -7 154)) (block (set! loop_var_154 (+ loop_var_154 1)) (set! j "x") "x" -47) (break -89))))))) (let ((z "j") (b false) (e -75)) "g"))) false (set! j (sub1 (block true "g" false "c"))) (let ((x (set! c (> "g" "x")))) (* (let ((g "j") (a "g") (i "j")) "c") (- 14 "g"))) (let ((a (isnum (let ((d "j")) "j"))) (d (let ((f (if "a" "x" "x")) (x (block true true 32 48)) (c (* "c" -24))) (> -16 -93))) (j (isnum (let ((loop_var_152 "x")) (loop (if (< loop_var_152 (+ "x" 152)) (block (set! loop_var_152 (+ loop_var_152 1)) false) (break "d"))))))) (let ((b (fun2 "g" -61 "d" 16 true input "c" "j"))) -9)) (let ((g (let ((loop_var_36 -26)) (loop (if (> loop_var_36 (- -26 36)) (block (set! loop_var_36 (- loop_var_36 1)) (set! g "j") (set! x "j")) (break false)))))) (let ((loop_var_165 "c")) (let ((loop_var_165 "x")) (let ((loop_var_133 "g")) (loop (if (< loop_var_133 (+ "g" 133)) (block (set! loop_var_133 (+ loop_var_133 1))) (break false)))))))))) (let ((g (let ((loop_var_40 (block "j" "c" true false "b"))) (loop (if (< loop_var_40 (+ (block "j" "c" true false "b") 40)) (block (set! loop_var_40 (+ loop_var_40 1))) (break 63))))) (i (let ((f (- (add1 "b") (block 15 -85))) (h (let ((f (if "g" false "j"))) (set! g "g"))) (e (let ((y (> 11 "x"))) (+ 4 "g")))) (block (let ((loop_var_172 "b")) (loop (if (> loop_var_172 (- "b" 172)) (block (set! loop_var_172 (- loop_var_172 1)) (set! c "h") (set! b "g") (set! e true)) (break "g")))) (add1 40) (let ((f input) (x "h")) input) (block "h") (= 55 "b"))))) (- (let ((a (- 70 30)) (d (<= -76 input)) (e (let ((loop_var_17 71)) (loop (if (< loop_var_17 (+ 71 17)) (block (set! loop_var_17 (+ loop_var_17 1)) (set! i "i") (set! a "i") (set! g true)) (break "g")))))) (sub1 74)) (* "c" (block false "g" "g" "x")))))))) (- -88 (sub1 (let ((x (let ((g (< (let ((loop_var_82 -34)) (let ((loop_var_113 11)) (let ((loop_var_13 "y")) (loop (if (> loop_var_13 (- "y" 13)) (block (set! loop_var_13 (- loop_var_13 1)) (set! y "y") 86 "y") (break "loop_var_13")))))) (- 33 "y"))) (c (let ((h (let ((loop_var_13 -12)) (loop (if (< loop_var_13 (+ -12 13)) (block (set! loop_var_13 (+ loop_var_13 1)) (set! g input) (set! y "y")) (break -82))))) (z (let ((i false)) -57))) (let ((b "g")) true)))) (- (let ((a true) (c "c") (i "a")) 11) -26))) (f (if (sub1 (set! x input)) (<= "y" (let ((g false) (c "g")) "y")) (let ((g (add1 "x")) (d (set! x "g"))) (block "g" "g")))) (z (let ((i (let ((j (set! g true))) (our_code_starts_here "x" true "y" "j" true -66 "x" -26 "f"))) (g (block (block true false "g" 30))) (c (if (>= -98 -74) (let ((c "x") (y true) (f -69)) -1) (let ((y "f") (d false)) input)))) (let ((loop_var_106 "c")) (loop (if (< loop_var_106 (+ "c" 106)) (block (set! loop_var_106 (+ loop_var_106 1)) (set! g false) true "g") (break true))))))) (- (* (let ((d input) (x false)) "d") -16) (block (block "z") (- -2 70))))))) (let ((e 33) (g (fun2 (block (let ((loop_var_90 (if "e" "e" 50))) (loop (if (< loop_var_90 (+ (if "e" "e" 50) 90)) (block (set! loop_var_90 (+ loop_var_90 1)) (set! e (let ((b (fun1 -83 "e" "e" true true true true false)) (e (our_code_starts_here "e" true "b" false true 3 "b" "b" false))) (* 17 "e"))) (set! e (block (>= "e" 3) (- -18 81) (block false) (+ -45 "e") (* -35 45))) (set! e (sub1 (let ((i false) (e "i") (j false)) -2))) (let ((y (block -98 38)) (j (>= 29 "y"))) (let ((z "j")) -66)) (add1 (+ "e" "e")) (+ (block 65 "e" "e" true -32) (- "e" 96))) (break (set! e (let ((i 9)) -47))))))) (+ (add1 (let ((g (+ (block true -83 -65) (block input -94 true false "e"))) (b (isbool (block "e" false true))) (y -94)) (+ (let ((c true)) -58) -33))) (let ((e (set! e (< (let ((y "e") (a false)) 21) (let ((i "e")) -34)))) (f (let ((loop_var_56 (set! e "e"))) (loop (if (< loop_var_56 (+ (set! e "e") 56)) (block (set! loop_var_56 (+ loop_var_56 1)) (if -86 "e" 100) (sub1 "e")) (break (block "loop_var_56"))))))) (block (set! f (our_code_starts_here "f" "e" "f" "e" false "f" -5 56 true))))) (= (let ((loop_var_186 "e")) (loop (if (< loop_var_186 (+ "e" 186)) (block (set! loop_var_186 (+ loop_var_186 1)) (set! e (let ((e (let ((h 67)) "h")) (h (+ "e" 60)) (c (> "h" 4))) "h")) (set! e (block input -5 (block "e"))) (set! e (if (<= -13 15) (let ((y true) (g "e")) -17) (our_code_starts_here "e" true -37 true false 40 "e" "e" false)))) (break (set! e (let ((d false) (i "loop_var_186") (j "e")) "i")))))) -23) (let ((loop_var_74 (block -32))) (let ((loop_var_135 (let ((f true) (h "e")) -67))) (loop (if (> loop_var_135 (- (let ((f true) (h "e")) -67) 135)) (block (set! loop_var_135 (- loop_var_135 1)) (set! e (* (set! e (let ((z 100)) "e")) 52))) (break (block (block (let ((x false) (c 71) (d true)) 78)) (let ((f true) (d (+ 65 84)) (y (let ((h "e") (y "f") (e "loop_var_135")) "e"))) (set! f -27)) (let ((e (- 26 input))) (fun1 -67 11 "e" false false false false true)) (set! e (let ((i true) (b 3) (h "i")) "b")) (if (let ((i true) (f "e")) "loop_var_135") (+ "loop_var_135" 33) (add1 "loop_var_135")))))))) (= (if (sub1 (sub1 (let ((y true)) 5))) (let ((c (* (set! e "e") (block 58)))) (let ((loop_var_118 "c")) (let ((loop_var_5 "c")) (let ((loop_var_39 -28)) (loop (if (< loop_var_39 (+ -28 39)) (block (set! loop_var_39 (+ loop_var_39 1)) (set! c true) (set! e true) (set! e true) false) (break false))))))) (let ((b (add1 (sub1 "e")))) (let ((b false) (c (let ((loop_var_48 "e")) (loop (if (> loop_var_48 (- "e" 48)) (block (set! loop_var_48 (- loop_var_48 1)) (set! e false) (set! e "b") (set! e "b")) (break "b"))))) (y (set! b "b"))) (isbool "b")))) (block (let ((x (block (+ -19 "e") (let ((loop_var_199 -25)) (loop (if (> loop_var_199 (- -25 199)) (block (set! loop_var_199 (- loop_var_199 1)) true) (break false))))))) (let ((j (let ((g "x")) "e"))) (let ((g false)) "e"))) (let ((c (+ (let ((d "e") (x false) (g -13)) "g") (block "e" "e" false "e"))) (x (if (let ((e 4) (j "c")) -100) (block -91 false) (> "c" -32)))) (block (block "x" "x" "e" "x" "e") (block false "e") (let ((b true) (f "c") (g false)) input) false false)) (let ((y (let ((loop_var_97 "e")) (loop (if (> loop_var_97 (- "e" 97)) (block (set! loop_var_97 (- loop_var_97 1))) (break false)))))) (set! e (set! e false))))) (let ((loop_var_181 (let ((j true) (z -81)) 22))) (loop (if (> loop_var_181 (- (let ((j true) (z -81)) 22) 181)) (block (set! loop_var_181 (- loop_var_181 1))) (break (block (* (let ((j input) (z true) (b -89)) "b") (+ "e" input)) (let ((z (our_code_starts_here -99 false "e" false false "loop_var_181" "loop_var_181" 62 true)) (j (= true true)) (e (* "e" "z"))) (let ((h -53)) -50)) (+ (let ((h false) (z "h") (e true)) -98) (- 3 -27)) (let ((e (- "loop_var_181" input))) (set! loop_var_181 45))))))) (- (- (block (block (let ((i "e") (b -23) (h true)) "h") (let ((x "e") (e false) (c false)) "e") (let ((loop_var_47 "e")) (loop (if (> loop_var_47 (- "e" 47)) (block (set! loop_var_47 (- loop_var_47 1)) 6) (break 46))))) (+ (- "e" -69) (our_code_starts_here "e" true "e" true false "e" "e" "e" true)) (let ((i (set! e "e"))) (let ((x "i") (a false)) false)) -34 (block (add1 "e") (>= 75 "e") (* "e" -10) (* 75 48) (sub1 -82))) (let ((j (let ((h (our_code_starts_here -45 true 50 true true -33 -44 "e" true)) (b (block true "e" "e" false 78)) (x (let ((loop_var_76 "e")) (loop (if (> loop_var_76 (- "e" 76)) (block (set! loop_var_76 (- loop_var_76 1)) (set! h -46) (set! h 84) (set! e "h") "e" "h" -44) (break -39)))))) (let ((loop_var_70 57)) (loop (if (< loop_var_70 (+ 57 70)) (block (set! loop_var_70 (+ loop_var_70 1)) (set! x "b")) (break 77)))))) (i (add1 (let ((b true)) 83))) (g (+ (set! i "e") (- -77 85)))) (- (set! i "j") (block -18 input true false "j")))) (- (block (let ((y (let ((y false)) false))) (sub1 "e"))) (let ((loop_var_147 (our_code_starts_here -55 true "e" false false "e" "e" "e" true))) (loop (if (> loop_var_147 (- (our_code_starts_here -55 true "e" false false "e" "e" "e" true) 147)) (block (set! loop_var_147 (- loop_var_147 1)) (let ((e false) (z "e") (d "z")) "e") (let ((j 22)) -90)) (break (let ((b true) (h false) (y input)) "y"))))))) false))) (let ((y (< (block "e" (let ((h (block -51 (let ((e false)) true) (let ((loop_var_175 "e")) (loop (if (> loop_var_175 (- "e" 175)) (block (set! loop_var_175 (- loop_var_175 1))) (break "loop_var_175")))) (block "e" 74 true false) (set! e true)))) (>= (let ((d "e") (c true) (x "e")) "e") (* "e" 56))) (< (+ (let ((f "e") (j "e")) 78) (block "e")) (let ((c (add1 "e"))) (* input "e"))) (- (if (isbool false) (block 65) (let ((f "e") (z 54)) -71)) (let ((c (let ((d "g") (a input) (j 77)) false))) (* -51 "e")))) (let ((loop_var_148 (sub1 "e"))) (loop (if (< loop_var_148 (+ (sub1 "e") 148)) (block (set! loop_var_148 (+ loop_var_148 1))) (break (+ (add1 -33) "e"))))))) (h (let ((loop_var_199 (block "g" "e" "e" "g" "e"))) (loop (if (> loop_var_199 (- (block "g" "e" "e" "g" "e") 199)) (block (set! loop_var_199 (- loop_var_199 1)) (set! e 14) (set! g (our_code_starts_here (block (set! g false) (isbool false) -70 (- "e" 70)) (set! e (> -90 74)) (let ((j (let ((f 47) (j -8)) "f"))) (let ((d "y") (y false)) input)) true true (set! e (if true -99 "e")) (block (block -97 "g" 25)) (+ (block false true -44) (let ((b "g") (g -71)) "g")) (let ((x (= false "y"))) (set! g "x")))) (set! g (let ((f (< (set! e "e") (let ((b 80) (c -77) (y "b")) "c"))) (x (<= (let ((y "e")) 97) "e")) (b (* (if false "e" "e") (* "e" -96)))) (let ((d (block false false "x" "e")) (e true)) (set! b "b"))))) (break (let ((a (let ((f (let ((i "loop_var_199")) true))) (let ((b "e") (h -3)) false))) (g (if (block -59 true "loop_var_199" 65 false) (- "e" "e") 96)) (f (add1 (+ "g" 68)))) (let ((y (block false "f" "e" 32 false)) (d (let ((i "g")) false))) (block "e")))))))) (c (if (block (block (let ((h (block 3 true))) (let ((h "e") (z "e") (i "z")) true)) (block (isnum false) (isnum "g") (main 58 "e" "e") (> "h" 65) (- "e" "e")) (set! g (let ((loop_var_50 "h")) (loop (if (< loop_var_50 (+ "h" 50)) (block (set! loop_var_50 (+ loop_var_50 1)) (set! g "g") false) (break true)))))) (let ((z (set! g (let ((loop_var_32 "e")) (loop (if (< loop_var_32 (+ "e" 32)) (block (set! loop_var_32 (+ loop_var_32 1))) (break "g")))))) (x (<= (let ((z false) (j -19)) "e") (+ -15 -43))) (h (set! g (let ((loop_var_159 "h")) (let ((loop_var_96 "h")) (loop (if (> loop_var_96 (- "h" 96)) (block (set! loop_var_96 (- loop_var_96 1)) (set! y -15) (set! x "e") -40 "e") (break 52)))))))) (block (let ((f false) (y false)) "y") (- input "h"))) (<= (let ((e (* 99 "e")) (j (block false false)) (x (* -64 "h"))) (let ((loop_var_93 -64)) (loop (if (< loop_var_93 (+ -64 93)) (block (set! loop_var_93 (+ loop_var_93 1)) (set! g "x") (set! j "h") (set! x 54) "h") (break "loop_var_93"))))) (add1 (let ((a -86) (f "a") (c -17)) -83))) (set! y (add1 (let ((c false) (a "h") (i -66)) -29)))) (block (> (let ((y (let ((a false)) false))) (block "y" true "g" -79 "e")) (let ((y (* "e" 69))) (let ((g 4)) "g")))) (let ((loop_var_172 (set! g "e"))) (let ((loop_var_83 (- 77 93))) (loop (if (< loop_var_83 (+ (- 77 93) 83)) (block (set! loop_var_83 (+ loop_var_83 1))) (break false)))))))) (block (<= (block (block (let ((loop_var_3 89)) (loop (if (< loop_var_3 (+ 89 3)) (block (set! loop_var_3 (+ loop_var_3 1)) "g" "g") (break "g"))))) (let ((y (* "h" "h")) (e (let ((loop_var_146 "y")) (loop (if (< loop_var_146 (+ "y" 146)) (block (set! loop_var_146 (+ loop_var_146 1))) (break "e"))))) (h (sub1 46))) (sub1 -45)) (let ((c (let ((loop_var_137 85)) (let ((loop_var_114 84)) (loop (if (> loop_var_114 (- 84 114)) (block (set! loop_var_114 (- loop_var_114 1)) (set! c 41)) (break "h")))))) (f (let ((x false) (d 20)) "e"))) (let ((e "h")) "c")) (let ((z "h") (a false)) (set! h "a")) (let ((loop_var_155 50)) (loop (if (> loop_var_155 (- 50 155)) (block (set! loop_var_155 (- loop_var_155 1)) (set! c input) (set! h "e") (set! h 45) -100 -96) (break 46))))) (let ((loop_var_53 (set! h -53))) (loop (if (> loop_var_53 (- (set! h -53) 53)) (block (set! loop_var_53 (- loop_var_53 1)) (sub1 -77) (let ((z false)) 37) (our_code_starts_here "e" "c" input "y" "g" input 82 "h" true)) (break (set! g "h"))))))))) (block (let ((e (let ((j (let ((loop_var_90 (let ((z -10)) "z"))) (let ((loop_var_52 (our_code_starts_here -56 true -65 true true 14 -96 94 true))) (loop (if (> loop_var_52 (- (our_code_starts_here -56 true -65 true true 14 -96 94 true) 52)) (block (set! loop_var_52 (- loop_var_52 1)) (let ((c (>= -42 -44))) (block -59 19 -83 false true)) (block (* -54 -94) (<= 54 1) true (isbool false))) (break (let ((a (+ -46 -37))) (let ((z true)) false)))))))) (h (isbool (set! j (let ((e (fun2 -18 -72 "j" -41 "j" 17 82 false))) (let ((loop_var_129 -37)) (loop (if (> loop_var_129 (- -37 129)) (block (set! loop_var_129 (- loop_var_129 1)) (set! j false) (set! e false) true) (break true)))))))) (y (let ((loop_var_163 (set! h -99))) (let ((loop_var_100 (let ((f false)) -30))) (loop (if (> loop_var_100 (- (let ((f false)) -30) 100)) (block (set! loop_var_100 (- loop_var_100 1)) (set! h (block (let ((z input) (d "h") (f "z")) "f") (block false true true "j" -90) (< 28 -44) (isnum true) (isnum "j"))) (set! h (set! h (isnum "h"))) (set! h (<= (- -9 2) (block true true -92 3)))) (break (set! loop_var_100 (let ((b "loop_var_100") (z "j") (e "loop_var_100")) true))))))))) (let ((e (add1 (+ -85 (* -57 -32)))) (a (let ((z (let ((e (let ((loop_var_87 "e")) (let ((loop_var_178 "e")) (loop (if (> loop_var_178 (- "e" 178)) (block (set! loop_var_178 (- loop_var_178 1))) (break "j")))))) (f (- "e" "e")) (a (> "f" 43))) (* -59 "f"))) (e "j") (d (let ((g (let ((loop_var_155 74)) (loop (if (> loop_var_155 (- 74 155)) (block (set! loop_var_155 (- loop_var_155 1)) "z" "z" 74) (break "loop_var_155")))))) (let ((d true) (y input)) 28)))) "j"))) (our_code_starts_here (block (let ((x 38)) false) (block "e" false) (< "e" 50) (* "e" "e")) (block (<= "e" 43)) (set! a (+ "e" "e")) "a" (>= (let ((loop_var_145 input)) (let ((loop_var_140 -36)) (loop (if (< loop_var_140 (+ -36 140)) (block (set! loop_var_140 (+ loop_var_140 1)) (set! y -67) (set! h "e") "e" 22) (break -86))))) (block "h" false 80)) (block 50 (- "e" input) (set! y -42) (our_code_starts_here 36 true -60 "j" true -37 "e" "e" "j")) (set! e (let ((a true) (j 84) (x -43)) "e")) (block (sub1 "e")) "j")))) (f (add1 (let ((d (block (let ((f "e")) (let ((y "f") (e "e") (g 11)) true))))) (let ((loop_var_175 (set! d -64))) (loop (if (> loop_var_175 (- (set! d -64) 175)) (block (set! loop_var_175 (- loop_var_175 1)) (set! d (set! d "e")) (set! e (let ((c true) (f "d") (e "c")) -81))) (break (* "e" 24)))))))) (j (block (let ((x (let ((loop_var_32 (set! f "e"))) (loop (if (< loop_var_32 (+ (set! f "e") 32)) (block (set! loop_var_32 (+ loop_var_32 1)) false) (break (let ((i -99)) true))))))) (let ((z 48)) (let ((i (sub1 "z"))) (block -33 input -11)))) (block (add1 (let ((c (block -80))) (+ "c" -18))) false (let ((x (block (< "f" -18) (block false false))) (g (isbool (let ((y "f")) true)))) (+ (let ((loop_var_179 "f")) (loop (if (< loop_var_179 (+ "f" 179)) (block (set! loop_var_179 (+ loop_var_179 1)) (set! f 86) "e" 26) (break "loop_var_179")))) (block 70 "g" "f"))) (> "f" (add1 (block "f"))) (>= (block (let ((f false) (y true)) "y") (let ((h false) (d false) (c false)) 56)) 72)) (>= (let ((loop_var_102 (let ((x true)) "f"))) (loop (if (< loop_var_102 (+ (let ((x true)) "f") 102)) (block (set! loop_var_102 (+ loop_var_102 1)) (our_code_starts_here -7 false "f" true true -73 "f" "e" false) (set! e -47) (sub1 -65)) (break (set! loop_var_102 "loop_var_102"))))) (+ (sub1 (let ((loop_var_30 "f")) (let ((loop_var_28 -15)) (let ((loop_var_174 -93)) (loop (if (> loop_var_174 (- -93 174)) (block (set! loop_var_174 (- loop_var_174 1)) (set! e "e") (set! e "f") (set! f -17) "f") (break 68))))))) (let ((d "f") (g (>= -17 "d"))) (- -67 "e")))) (let ((g (+ (let ((d (if true 4 45)) (g (block 40)) (z (set! d 99))) (+ 89 81)) (- (+ -19 "f") (- input "f")))) (j (sub1 (- (add1 "e") (+ 81 -56)))) (d (block (let ((z (block input "e" "f"))) (isbool true)) (let ((h (+ "e" "g")) (y (add1 "j")) (i (<= 58 "j"))) (set! y false))))) (+ (+ (let ((i false)) 86) (let ((c "d") (e "e")) -6)) (block (- 91 -64) (* 19 "j") (+ -57 "f")))) (>= (add1 (let ((h (let ((d true) (x "d") (z true)) "z"))) (- "e" 57))) (add1 (sub1 (set! e "f"))))))) true) (let ((e (block true (> (let ((h (+ (let ((a false) (y 56)) 85) (- -55 23))) (z (let ((h (let ((loop_var_172 "h")) (loop (if (< loop_var_172 (+ "h" 172)) (block (set! loop_var_172 (+ loop_var_172 1)) (set! h 78) input) (break -46)))))) (let ((j -61)) true)))) input) (let ((loop_var_181 (our_code_starts_here 7 true 26 true false -62 23 44 false))) (let ((loop_var_194 (our_code_starts_here -98 false 33 true false 6 -93 60 false))) (loop (if (> loop_var_194 (- (our_code_starts_here -98 false 33 true false 6 -93 60 false) 194)) (block (set! loop_var_194 (- loop_var_194 1))) (break -49)))))) (* -94 (* (block (+ 1 -85) (let ((f 73) (j true) (e input)) 57)) (let ((y (our_code_starts_here 18 true 57 true false -90 48 -89 false)) (c (block true)) (h (= "y" -52))) (if 97 -81 -95)))) (our_code_starts_here (let ((c (let ((e (> -33 -1))) (block true "e" "e"))) (b (isnum (block "c" false "c"))) (i (<= (* -88 -96) (add1 96)))) 72) (isbool (block (if -37 true false) (fun1 80 98 -16 false true true false true))) (let ((d (isbool (<= -60 16))) (h true) (e (<= (+ -14 -69) (sub1 41)))) (let ((y (- 49 -63)) (a (+ -92 "y")) (h (+ -60 "y"))) (sub1 -55))) true (<= (add1 (block -92 70)) (our_code_starts_here (+ -28 -96) (let ((e false) (h -36) (a -17)) "e") (let ((g false) (e -44) (z "e")) input) (>= 1 49) (= true true) (block true true -91 input) (let ((g false)) -100) -70 (< -64 -79))) (let ((z (= -56 (let ((e false)) 1))) (a (set! z (let ((loop_var_109 -25)) (loop (if (> loop_var_109 (- -25 109)) (block (set! loop_var_109 (- loop_var_109 1)) -52) (break "loop_var_109")))))) (c (add1 (let ((y "a")) 47)))) (let ((a (* "a" 67)) (z (- -5 -65)) (f (isnum true))) (let ((loop_var_172 68)) (loop (if (> loop_var_172 (- 68 172)) (block (set! loop_var_172 (- loop_var_172 1)) (set! a input) (set! f input) (set! a -88) "a") (break "a")))))) (* (add1 (block 86 false -13)) (let ((loop_var_119 -58)) (loop (if (> loop_var_119 (- -58 119)) (block (set! loop_var_119 (- loop_var_119 1)) 5 -100) (break -49))))) (let ((h (let ((d (let ((x false) (g true)) false)) (x (block input))) "x")) (j (block (add1 "h") (< 99 3) (isbool false) (block true false false input))) (c (block (let ((b true)) "b") true))) (+ (- "h" "h") (let ((j 48) (g false)) -36))) (block (<= (let ((h false)) 40) input) (isnum (let ((a false) (g "a") (i false)) true)) (let ((loop_var_94 -86)) (loop (if (> loop_var_94 (- -86 94)) (block (set! loop_var_94 (- loop_var_94 1)) false) (break false)))) (= (isbool false) (if 69 false true)) (block (* 45 34) (block 64 -71 true false)))) (let ((h (sub1 (let ((c (> -57 21)) (d (block "c" true 24 "c" 94)) (j (let ((loop_var_198 "d")) (let ((loop_var_72 "d")) (let ((loop_var_166 "d")) (loop (if (< loop_var_166 (+ "d" 166)) (block (set! loop_var_166 (+ loop_var_166 1))) (break false)))))))) (+ -79 -60))))) (set! h (isbool (block false true true))))))) (sub1 (set! e (let ((loop_var_150 (let ((g 17)) 85))) (loop (if (< loop_var_150 (+ (let ((g 17)) 85) 150)) (block (set! loop_var_150 (+ loop_var_150 1))) (break (set! loop_var_150 "loop_var_150"))))))))))