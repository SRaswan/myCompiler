(fun (our_code_starts_here energy j f e) (if (<= energy 0) 49 (block (set! energy (- energy 1)) (let ((y (< (+ (set! energy "energy") (sub1 95)) (let ((a (let ((j 90) (y -56)) "f")) (f (> "energy" 22))) (* "energy" -5))))) (our_code_starts_here (set! j (fun2 "j" true "e" false "y" false 97 true 22)) (fun4 (- -17 27) "j" (set! y "j") (let ((f "y") (a "energy") (j true)) "j") (- -76 "energy") (main "j" 84 -48) (sub1 "energy")) (if (let ((f "j") (c true)) false) (isbool "f") (set! f "y")) (let ((x (let ((g true) (y "y")) "g")) (d "x")) "y"))))))
(fun (main energy g j) (if (<= energy 0) false (block (set! energy (- energy 1)) (< (sub1 (let ((y (block true "j" 15 "j"))) (add1 -74))) (block (let ((g (* 85 "g")) (z (block 88)) (c (* 5 "g"))) (+ 86 -23)))))))
(fun (fun1 energy a g f y c) (if (<= energy 0) -25 (block (set! energy (- energy 1)) (let ((d (>= (add1 (let ((b true) (d true)) "c")) (block (let ((i "y") (h -57) (e -12)) 2) (let ((c 64)) "y") (= -71 "c") (if 18 "f" "f") (fun1 -51 -66 "f" -83 "c" false)))) (e (<= (let ((a (let ((e "y") (y 78)) "g"))) (let ((d "g")) "a")) (let ((a (fun2 79 "f" "d" false true false "energy" "d" "y"))) (block "g" true false "y")))) (a (isnum (block (block false "d" false -13 "d") (set! d false) (< "energy" 14))))) (+ (+ (+ "g" "y") (sub1 38)) (sub1 (sub1 14)))))))
(fun (fun2 energy i x f d y j b c) (if (<= energy 0) 16 (block (set! energy (- energy 1)) (add1 (sub1 (block (let ((z "i") (h "z") (d "h")) "h") (let ((x "energy")) "i")))))))
(fun (fun3 energy y f j d x) (if (<= energy 0) true (block (set! energy (- energy 1)) (isbool (block 59 "j")))))
(fun (fun4 energy b h z e d y) (if (<= energy 0) false (block (set! energy (- energy 1)) (= (set! d (* (block -96 "energy" 81) (- "h" "h"))) (let ((d (isnum (<= -53 "e")))) (set! b (fun2 85 false "y" true "d" false "e" "y" 15)))))))
(fun (fun5 energy g) (if (<= energy 0) false (block (set! energy (- energy 1)) (set! energy (set! g (isnum (block "energy" false "g" -45 true)))))))
(fun (fun6 energy i h z c j d x a) (if (<= energy 0) true (block (set! energy (- energy 1)) (block (= (if (block "j" false 3 true) "a" "energy") (- (add1 "energy") (if -73 39 -89))) (set! a (isbool (block true true false 9 true))) (let ((c (add1 (sub1 9))) (b (< (block "i" "c" "h" "i") (let ((e "energy") (h -88)) 41)))) true)))))
(fun (fun7 energy y) (if (<= energy 0) false (block (set! energy (- energy 1)) (<= (+ (+ (let ((f true)) "y") (+ "energy" "energy")) (let ((g (* 46 35)) (x (block true))) (- "g" 6))) (set! y (set! y (let ((i 37) (b true)) 17)))))))
(fun (fun8 energy y x) (if (<= energy 0) -32 (block (set! energy (- energy 1)) (if (* (let ((c (let ((g "y")) "x")) (b -6)) (let ((y "x") (d "energy") (b 95)) 77)) (+ (fun2 46 true true false true false "y" "x" -46) (block "y" "y" 46 -87 -58))) (* (let ((h (>= "y" "y")) (f (<= 24 73)) (e (sub1 "y"))) (let ((a "f") (c false) (h -19)) -73)) 77) (block (+ (add1 -21) (- "y" "energy")) (isnum (let ((f -98) (d "y")) false)) (- (block "y") (let ((d 81) (c 82) (y true)) "d")) (* (set! energy -35) (let ((j "energy") (c "x") (b 11)) -6)) (block (set! x "y")))))))
(let ((loop_var_129 (fun2 -96 true true false true false -51 false input))) (loop (if (< loop_var_129 (+ (fun2 -96 true true false true false -51 false input) 129)) (block (set! loop_var_129 (+ loop_var_129 1))) (break (set! loop_var_129 (- (let ((e (let ((g (* (let ((f -58)) -37) (let ((h input)) "loop_var_129"))) (y (let ((y (isnum true))) (let ((i -6) (f -62)) "y")))) (set! loop_var_129 (- "loop_var_129" 9)))) (d (= (+ (if "loop_var_129" 61 "e") (block -66 input -28)) (fun8 (set! loop_var_129 "loop_var_129") (let ((a false) (b false)) "b") (isnum true)))) (g (= (add1 (set! d "e")) (* (sub1 58) (block 66 false 74 false 3))))) (set! g (sub1 (let ((d false)) 53)))) (let ((f (fun7 (- (+ "loop_var_129" "loop_var_129") (block true 70)) (let ((i (block 21)) (b (+ 83 "loop_var_129")) (x (* -70 -70))) (block true "b")))) (i (- (let ((h (block "loop_var_129" false)) (b "loop_var_129") (a "b")) (- 6 "a")) (let ((j (+ "loop_var_129" -62)) (z (let ((a true) (z "a") (d "j")) true)) (f (isbool "z"))) (if "f" -95 "loop_var_129")))) (e (< (* (let ((d "loop_var_129") (z false)) "d") (let ((c "f") (g -32) (a false)) -2)) (let ((y (let ((g "f") (b -32)) "b")) (h (<= -69 "i"))) 7)))) (- (block (isbool true) (* -52 -14) (block "loop_var_129" false 52) (- "i" -100)) (block (block false "e" -28 true) (block true 79) (let ((h "e") (a "e")) "i") (let ((y "loop_var_129") (g -49)) true) (if true "loop_var_129" -13))))))))))