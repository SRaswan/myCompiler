(fun (our_code_starts_here energy) (if (<= energy 0) 22 (block (set! energy (- energy 1)) (set! energy (- (* (- "energy" -67) 32) (block (let ((g 8) (z "g") (x -34)) false) true (sub1 "energy")))))))
(fun (main energy z f d b) (if (<= energy 0) true (block (set! energy (- energy 1)) (block (block (if 0 (let ((x true)) true) (main 21 "f" 88 true "b")) (+ (if "b" "energy" 14) (- -53 -100)) (if (sub1 "energy") (let ((j "b") (x "d")) "x") (let ((y true)) 9)) (- (let ((c "b") (d "z") (h "c")) "z") -82)) (set! d (fun4 (- 31 -35) (<= -71 -100) (isnum "b")))))))
(fun (fun1 energy) (if (<= energy 0) false (block (set! energy (- energy 1)) (set! energy (isbool (let ((e (let ((a "energy")) true)) (z (fun7 "energy"))) (set! e "e")))))))
(fun (fun2 energy j y) (if (<= energy 0) 61 (block (set! energy (- energy 1)) (- (block (let ((j (* "j" -27))) (= true true)) (* (fun6 "y" true "y" false) 67) true (block (set! y -6)) (set! j (let ((e 56)) 87))) (if (let ((h (block true -61 true true 57)) (c (add1 -54))) (let ((i "j")) true)) (let ((f (< -99 "j")) (x (set! y true)) (a (fun7 -54))) -51) (block (set! energy "energy")))))))
(fun (fun3 energy x d z y) (if (<= energy 0) true (block (set! energy (- energy 1)) (< (set! d (let ((d (let ((d "energy") (a false) (g true)) false))) (- 43 "x"))) (set! y (if (if "energy" "energy" "y") (set! x "d") (add1 63)))))))
(fun (fun4 energy y a) (if (<= energy 0) false (block (set! energy (- energy 1)) (if "a" (> (+ 10 (let ((a "a")) 43)) (sub1 "y")) "a"))))
(fun (fun5 energy f i) (if (<= energy 0) true (block (set! energy (- energy 1)) (> (block (block (* -47 13) (isbool true) (> "energy" 85)) "f") (- (- "f" (sub1 "energy")) (set! f (block "energy" true false -98)))))))
(fun (fun6 energy i c f) (if (<= energy 0) -67 (block (set! energy (- energy 1)) (let ((c (let ((a (block (+ "energy" "i") (block "f" true 48 false -49) (block "energy" "c" "c"))) (b (let ((j (* "energy" "f"))) (sub1 "f")))) (- (block "b" "a" -76) (sub1 19)))) (h (set! c (+ -28 (* 67 -16))))) (our_code_starts_here (let ((c (let ((b 34) (i -1) (y false)) "y")) (y (isbool false))) (set! c 61)))))))
(fun (fun7 energy) (if (<= energy 0) 0 (block (set! energy (- energy 1)) 83)))
(isnum (block (* (block true (let ((x (let ((d (let ((loop_var_11 39)) (let ((loop_var_176 61)) (loop (if (< loop_var_176 (+ 61 176)) (block (set! loop_var_176 (+ loop_var_176 1))) (break 13))))))) (set! d (set! d "d"))))) (> (add1 (block -14 true "x")) (let ((c (let ((b 15) (f true) (e false)) "e")) (f 76)) (block input "c" 79)))) -41) (let ((g (= (main (block (block false true) (>= -41 81) (* -49 68) (< 7 32) (* -83 -69)) (let ((i (let ((f -79) (d 3) (j true)) "f"))) (block "i" "i" "i" false true)) (block (= 89 -31) (isbool true) (* -95 -38) (block false -9 false 27 39)) (< (sub1 58) (fun2 75 44 81)) (<= (let ((a true) (h -38)) "h") (block 3 -16 79 false -58))) (let ((i true) (x (+ (let ((d 75)) 77) (let ((e -49) (x "i") (a -84)) "a"))) (h (sub1 (block "i" -28)))) (block (block true "x" -4) (let ((loop_var_186 "x")) (loop (if (< loop_var_186 (+ "x" 186)) (block (set! loop_var_186 (+ loop_var_186 1))) (break -96)))) 71 (= "x" 4) (>= -39 -31))))) (f (< (block (let ((x (sub1 -20)) (c (let ((h -43)) "g"))) (isnum false)) (block (* -31 78) (block true true false 29))) (let ((j (let ((loop_var_189 52)) (let ((loop_var_64 6)) (loop (if (> loop_var_64 (- 6 64)) (block (set! loop_var_64 (- loop_var_64 1)) 59 -70) (break "loop_var_64"))))))) (let ((y (let ((e false)) true)) (c (block "y" "j" 77 input input)) (a (- "c" "c"))) -66)))) (i (let ((loop_var_25 (if -46 50 79))) (loop (if (> loop_var_25 (- (if -46 50 79) 25)) (block (set! loop_var_25 (- loop_var_25 1))) (break (let ((h true) (x (set! loop_var_25 -67))) (= input "loop_var_25")))))))) (let ((loop_var_13 (block input))) (loop (if (< loop_var_13 (+ (block input) 13)) (block (set! loop_var_13 (+ loop_var_13 1)) (set! g (sub1 (block -26 97 -2))) (set! g (add1 (block input "g" 55))) (set! i (sub1 (- -37 86))) (set! i (- 34 -1)) (- (* 51 35) (add1 22)) (- (set! f 5) (block false -90 1))) (break (fun7 (let ((c "f") (b false)) 30))))))))))