(fun (our_code_starts_here energy x e c h f a j y) (if (<= energy 0) -90 (block (set! energy (- energy 1)) (- (block (sub1 (* 44 -95)) "c") (add1 (block (let ((i "energy") (b "j") (e false)) false) (set! e "j") true (block "energy" false false "f" 76)))))))
(fun (main energy c z g y h j x e) (if (<= energy 0) false (block (set! energy (- energy 1)) (block (> (+ "c" (* "x" -53)) (* (let ((a "x")) "x") (* "j" 24))) (block (if (set! energy true) (< 43 "j") (set! j true)) (isbool (= 17 "j")) (* (block true false "c") (fun2 "x" "j" true))) true))))
(fun (fun1 energy) (if (<= energy 0) -64 (block (set! energy (- energy 1)) (* (let ((j (< (add1 "energy") (+ "energy" -44)))) (fun3 (let ((y "j") (f "energy") (h false)) "energy") (+ "energy" "energy") (block false) (if true true "j") (let ((y -67)) -61))) (+ -12 (let ((y (* 76 "energy")) (z (= "y" "energy")) (a (+ "y" -71))) (let ((b "z") (a true) (g true)) "a")))))))
(fun (fun2 energy y d) (if (<= energy 0) -76 (block (set! energy (- energy 1)) (* (let ((g (let ((b (+ -80 82)) (z (block true -78))) (block true "z" 72))) (b (let ((h (= -14 "g")) (i (let ((z -42)) 92))) (sub1 "g")))) (- (set! d 84) (block true true 92 "g" -33))) (let ((c (if (let ((i -11)) 69) (let ((i "energy")) false) (= "energy" 58))) (z (set! d (add1 85))) (i "z")) "z")))))
(fun (fun3 energy y h c z) (if (<= energy 0) -90 (block (set! energy (- energy 1)) (sub1 (* (block (let ((b 38) (g false) (i "c")) "y") (+ "energy" "h") (block -23 -61 "y" "c") (let ((a "h")) 23) (set! c "energy")) (block (= "y" "energy") (isbool true) (block "z" "energy") (block "c" false 26 true 17) (* 8 "h")))))))
(block (main (let ((h (block (- (- (let ((h (isnum false)) (e (+ -57 43))) (block false false 64)) (let ((loop_var_39 99)) (loop (if (< loop_var_39 (+ 99 39)) (block (set! loop_var_39 (+ loop_var_39 1))) (break -46))))) (let ((f (let ((z (let ((i false) (z 5) (b -34)) "b")) (e (block 8)) (i (let ((b 25) (f true) (h "f")) "z"))) (block "z" 54 false false)))) (add1 (* 71 -64)))) (* (let ((loop_var_175 (let ((a false)) -58))) (let ((loop_var_102 (if -93 -75 13))) (loop (if (< loop_var_102 (+ (if -93 -75 13) 102)) (block (set! loop_var_102 (+ loop_var_102 1))) (break (let ((b false) (c "loop_var_102")) 83)))))) 17) 91 (add1 (let ((a (* (block false false 19 false -59) (fun3 7 1 true false 44))) (e (>= "a" 86)) (h (let ((f -36)) (let ((a "a") (e 6) (f 55)) -22)))) (set! e (let ((h true) (a "h")) "h")))) (let ((z (block (>= -32 -24) (block (>= 4 17) (if true 80 60) true) (let ((a (> -39 -2)) (z (+ -27 95))) (main 49 "z" true "a" "z" "z" -67 "a" -83)) (let ((loop_var_129 32)) (let ((loop_var_145 -54)) (loop (if (< loop_var_145 (+ -54 145)) (block (set! loop_var_145 (+ loop_var_145 1)) 64 89 -63) (break 66))))) (block (isbool true)))) (c (let ((y (fun1 (let ((loop_var_113 23)) (loop (if (< loop_var_113 (+ 23 113)) (block (set! loop_var_113 (+ loop_var_113 1)) (set! z -89) (set! z -79)) (break "loop_var_113")))))) (d (let ((c (let ((j 47) (e true)) -11)) (j (if "y" 64 "c"))) (let ((e -13)) -43))) (j (let ((b (let ((b -47)) "y"))) (let ((i true)) "b")))) true))) (block 12 (block (let ((f false)) -3)) (block (let ((b 80) (x true)) 83) (* -2 64) (block true true -22 true "c") (let ((g "z") (j true)) -51) (if "z" 13 94)) (let ((loop_var_120 -96)) (loop (if (< loop_var_120 (+ -96 120)) (block (set! loop_var_120 (+ loop_var_120 1))) (break true))))))))) (sub1 (set! h 70))) (- (sub1 (let ((a (let ((loop_var_150 -17)) (loop (if (> loop_var_150 (- -17 150)) (block (set! loop_var_150 (- loop_var_150 1)) (= true false)) (break (< "loop_var_150" 61)))))) (x (= (block (let ((h -49)) input) (- 9 14)) (let ((loop_var_119 -98)) (loop (if (< loop_var_119 (+ -98 119)) (block (set! loop_var_119 (+ loop_var_119 1)) (set! a -71) (set! a 90) 10 -6) (break "loop_var_119")))))) (e (<= (let ((loop_var_34 1)) (loop (if (> loop_var_34 (- 1 34)) (block (set! loop_var_34 (- loop_var_34 1)) 15 23 -14) (break 27)))) (block -66)))) (let ((h (let ((z (set! x 48)) (y (block 6 -92)) (j (sub1 "z"))) (let ((h -46) (e false) (f "e")) -67))) (a (set! a (let ((c "h")) input)))) (sub1 "h")))) (let ((loop_var_121 (+ -92 -42))) (loop (if (< loop_var_121 (+ (+ -92 -42) 121)) (block (set! loop_var_121 (+ loop_var_121 1))) (break (- (set! loop_var_121 (let ((z "loop_var_121")) "loop_var_121")) "loop_var_121")))))) (main (- (let ((loop_var_111 (+ -93 45))) (loop (if (> loop_var_111 (- (+ -93 45) 111)) (block (set! loop_var_111 (- loop_var_111 1)) -53) (break (let ((e (set! loop_var_111 4)) (h (<= -22 "loop_var_111")) (y (block "e" input))) (set! e "e")))))) (if (let ((e (let ((f (let ((a false) (f "a") (z "f")) "z"))) (let ((i false)) "f"))) (b (let ((x (- 20 -94)) (h (let ((h "e") (z "x") (i "z")) "h")) (j (isbool true))) (let ((loop_var_47 -64)) (loop (if (> loop_var_47 (- -64 47)) (block (set! loop_var_47 (- loop_var_47 1)) (set! j 10) (set! x "x")) (break 100))))))) (isnum (>= 15 "b"))) (let ((c (= (- -47 -71) (let ((j 64) (d -55) (g false)) "d"))) (e (let ((loop_var_14 76)) (loop (if (< loop_var_14 (+ 76 14)) (block (set! loop_var_14 (+ loop_var_14 1)) "c" "c") (break "c"))))) (z "c")) (add1 (if false -77 -58))) (let ((loop_var_30 21)) (loop (if (< loop_var_30 (+ 21 30)) (block (set! loop_var_30 (+ loop_var_30 1)) -24) (break (- "loop_var_30" "loop_var_30"))))))) (sub1 (+ (sub1 (let ((e (+ -66 88))) (set! e "e"))) (sub1 (add1 77)))) (let ((j (block (let ((b (- (block false 36 false 11) 90)) (j (+ (* -55 -10) (let ((j false)) -55))) (x (let ((j (let ((loop_var_29 "b")) (let ((loop_var_76 "b")) (loop (if (> loop_var_76 (- "b" 76)) (block (set! loop_var_76 (- loop_var_76 1)) -94 "b") (break "loop_var_76")))))) (x (>= 70 -80)) (d (= "x" "x"))) (+ 40 "j")))) (let ((loop_var_42 "b")) (loop (if (> loop_var_42 (- "b" 42)) (block (set! loop_var_42 (- loop_var_42 1)) (set! b false) (set! x false) (set! b true)) (break true))))) (let ((f (+ (sub1 -2) (* -98 -54))) (d (let ((loop_var_188 "f")) (loop (if (< loop_var_188 (+ "f" 188)) (block (set! loop_var_188 (+ loop_var_188 1))) (break "f")))))) (block (* "f" 39) (* "f" "f") (block false))))) (b (<= (add1 (- (let ((loop_var_51 -52)) (loop (if (< loop_var_51 (+ -52 51)) (block (set! loop_var_51 (+ loop_var_51 1)) (set! j 21) (set! j 19) 13) (break 20)))) (add1 68))) (let ((loop_var_37 (let ((j -30) (x input) (z -67)) "z"))) (let ((loop_var_187 57)) (loop (if (> loop_var_187 (- 57 187)) (block (set! loop_var_187 (- loop_var_187 1)) (set! j (let ((i true)) -95)) (set! j (- 15 58)) (set! j (add1 88)) (- -77 -16)) (break (add1 -54))))))))) (block (block (let ((g (fun1 -71)) (a (let ((z false) (b "g") (c "b")) -10)) (z (= true "j"))) (let ((j true) (z "j")) "g")) (if (if input -33 45) (let ((loop_var_140 -82)) (loop (if (< loop_var_140 (+ -82 140)) (block (set! loop_var_140 (+ loop_var_140 1)) (set! j 38)) (break "loop_var_140")))) (add1 -71))) (- (let ((c (- 76 65)) (y (- 97 "c"))) (add1 "y")) (block (let ((a 94) (x true)) "a"))) (our_code_starts_here (sub1 -11) (set! j 35) (block (* 49 -43) -63 (set! b false) (* 44 -48) (let ((c input) (b "j")) -58)) (let ((a (add1 11)) (g (set! b "a"))) (sub1 "a")) (block (let ((d -9) (f 97) (x 56)) "b") (let ((g 46) (a false)) true) (let ((h 37) (a 67) (i 78)) true) (>= -7 -45) (- 91 -37)) (>= 59 (let ((loop_var_32 -65)) (let ((loop_var_73 13)) (let ((loop_var_55 98)) (loop (if (> loop_var_55 (- 98 55)) (block (set! loop_var_55 (- loop_var_55 1))) (break "loop_var_55"))))))) (set! j (block false false "b")) (block (if 8 true input) (<= 58 -78)) (block (let ((loop_var_123 -29)) (loop (if (< loop_var_123 (+ -29 123)) (block (set! loop_var_123 (+ loop_var_123 1))) (break 83)))) (= false input) (let ((loop_var_192 -20)) (let ((loop_var_194 -52)) (let ((loop_var_159 -17)) (loop (if (< loop_var_159 (+ -17 159)) (block (set! loop_var_159 (+ loop_var_159 1)) (set! j "j") (set! b true) true) (break false)))))) (let ((b 57)) "j"))) (block (let ((e (let ((e "j") (f input) (d 0)) input)) (b (sub1 38))) (let ((e "j")) -81)) (+ (add1 -57) (set! j -58)) (block (< -58 -91))) (let ((loop_var_59 (if "j" 50 16))) (loop (if (< loop_var_59 (+ (if "j" 50 16) 59)) (block (set! loop_var_59 (+ loop_var_59 1)) (set! b (block "b")) (set! b (block true)) (set! b (main 48 -65 true true -78 -1 -82 true 5))) (break (< -84 "loop_var_59"))))))) (> (let ((loop_var_125 (let ((i -47) (d -87) (x false)) 36))) (loop (if (< loop_var_125 (+ (let ((i -47) (d -87) (x false)) 36) 125)) (block (set! loop_var_125 (+ loop_var_125 1))) (break (- (fun1 43) (- 69 "loop_var_125")))))) (let ((c -11) (x (isnum (let ((g "c")) (let ((z true) (i "c") (b input)) true))))) "c")) (sub1 (block (if (< (let ((j -98) (i 17)) "j") (- 52 2)) (- (* -20 90) (let ((h true)) -87)) (* (+ -43 22) (let ((i false) (e -41) (f "e")) -82))) (let ((h (let ((loop_var_95 -62)) (loop (if (< loop_var_95 (+ -62 95)) (block (set! loop_var_95 (+ loop_var_95 1))) (break "loop_var_95"))))) (y (block (+ "h" "h") (let ((loop_var_26 "h")) (loop (if (> loop_var_26 (- "h" 26)) (block (set! loop_var_26 (- loop_var_26 1)) (set! h "h") (set! h -73) 91 75) (break 47)))) (>= 64 "h") (block 87 false 10) (isbool false))) (g (isbool (< "h" "h")))) (let ((j (+ "h" "h")) (b (let ((z "h")) 58)) (x (let ((y 50)) "h"))) (let ((e 33) (j 88)) "h"))))) (let ((loop_var_87 (+ 51 -56))) (loop (if (> loop_var_87 (- (+ 51 -56) 87)) (block (set! loop_var_87 (- loop_var_87 1))) (break (our_code_starts_here (let ((a "loop_var_87") (d (let ((f true)) "f"))) (block "d" "loop_var_87")) (block (- 18 -39) (isnum false) (set! loop_var_87 true) (if "loop_var_87" "loop_var_87" "loop_var_87") (set! loop_var_87 0)) (set! loop_var_87 (let ((b "loop_var_87") (g "loop_var_87")) 73)) (* (- "loop_var_87" "loop_var_87") (- "loop_var_87" "loop_var_87")) (* (block true "loop_var_87" "loop_var_87" 33) (- 78 "loop_var_87")) (isbool (> "loop_var_87" -61)) (let ((j (> 81 17)) (g (+ "loop_var_87" 12)) (c (let ((y -50) (c -91) (z "y")) "loop_var_87"))) (isbool "j")) (set! loop_var_87 (>= "loop_var_87" 44)) (= (block true true) (let ((g "loop_var_87") (e false) (y -75)) false))))))) (let ((d (let ((d (let ((d (let ((h (<= 35 17))) false)) (y (isnum (> 97 -46))) (j (let ((b (block 48 0)) (z true)) (let ((d "b") (j "z")) false)))) (let ((loop_var_69 28)) (let ((loop_var_28 -11)) (loop (if (< loop_var_28 (+ -11 28)) (block (set! loop_var_28 (+ loop_var_28 1))) (break false)))))))) (block (let ((d (<= -20 -96)) (x true)) (if -31 32 83)) (add1 (set! d -37)) (let ((y (let ((a "d") (g "d") (y 1)) "y")) (z (= -26 57)) (e (let ((j "y") (z "y")) "j"))) (= true "d")) (> (let ((loop_var_16 -13)) (loop (if (> loop_var_16 (- -13 16)) (block (set! loop_var_16 (- loop_var_16 1)) (set! d -90) (set! d 52) (set! d 2)) (break -5)))) (let ((loop_var_167 70)) (let ((loop_var_131 39)) (loop (if (< loop_var_131 (+ 39 131)) (block (set! loop_var_131 (+ loop_var_131 1)) (set! d 69) (set! d 15) -91 -84) (break 7)))))))))) (let ((loop_var_192 (+ 70 77))) (let ((loop_var_51 (block -69))) (loop (if (< loop_var_51 (+ (block -69) 51)) (block (set! loop_var_51 (+ loop_var_51 1))) (break (- (let ((d "d") (a "d") (f "loop_var_51")) "loop_var_51") 71))))))) (= (main (add1 (let ((loop_var_4 -47)) (loop (if (> loop_var_4 (- -47 4)) (block (set! loop_var_4 (- loop_var_4 1)) -63) (break "loop_var_4"))))) 57 true (isbool (let ((j 76)) (let ((e true)) "e"))) (* (- (block 17 false -11 true -39) (let ((loop_var_112 60)) (loop (if (< loop_var_112 (+ 60 112)) (block (set! loop_var_112 (+ loop_var_112 1))) (break 91))))) (let ((b (block -34 false false true 46))) (* "b" -85))) -8 (let ((y (>= (+ 40 -14) (sub1 -70))) (h (if true (let ((loop_var_91 -34)) (let ((loop_var_182 73)) (loop (if (< loop_var_182 (+ 73 182)) (block (set! loop_var_182 (+ loop_var_182 1))) (break "y"))))) false)) (f -76)) (let ((y (isnum "h")) (g "f") (i (sub1 -37))) (- "i" 48))) (block (let ((d (+ 36 -46)) (h (= true false)) (a (block true "d"))) (let ((y "a") (j true)) -27)) (<= (let ((loop_var_85 42)) (let ((loop_var_95 80)) (loop (if (> loop_var_95 (- 80 95)) (block (set! loop_var_95 (- loop_var_95 1)) 7 -72 -88) (break "loop_var_95"))))) (if true -91 -63)) (block true (< -24 95)) (+ (block 28 48 false -67) (sub1 -97)) (> (* 94 54) -88)) (let ((d (let ((h -87) (g (<= 4 2)) (z (let ((loop_var_142 31)) (loop (if (< loop_var_142 (+ 31 142)) (block (set! loop_var_142 (+ loop_var_142 1)) "g") (break true)))))) (add1 "h"))) (h (* (our_code_starts_here -70 -21 48 -41 "d" false false input false) (sub1 72)))) (* (* "d" "h") (let ((loop_var_79 "h")) (loop (if (< loop_var_79 (+ "h" 79)) (block (set! loop_var_79 (+ loop_var_79 1)) (set! d "h") -96 "h") (break "h"))))))) (= (let ((loop_var_136 (+ -63 21))) (loop (if (> loop_var_136 (- (+ -63 21) 136)) (block (set! loop_var_136 (- loop_var_136 1))) (break "loop_var_136")))) 63)) (* (let ((f (main (let ((f (>= 5 -21))) (* -59 -14)) (let ((i (let ((loop_var_183 51)) (let ((loop_var_95 -86)) (loop (if (< loop_var_95 (+ -86 95)) (block (set! loop_var_95 (+ loop_var_95 1))) (break true)))))) (c input) (a (sub1 62))) (let ((z "c") (h -66) (y "h")) 48)) (isnum (> -64 52)) (>= (if false 31 16) -24) (block (isnum true) -98) 17 -58 true (let ((d (let ((loop_var_112 -98)) (loop (if (> loop_var_112 (- -98 112)) (block (set! loop_var_112 (- loop_var_112 1))) (break true)))))) (* -6 -63))))) (* (let ((e (if 70 "f" "f")) (c (let ((b false) (a -92) (d "b")) "d")) (g (block "e" -69))) (let ((loop_var_61 54)) (loop (if (> loop_var_61 (- 54 61)) (block (set! loop_var_61 (- loop_var_61 1))) (break "loop_var_61"))))) (let ((z (set! f "f")) (e true)) (block -65 false 53)))) (let ((g (block (let ((loop_var_108 34)) (loop (if (> loop_var_108 (- 34 108)) (block (set! loop_var_108 (- loop_var_108 1))) (break -65)))) -57)) (b (< (let ((c (let ((x true)) "g")) (y (* "g" -24)) (j (let ((y true) (a "g") (d "g")) true))) 74) (- (+ -46 87) (* "g" "g"))))) (sub1 (let ((x (isnum "b"))) (* "g" "g")))))) true (let ((b (<= (+ (let ((y (let ((e (isbool input))) (let ((g -52) (i "g")) -21)))) -78) (add1 (block (block false false 77) (isbool true) (let ((loop_var_86 28)) (let ((loop_var_115 -86)) (let ((loop_var_143 48)) (loop (if (< loop_var_143 (+ 48 143)) (block (set! loop_var_143 (+ loop_var_143 1)) 46) (break "loop_var_143"))))))))) (* (sub1 (if (if 53 false false) (our_code_starts_here 30 33 -71 100 54 true true false false) (let ((c 75)) -23))) (let ((i (block (* -86 31) (add1 -21)))) (set! i (* "i" "i"))))))) (set! b (block (<= 54 (+ (+ 11 -97) (let ((b "b") (h -75)) "h"))) (let ((x (let ((c (let ((x true) (g 56) (a -72)) -35))) (set! b "c"))) (g (block (let ((loop_var_195 58)) (let ((loop_var_103 "x")) (loop (if (> loop_var_103 (- "x" 103)) (block (set! loop_var_103 (- loop_var_103 1)) (set! x "b") (set! x true)) (break true))))))) (b (block (let ((f "x")) true)))) (* (let ((i 42) (f 14) (y 60)) 30) (let ((z input) (f "g")) -60))) (isnum (= (sub1 -46) -90)) (>= (+ (let ((c "b")) 100) (fun3 -30 40 false "b" -55)) (let ((f (let ((i -88)) "i")) (g (- -1 -53)) (h (let ((loop_var_145 49)) (loop (if (< loop_var_145 (+ 49 145)) (block (set! loop_var_145 (+ loop_var_145 1)) (set! b "g") (set! g "g") (set! g 97) "f" "f") (break "f")))))) "h")) (let ((loop_var_33 (* -16 -64))) (loop (if (< loop_var_33 (+ (* -16 -64) 33)) (block (set! loop_var_33 (+ loop_var_33 1))) (break (add1 29)))))))) (block (>= (block (isnum (block (let ((d 31)) false))) 25) (let ((y (main (block (let ((e -47)) "e") (let ((loop_var_175 -89)) (let ((loop_var_131 -73)) (let ((loop_var_195 -4)) (loop (if (> loop_var_195 (- -4 195)) (block (set! loop_var_195 (- loop_var_195 1))) (break "loop_var_195")))))) (+ -18 80) (let ((loop_var_189 -37)) (let ((loop_var_39 80)) (loop (if (< loop_var_39 (+ 80 39)) (block (set! loop_var_39 (+ loop_var_39 1)) 93) (break -24)))))) (let ((y (let ((loop_var_132 55)) (loop (if (< loop_var_132 (+ 55 132)) (block (set! loop_var_132 (+ loop_var_132 1))) (break false)))))) (* -1 -85)) (isbool (block false false)) (let ((loop_var_61 -15)) (loop (if (< loop_var_61 (+ -15 61)) (block (set! loop_var_61 (+ loop_var_61 1)) false) (break false)))) (block (if 38 true false) (let ((y 79) (a false)) false) (let ((loop_var_109 -48)) (let ((loop_var_42 -27)) (loop (if (< loop_var_42 (+ -27 42)) (block (set! loop_var_42 (+ loop_var_42 1))) (break "loop_var_42"))))) (let ((b 66) (a true) (y "b")) "b") (sub1 -47)) (add1 (let ((loop_var_153 -59)) (let ((loop_var_105 -21)) (let ((loop_var_175 -89)) (loop (if (> loop_var_175 (- -89 175)) (block (set! loop_var_175 (- loop_var_175 1))) (break 16))))))) (- (let ((a -19) (c -45) (f -6)) "a") (let ((loop_var_98 43)) (loop (if (> loop_var_98 (- 43 98)) (block (set! loop_var_98 (- loop_var_98 1))) (break -89))))) (if (isbool true) (<= 10 7) (main 32 55 true false -94 34 -34 true 72)) (let ((b (= true true))) (add1 -53))))) (block (block (block true "y" 96 98 true) (let ((loop_var_148 -41)) (loop (if (< loop_var_148 (+ -41 148)) (block (set! loop_var_148 (+ loop_var_148 1)) "y" -82 "y") (break "y")))) (+ "y" 67) (> -40 31) (let ((g false) (f true)) "f")) (let ((y (block true 27 "y" -9))) true) (- (- -91 -56) (let ((b "y")) 96)) (+ (* "y" -74) (let ((loop_var_174 -34)) (loop (if (< loop_var_174 (+ -34 174)) (block (set! loop_var_174 (+ loop_var_174 1)) (set! y "y") (set! y "y")) (break -10)))))))) (let ((z (let ((y (let ((x true) (d (let ((loop_var_147 4)) (loop (if (< loop_var_147 (+ 4 147)) (block (set! loop_var_147 (+ loop_var_147 1)) (set! x -38) (set! x -46)) (break -8))))) (g (* (let ((loop_var_160 "d")) (let ((loop_var_83 -52)) (loop (if (> loop_var_83 (- -52 83)) (block (set! loop_var_83 (- loop_var_83 1)) (set! x 88) "d" 45) (break "d"))))) (let ((loop_var_40 "d")) (loop (if (> loop_var_40 (- "d" 40)) (block (set! loop_var_40 (- loop_var_40 1)) "d" 83 42) (break -35))))))) -79))) (<= "y" (add1 (add1 "y"))))) (x (fun3 -5 -1 (> (block (let ((z "z") (x "z") (g false)) 59) (< 7 -11) (let ((loop_var_58 -98)) (loop (if (< loop_var_58 (+ -98 58)) (block (set! loop_var_58 (+ loop_var_58 1)) (set! z -90) 41 -60 76) (break -8))))) (block (<= -12 66) (let ((a 81) (j false) (h "a")) "a"))) (isbool (<= (block false 53 56 65 3) (* -65 -72))) (let ((h (block (let ((z -64) (f "z")) false))) (c "z")) (block (>= -47 25) (block 44))))) (f (let ((z (* (+ (- "x" "x") -53) (let ((loop_var_95 "x")) (loop (if (< loop_var_95 (+ "x" 95)) (block (set! loop_var_95 (+ loop_var_95 1)) (set! z "x") (set! z "x") 14) (break "loop_var_95"))))))) (let ((y (sub1 (let ((j "z") (d false) (b "z")) 66)))) (let ((g "x")) (let ((loop_var_83 "y")) (let ((loop_var_165 "x")) (let ((loop_var_146 "g")) (loop (if (> loop_var_146 (- "g" 146)) (block (set! loop_var_146 (- loop_var_146 1)) (set! z true) (set! y true)) (break input))))))))))) (let ((c (= (let ((loop_var_83 "x")) (loop (if (> loop_var_83 (- "x" 83)) (block (set! loop_var_83 (- loop_var_83 1))) (break "f")))) (set! f (> "x" 90)))) (g input) (f 24)) (block (let ((e (>= 67 "x")) (x (block "f")) (j (set! z "f"))) "e") (block (set! g "c") (let ((loop_var_121 -35)) (loop (if (> loop_var_121 (- -35 121)) (block (set! loop_var_121 (- loop_var_121 1)) (set! x true) "z" "c") (break false)))) (set! x false) (block "x" input false 32 false) (let ((j "f") (b false)) false)) (let ((i "z")) (let ((i input) (e "x") (h true)) true)) (let ((x (let ((d true) (g -30) (y 58)) "f")) (a (set! g true))) (let ((loop_var_194 "x")) (loop (if (> loop_var_194 (- "x" 194)) (block (set! loop_var_194 (- loop_var_194 1))) (break true))))) (<= (let ((f "f") (b "x") (x true)) 54) (let ((h false)) 61))))) (sub1 11)) (let ((loop_var_48 (let ((b true) (c "b") (j "c")) 2))) (loop (if (> loop_var_48 (- (let ((b true) (c "b") (j "c")) 2) 48)) (block (set! loop_var_48 (- loop_var_48 1)) (- 41 (+ (fun3 (block false -100) (- -10 -7) (if 38 true false) (isnum true) (fun1 -69)) (- (if false -92 -92) (if -48 -49 0)))) (let ((b (> -80 (+ -89 (if -95 74 94)))) (x (if (fun3 (* -91 -52) (- 28 -61) (let ((d true) (f "b")) "d") (block -43 -72 "b" false) (+ 26 -67)) (isnum (let ((f 83)) true)) (<= (let ((h -5)) -35) (* -42 -56))))) (- (set! x (- -58 1)) (+ (* 31 25) (let ((a -49)) "a"))))) (break (let ((i (sub1 (block "loop_var_48" (block input -6 input "loop_var_48" "loop_var_48") (let ((d -93) (y 2) (f true)) false) (< -73 "loop_var_48") (block true "loop_var_48" 99))))) (set! i (let ((h (let ((c true) (a "i")) -7)) (z (set! i true)) (c (set! loop_var_48 "loop_var_48"))) (fun3 71 "loop_var_48" "z" "z" 18)))))))) true (block (isbool (if (let ((g -30) (x (let ((loop_var_182 "g")) (let ((loop_var_26 96)) (loop (if (< loop_var_26 (+ 96 26)) (block (set! loop_var_26 (+ loop_var_26 1))) (break "loop_var_26")))))) (a (let ((x (set! x 91)) (j (let ((loop_var_185 "x")) (let ((loop_var_168 "x")) (let ((loop_var_159 "x")) (loop (if (> loop_var_159 (- "x" 159)) (block (set! loop_var_159 (- loop_var_159 1)) true false true) (break false))))))) (a (let ((loop_var_17 55)) (loop (if (< loop_var_17 (+ 55 17)) (block (set! loop_var_17 (+ loop_var_17 1))) (break "j")))))) (let ((h "x")) 40)))) (> (fun1 "g") (let ((j "g")) 44))) (let ((a (if false (block 14 -15 -63 64 true) (if -16 false false))) (e (let ((b (let ((f -93) (h "f")) false)) (y (= 41 36)) (d false)) -89)) (b (let ((j (let ((loop_var_12 92)) (loop (if (> loop_var_12 (- 92 12)) (block (set! loop_var_12 (- loop_var_12 1)) (set! a -20) (set! e -28) (set! a 73)) (break -91))))) (d (block -71 "a" "e"))) (set! j -4)))) (<= (- 12 56) (- 89 -96))) (< -17 (let ((a (fun2 -14 -83 true)) (i (block 73 true false "a"))) (let ((b 87)) "b"))))) (- 67 (block (let ((i (fun2 (- 17 -54) (let ((z 68) (x true) (i "z")) -3) (let ((g false)) "g"))) (y (set! i (let ((loop_var_7 58)) (let ((loop_var_200 -47)) (loop (if (> loop_var_200 (- -47 200)) (block (set! loop_var_200 (- loop_var_200 1)) (set! i "i") (set! i true)) (break "i"))))))) (b (> (+ 68 72) (let ((d "i") (z "d") (c false)) -99)))) (let ((b (fun1 -83)) (d "i")) (let ((d false)) "y"))) (+ -86 (if (let ((g -41) (e true)) "g") (block true 90 -91 true 17) (fun1 53))))))) (fun3 (fun2 (let ((f (* (block (- (let ((z false)) 1) (let ((g input) (c -24) (j "g")) "c")) (if (let ((c -68) (x "c") (g true)) "g") (- 88 80) -85)) (let ((g (= (isnum true) (main 61 60 false false 84 29 -59 false -73))) (y (let ((i -39) (y (let ((h "g")) "i"))) (+ 41 37))) (b (let ((f (= 63 "y")) (i (let ((a "f") (x -68)) true)) (a (let ((y "g")) "f"))) (isbool "i")))) "y")))) (block (>= (+ (add1 -58) (let ((loop_var_186 -22)) (loop (if (< loop_var_186 (+ -22 186)) (block (set! loop_var_186 (+ loop_var_186 1)) -95 "f" "f") (break -92))))) (+ (+ 81 "f") "f")) (- (if (isbool false) (+ -93 67) (* "f" "f")) (set! f (let ((loop_var_94 -80)) (let ((loop_var_167 21)) (let ((loop_var_4 -57)) (loop (if (< loop_var_4 (+ -57 4)) (block (set! loop_var_4 (+ loop_var_4 1))) (break "f")))))))))) (let ((g (isbool (main (let ((f false) (g (let ((a 85) (b "f")) input))) (+ 73 -56)) (* (block 42 -3 true -58) (let ((loop_var_126 51)) (let ((loop_var_117 23)) (let ((loop_var_23 -26)) (loop (if (< loop_var_23 (+ -26 23)) (block (set! loop_var_23 (+ loop_var_23 1))) (break "loop_var_23"))))))) input (isnum (isnum true)) (* (* 0 4) (let ((c 65)) -17)) -81 (* (+ -90 -82) (let ((loop_var_55 -5)) (loop (if (> loop_var_55 (- -5 55)) (block (set! loop_var_55 (- loop_var_55 1)) -27) (break -8))))) (let ((y (let ((j false) (b false) (c 21)) 71)) (j (let ((f false) (z false)) "y")) (f (add1 "j"))) (isbool true)) (* (* -98 -68) (* 27 48))))) (x (block (= 78 (+ (sub1 65) (let ((h -50) (d "h") (i "h")) "h"))) (let ((a (- (let ((loop_var_27 -28)) (loop (if (< loop_var_27 (+ -28 27)) (block (set! loop_var_27 (+ loop_var_27 1))) (break "loop_var_27")))) (block 2))) (i (let ((c (>= -5 "a")) (g (let ((g false) (f "c")) false))) (> "a" "a"))) (z (+ (let ((loop_var_167 -97)) (let ((loop_var_18 "a")) (loop (if (> loop_var_18 (- "a" 18)) (block (set! loop_var_18 (- loop_var_18 1))) (break -25))))) (block "g" false "a")))) (- (sub1 -57) 24)))) (d (block (<= (block (block 17 24 "x" "x") (block 12 "g" -26 "x" input) (let ((x "g") (j "g")) "g") (set! g "x")) (let ((c (>= "x" "x")) (d (block "x" "x")) (x (set! d false))) (- -34 89))) (block (if (if "x" -59 "x") -59 (if 58 -44 "x")) (let ((loop_var_163 "x")) (loop (if (> loop_var_163 (- "x" 163)) (block (set! loop_var_163 (- loop_var_163 1)) "g" "g" false) (break "g")))) (add1 (block "x" 63)) (- (+ -75 "x") (- "x" 61)) "g")))) (let ((i (block (block (let ((h "x") (e -57)) "g") (> 71 "x") (< "x" -62) (block "x" false)) (let ((c (+ -49 "x"))) (let ((loop_var_66 10)) (loop (if (< loop_var_66 (+ 10 66)) (block (set! loop_var_66 (+ loop_var_66 1)) (set! c "x")) (break "x")))))))) (let ((d "x")) (let ((loop_var_70 "x")) (let ((loop_var_113 46)) (let ((loop_var_172 "i")) (loop (if (> loop_var_172 (- "i" 172)) (block (set! loop_var_172 (- loop_var_172 1)) (set! x 18) (set! d "d") -12 -82) (break -74))))))))) (let ((loop_var_117 (sub1 -100))) (loop (if (> loop_var_117 (- (sub1 -100) 117)) (block (set! loop_var_117 (- loop_var_117 1)) false (main (* (our_code_starts_here -56 4 9 21 87 false true false true) (+ -6 95)) (our_code_starts_here (our_code_starts_here 90 68 -94 65 -100 false true true input) (let ((b true)) -83) (let ((g false)) -7) (fun3 45 71 false false 68) (block 42 false true false 82) (< 60 43) (< -37 0) (main 82 -78 true true 82 97 -40 false -70) (if -1 true true)) (<= (block 71 false 19 -45 -97) (let ((a -31) (h false)) "a")) (> (fun1 88) (add1 3)) (if (let ((z -72) (f "z")) false) (let ((z -53) (i true) (x "i")) "z") (block true 32 2)) (block (add1 62)) -71 (main (our_code_starts_here 83 -63 -83 6 -50 true true false false) (- -87 24) (block 85 false input false) (if 62 false false) (+ -69 37) (+ -67 -54) (+ 72 -90) (let ((c false) (i false) (g "i")) true) (sub1 -97)) (let ((a (<= 55 -41)) (f (block -18 -13 "a" 10))) (+ "f" 33)))) (break (let ((c (= (set! loop_var_117 true) (> 79 "loop_var_117"))) (h (let ((i (if "c" "c" "c")) (c "i") (z (set! i "c"))) (>= 77 "loop_var_117"))) (x "h")) (> (fun3 "loop_var_117" 15 true "h" -99) (- "loop_var_117" "loop_var_117")))))))) (let ((x (main (let ((i 59)) (block (let ((loop_var_84 85)) (loop (if (< loop_var_84 (+ 85 84)) (block (set! loop_var_84 (+ loop_var_84 1)) (set! i -40) "i") (break "loop_var_84")))) (let ((loop_var_35 0)) (loop (if (> loop_var_35 (- 0 35)) (block (set! loop_var_35 (- loop_var_35 1)) "i") (break 72)))))) (* (our_code_starts_here 36 (let ((loop_var_39 78)) (loop (if (> loop_var_39 (- 78 39)) (block (set! loop_var_39 (- loop_var_39 1)) -28 -3 -73) (break 79)))) (- 53 (fun3 -33 32 false false -40)) (if (* 29 -92) (+ 77 55) (- -53 52)) -1 (let ((e (+ -84 88)) (z (let ((loop_var_100 "e")) (let ((loop_var_49 "e")) (loop (if (< loop_var_49 (+ "e" 49)) (block (set! loop_var_49 (+ loop_var_49 1)) (set! e 68) (set! e "e") 36 "e") (break -4))))))) (let ((j input)) "j")) (block (let ((b true) (j 85) (x "j")) false) (let ((loop_var_69 -48)) (loop (if (> loop_var_69 (- -48 69)) (block (set! loop_var_69 (- loop_var_69 1)) true true) (break true)))) (let ((z false) (h "z") (x true)) input)) (block (<= -66 -53)) (let ((e (let ((h false)) 30))) (let ((loop_var_172 "e")) (loop (if (> loop_var_172 (- "e" 172)) (block (set! loop_var_172 (- loop_var_172 1))) (break false)))))) (let ((i (isnum (if 49 true false))) (b true) (j (- (block 62 87) (- -1 55)))) (add1 (our_code_starts_here 65 92 "j" "j" -15 "i" "b" "i" "b")))) (< 42 (+ (- (block 47 90 55) (let ((loop_var_92 -43)) (let ((loop_var_39 -77)) (let ((loop_var_36 1)) (loop (if (< loop_var_36 (+ 1 36)) (block (set! loop_var_36 (+ loop_var_36 1))) (break -38))))))) (+ (+ 32 -27) (let ((loop_var_161 79)) (loop (if (> loop_var_161 (- 79 161)) (block (set! loop_var_161 (- loop_var_161 1)) 1) (break "loop_var_161"))))))) (let ((loop_var_198 (- -83 1))) (loop (if (< loop_var_198 (+ (- -83 1) 198)) (block (set! loop_var_198 (+ loop_var_198 1)) (>= (if 52 28 -62) (let ((y false)) -99)) (let ((c false) (g (block -99))) true)) (break (block "loop_var_198" (let ((z true) (f "loop_var_198")) "z") (let ((f 3)) 13) false))))) (- (let ((loop_var_116 (let ((b true) (z "b")) 94))) (let ((loop_var_158 (- -67 -61))) (loop (if (> loop_var_158 (- (- -67 -61) 158)) (block (set! loop_var_158 (- loop_var_158 1)) (if 5 39 -52) (let ((c 90)) -12) (- 10 -37)) (break (set! loop_var_158 "loop_var_158")))))) (sub1 (let ((c (block false false 84 73 true)) (e (>= -42 -94)) (x (let ((y "e") (h 27)) "c"))) (let ((b -84)) 83)))) (let ((loop_var_67 (* 42 -30))) (loop (if (< loop_var_67 (+ (* 42 -30) 67)) (block (set! loop_var_67 (+ loop_var_67 1))) (break (set! loop_var_67 (let ((j true) (z input) (d "j")) "loop_var_67")))))) -86 (block (let ((y (- (sub1 -15) -49))) (let ((d (let ((e true)) 17)) (i (+ "y" "y"))) (- "i" 75))) (add1 (block (isnum false) (block false -71 true) (fun2 -90 -76 false))) (block (> (- -21 -88) (block -88 18 38)) (let ((y (block false false input -35))) (let ((i false) (x -74) (c false)) "y")) (let ((loop_var_73 -10)) (loop (if (> loop_var_73 (- -10 73)) (block (set! loop_var_73 (- loop_var_73 1)) 93 -35 -51) (break "loop_var_73")))) (block (let ((z 27)) "z") -23) (let ((loop_var_82 67)) (loop (if (> loop_var_82 (- 67 82)) (block (set! loop_var_82 (- loop_var_82 1))) (break false)))))) (fun1 (+ (fun2 (let ((d false) (a true)) 40) (let ((f false) (e 34)) -95) (< -21 -86)) (- (block -4) (block 42 56 false 82)))))) (z (let ((loop_var_200 (add1 91))) (loop (if (> loop_var_200 (- (add1 91) 200)) (block (set! loop_var_200 (- loop_var_200 1)) (main (block -17 (set! x true) (set! x 8)) 8 (isnum (block 61 -98 46 false)) (<= (+ -44 -42) (block -61 "x" 9 "x" -88)) (add1 (set! x -100)) (let ((y (block 3 39)) (i "y")) (+ "i" "i")) (if (< 15 -93) (block -74 "x" -41) (block -48)) (main (let ((i false) (g 96) (f "g")) -48) (block -46) (< 24 88) (<= 44 -18) (if -32 28 -90) (block false 26 "x" 22) (* -74 82) (let ((h "x")) true) (block "x" false "x" -18)) (block (let ((y 67)) "x") (block false -90 30) (block -54 4 false -50 15) (= 46 -74) (let ((i "x") (d 11) (c "i")) "d"))) (set! x (let ((h (set! x 68))) (< "h" -1)))) (break (>= (set! x (set! loop_var_200 "loop_var_200")) (block (let ((b -45) (j 21)) "x") (let ((f true)) "loop_var_200"))))))))) (block (* (- (* (let ((b -38) (h true) (i "b")) "b") (+ -89 -77)) (let ((e (+ 50 -86)) (a (* 28 "e"))) (if false "e" -8))) (* (* (- 30 54) (let ((j "x") (z -2) (y "z")) 3)) (block (<= 85 6) (= -85 -50) (let ((loop_var_165 -10)) (loop (if (> loop_var_165 (- -10 165)) (block (set! loop_var_165 (- loop_var_165 1))) (break "loop_var_165")))) (let ((j "z") (d -76)) 73)))))) (block (- (+ (sub1 (let ((b true) (c (<= 55 72))) (let ((h false)) 98))) (sub1 (let ((loop_var_147 28)) (loop (if (> loop_var_147 (- 28 147)) (block (set! loop_var_147 (- loop_var_147 1)) -65) (break "loop_var_147")))))) (let ((z true)) (+ (- (* -42 94) (block 15 true -68)) 38))) (+ (- (sub1 (sub1 81)) 67) (add1 (- (let ((loop_var_16 -33)) (loop (if (< loop_var_16 (+ -33 16)) (block (set! loop_var_16 (+ loop_var_16 1))) (break "loop_var_16")))) (let ((h true)) -52)))) (<= (+ (- (add1 (let ((e true) (a "e")) -52)) (fun1 (- 81 34))) (* (let ((c (let ((loop_var_157 30)) (loop (if (> loop_var_157 (- 30 157)) (block (set! loop_var_157 (- loop_var_157 1))) (break "loop_var_157"))))) (y (sub1 88))) (let ((loop_var_179 22)) (let ((loop_var_116 "c")) (loop (if (< loop_var_116 (+ "c" 116)) (block (set! loop_var_116 (+ loop_var_116 1)) (set! c 61) (set! c "c") (set! y 38) "y") (break 37)))))) (let ((loop_var_121 -90)) (loop (if (< loop_var_121 (+ -90 121)) (block (set! loop_var_121 (+ loop_var_121 1)) -2 13 48) (break 8)))))) (let ((g (block (isnum (isbool true)) (> (* 31 0) (block true -68)))) (y (let ((loop_var_22 (block "g" false -3 true -81))) (loop (if (< loop_var_22 (+ (block "g" false -3 true -81) 22)) (block (set! loop_var_22 (+ loop_var_22 1)) (set! g (add1 -13)) (let ((c true) (j "g") (b true)) -41) (block "g" "g" -86) (- -31 -41)) (break (* "loop_var_22" "loop_var_22"))))))) (let ((c (> (- -49 "y") (set! g "y"))) (x (set! y (- 91 "y"))) (y (our_code_starts_here (let ((e 39)) -92) (let ((d "c")) 29) (- "x" 77) (let ((h "x") (i "h")) -47) (if 8 -3 "y") (block "c") (main "x" "x" "c" "g" 85 -38 "y" true 79) (let ((f "g") (j false)) false) (>= -11 -46)))) (- (- "x" 21) (+ "y" "y"))))) (* 72 (let ((loop_var_151 (block 8))) (loop (if (> loop_var_151 (- (block 8) 151)) (block (set! loop_var_151 (- loop_var_151 1))) (break (* (let ((d "loop_var_151")) -67) (block true -79 true 4))))))) (>= (our_code_starts_here (let ((loop_var_137 (add1 -18))) (let ((loop_var_16 (let ((x -1) (f false)) -84))) (loop (if (> loop_var_16 (- (let ((x -1) (f false)) -84) 16)) (block (set! loop_var_16 (- loop_var_16 1)) (- -40 -41) (+ 40 8) (if -45 -55 26)) (break (block "loop_var_16" "loop_var_16" -41)))))) (+ (if (+ -13 -70) 70 (if 47 -42 76)) (sub1 (add1 -91))) (+ (block (+ 58 17)) -18) (let ((y (let ((e (block false)) (a (set! e "e")) (c (+ 84 36))) "c")) (j (+ (+ 63 "y") (let ((loop_var_139 21)) (loop (if (< loop_var_139 (+ 21 139)) (block (set! loop_var_139 (+ loop_var_139 1))) (break -91))))))) (let ((x true)) (block -38 "j" -9 "x" 90))) (fun2 (let ((g (block 56 true)) (f (let ((c true)) true))) (set! g 3)) (let ((loop_var_187 -56)) (let ((loop_var_32 51)) (loop (if (< loop_var_32 (+ 51 32)) (block (set! loop_var_32 (+ loop_var_32 1)) 98) (break -78))))) (let ((b (let ((f false) (a -17)) "a")) (i (isbool false)) (e (block "i" "i" 57 "b" "i"))) (let ((j 39)) "e"))) (< (+ (add1 21) (block false -97 -35)) (let ((loop_var_35 -88)) (let ((loop_var_126 -18)) (let ((loop_var_100 83)) (loop (if (> loop_var_100 (- 83 100)) (block (set! loop_var_100 (- loop_var_100 1)) 87 -1) (break "loop_var_100"))))))) (let ((loop_var_76 41)) (loop (if (> loop_var_76 (- 41 76)) (block (set! loop_var_76 (- loop_var_76 1))) (break (if -24 true false))))) (isbool (main (- -91 -91) (block 2 false true -16) (main 17 -83 true input -88 51 -88 false 22) (< 96 -11) (* -66 -53) -98 (let ((h true) (g 87) (f "g")) "g") (= -56 21) -76)) (< (* 37 (block 38 45)) (block (>= -4 -26) (block 20 -28 -92) (block false -64 false false true) (+ -98 89) 31))) (let ((g (isbool (let ((h (let ((z -84) (e false) (j "z")) "e")) (a (- 1 -98))) (let ((z false) (h 93)) false)))) (i (set! g (set! g (* 79 22))))) (let ((i (>= (+ -27 81) (* "i" "i"))) (d (let ((i (< "i" -80)) (e (let ((loop_var_121 -8)) (loop (if (< loop_var_121 (+ -8 121)) (block (set! loop_var_121 (+ loop_var_121 1)) "g" false "i") (break true)))))) (let ((x "i") (h "x")) "h")))) "i")))) (main -54 (* (let ((e (let ((loop_var_142 (+ 12 -70))) (loop (if (< loop_var_142 (+ (+ 12 -70) 142)) (block (set! loop_var_142 (+ loop_var_142 1)) (block false false true)) (break (isbool true))))))) (* (block (set! e 53)) (add1 (let ((g false) (x -6)) "x")))) (let ((loop_var_174 52)) (loop (if (> loop_var_174 (- 52 174)) (block (set! loop_var_174 (- loop_var_174 1)) (let ((g (block true false 47 -78 -54))) (block 69 64)) (- (let ((e false)) -49) (fun2 20 -11 input)) (- (block false 80 false 91 20) (let ((i true)) 89))) (break (let ((b (= "loop_var_174" "loop_var_174")) (d "loop_var_174") (i (isnum "b"))) (fun3 -7 "d" "i" input "loop_var_174"))))))) (< (fun3 (- (* (sub1 -30) (* 56 -13)) (block (let ((loop_var_24 77)) (let ((loop_var_3 -73)) (loop (if (< loop_var_3 (+ -73 3)) (block (set! loop_var_3 (+ loop_var_3 1)) -24 27 -85) (break -93))))) (* 15 -34))) (block (fun3 (block 93 false -24) (if false 6 -38) (isbool true) (let ((loop_var_54 -53)) (loop (if (> loop_var_54 (- -53 54)) (block (set! loop_var_54 (- loop_var_54 1))) (break false)))) (let ((b false)) 60))) (isbool (isbool (let ((j -12) (f false) (d "j")) false))) (let ((g (isbool (> -92 7)))) (let ((i "g")) (let ((loop_var_78 20)) (loop (if (< loop_var_78 (+ 20 78)) (block (set! loop_var_78 (+ loop_var_78 1)) (set! i input) (set! g "g") (set! i true) true) (break false)))))) (- 38 (let ((b (let ((loop_var_130 74)) (let ((loop_var_130 8)) (let ((loop_var_58 -37)) (loop (if (< loop_var_58 (+ -37 58)) (block (set! loop_var_58 (+ loop_var_58 1))) (break true))))))) (e (+ 83 -77)) (z (set! b "e"))) (let ((b "e")) 21)))) (+ (* (- (block false -40 31 -32) (let ((e false) (b -9) (a "e")) "b")) (if (= false false) (let ((a 59) (z false) (j true)) "a") (let ((j 86) (f 65)) 34))) (* 84 (* (sub1 -22) 43)))) true (let ((h (let ((j (* (* (- -60 -11) (add1 -64)) (sub1 (* 6 -54)))) (a (sub1 (let ((y (= false true)) (d (let ((i "j") (j -67) (h -27)) true))) (add1 "j")))) (g (if (block (sub1 "j") (>= -82 62) -95 (let ((a true)) -31) (block false "a" "a" true false)) (block (< 64 -52) (block false 49 -2)) (let ((loop_var_125 "j")) (loop (if (< loop_var_125 (+ "j" 125)) (block (set! loop_var_125 (+ loop_var_125 1)) -87 "a") (break "loop_var_125"))))))) (block (let ((d (- "g" 25))) (let ((z "a") (x true) (h false)) -59)) (let ((loop_var_55 "g")) (let ((loop_var_22 -4)) (loop (if (> loop_var_22 (- -4 22)) (block (set! loop_var_22 (- loop_var_22 1)) (set! j "a") (set! a "j") "j" "a") (break "loop_var_22"))))) (let ((x (- -46 "j")) (f (block "a" true)) (a (- "a" -66))) (let ((b true)) false)) (block (block -73) (let ((e true) (y 78)) "e") (+ "j" "j")) (block (>= -53 -29) (let ((z true)) "g")))))) (block (block (set! h (let ((b "h") (h 80) (a true)) "b")) (+ (let ((loop_var_110 -99)) (loop (if (> loop_var_110 (- -99 110)) (block (set! loop_var_110 (- loop_var_110 1)) (set! h "h") (set! h -1)) (break -85)))) (* 17 "h"))) (let ((b false)) (<= "h" (fun1 -75))) -7)) (our_code_starts_here (block 38 (let ((d (let ((d -18)) (block "d" "d"))) (i (set! d (isbool true))) (c (+ (sub1 "d") (sub1 44)))) (< (block "i" -56 true "c") (set! c "c"))) (let ((y (- (block 62 90 100 35 26) (let ((loop_var_117 -25)) (let ((loop_var_195 -1)) (loop (if (> loop_var_195 (- -1 195)) (block (set! loop_var_195 (- loop_var_195 1))) (break -62))))))) (d (let ((y (block 43 "y" false true true)) (z (our_code_starts_here 87 13 "y" "y" "y" false true "y" true))) (set! y "y")))) (* (block -12) (* "d" "d"))) (let ((y (< -44 (+ 69 30))) (h (block (let ((b false) (z true)) true) (let ((j false)) "j"))) (d (block (let ((j -47) (a 43) (d "j")) "y") (= false "y") (let ((e "h") (z -56) (i 41)) "i") -5 true))) true) (let ((c (if (fun3 90 83 true false 23) (let ((h true) (y -88) (z false)) 79) (let ((g 55)) "g"))) (f (let ((g -33)) (- "c" "c"))) (y (add1 (set! c 66)))) (set! y (- "y" 41)))) (+ 31 (let ((a (let ((b (block true false false 98 false)) (d (block 15 2))) (< -73 "d")))) (add1 -23))) (+ (if (if -42 (let ((b -81)) false) (isnum true)) (block (let ((g true) (i "g") (c 86)) "i") (* -26 -47)) (block (* 34 89) (block 30 true false 48))) (block -88)) (let ((y true) (g (<= (let ((b (= "y" true))) (let ((d "b") (b input)) 86)) (+ (set! y -9) (+ -86 -74))))) (let ((e (let ((e (* -17 4))) (<= 60 "e"))) (c (set! g (> 92 99))) (d (let ((g (block 59)) (y (let ((loop_var_121 -62)) (loop (if (< loop_var_121 (+ -62 121)) (block (set! loop_var_121 (+ loop_var_121 1)) (set! c true) (set! e "y") false true "c") (break "g")))))) (block "g" 48 -64 true false)))) (let ((loop_var_17 19)) (let ((loop_var_185 -43)) (loop (if (> loop_var_185 (- -43 185)) (block (set! loop_var_185 (- loop_var_185 1)) (set! d 63)) (break "loop_var_185"))))))) (- -39 (sub1 (add1 (* -40 45)))) (block (sub1 (if true (add1 -36) (fun1 62))) (block (* (- -30 -48) (block -66))) (let ((i (let ((z (main 4 -2 false true -20 -79 71 false -46)) (b (let ((loop_var_115 -59)) (let ((loop_var_108 -87)) (loop (if (> loop_var_108 (- -87 108)) (block (set! loop_var_108 (- loop_var_108 1)) (set! z true)) (break true))))))) (<= 8 -95)))) (* (block 2 true -86) (fun1 -2))) (let ((loop_var_102 (+ 23 93))) (loop (if (< loop_var_102 (+ (+ 23 93) 102)) (block (set! loop_var_102 (+ loop_var_102 1))) (break (= true true))))) (let ((a (fun1 -22)) (h (let ((y (sub1 -63)) (f (sub1 "y")) (d true)) (let ((y "f") (i -90)) true))) (i (let ((b 92) (h (let ((z "a") (a "b") (d "a")) "h"))) (block "b" "h" false)))) "i")) (let ((loop_var_44 (block false false false -31))) (loop (if (> loop_var_44 (- (block false false false -31) 44)) (block (set! loop_var_44 (- loop_var_44 1))) (break (< (set! loop_var_44 4) (let ((b "loop_var_44") (y false)) 42)))))) (isbool (block (= (if true true false) (main 72 -34 true true -57 -98 -19 false -32)) (let ((d (let ((f true) (c true) (d "c")) -91)) (g (let ((c false)) false)) (b (< 32 -7))) "g") (if (block true true 68 -76 true) (* -73 -32) (let ((x true) (h 95)) "h")) (block (let ((loop_var_106 -98)) (loop (if (> loop_var_106 (- -98 106)) (block (set! loop_var_106 (- loop_var_106 1)) -50 -42) (break "loop_var_106")))) (sub1 -24) (block true -66 -30) (main 37 -40 input false 97 17 -48 false 6) (let ((j 6)) true)) (let ((h (< 18 -81))) (> -46 -98)))) (let ((loop_var_188 -77)) (loop (if (> loop_var_188 (- -77 188)) (block (set! loop_var_188 (- loop_var_188 1)) (main (if false -31 35) (block false 50) (block true) (let ((y false) (d 91) (x "d")) false) (+ 7 31) (let ((x 14)) "x") (add1 -44) (<= -92 50) 14) true) (break (set! loop_var_188 (main "loop_var_188" "loop_var_188" false true "loop_var_188" -25 "loop_var_188" false "loop_var_188"))))))) (block 2 (if (let ((loop_var_188 (let ((h true) (y -77) (g 61)) -85))) (loop (if (< loop_var_188 (+ (let ((h true) (y -77) (g 61)) -85) 188)) (block (set! loop_var_188 (+ loop_var_188 1))) (break 44)))) (if (* (let ((z -79) (a "z")) 27) 67) (let ((i (let ((i false)) -82)) (y (sub1 "i")) (z true)) -14) (our_code_starts_here (let ((y false)) -64) (* -55 75) (- 4 61) (- 98 -48) -49 (if false false false) (main -63 6 true true -19 66 87 true 57) (< 16 6) (let ((h 50) (i "h") (e false)) "e"))) (+ (let ((g (let ((loop_var_95 47)) (loop (if (< loop_var_95 (+ 47 95)) (block (set! loop_var_95 (+ loop_var_95 1))) (break "loop_var_95"))))) (e (add1 "g")) (z "g")) (let ((g true) (c "e") (f "e")) "g")) (add1 (+ 91 -3)))) (let ((loop_var_115 (our_code_starts_here -53 2 12 8 47 false true false true))) (loop (if (> loop_var_115 (- (our_code_starts_here -53 2 12 8 47 false true false true) 115)) (block (set! loop_var_115 (- loop_var_115 1))) (break (block true (isnum false) (add1 -21) (let ((x "loop_var_115") (i "x") (y false)) -59)))))) (+ (sub1 (- (block -67) (if true -72 31))) -59)) (= (> -55 (* (- (block 41) (block true -47 true -21)) (block (<= -48 97) (= -32 -73) (< -92 -98) (- 91 62)))) (> 100 (fun1 62))) (- (- (block (fun3 (fun2 -54 -98 true) (block -67) (if true true false) true (let ((loop_var_29 -35)) (loop (if (< loop_var_29 (+ -35 29)) (block (set! loop_var_29 (+ loop_var_29 1))) (break "loop_var_29"))))) (let ((c (let ((e true) (z true) (a false)) false))) (let ((a 34) (b "c") (e "a")) 42)) (block (let ((f 21) (g "f") (d true)) "d") (+ 54 5) (let ((loop_var_21 -46)) (let ((loop_var_22 96)) (loop (if (< loop_var_22 (+ 96 22)) (block (set! loop_var_22 (+ loop_var_22 1))) (break 23))))) (>= 55 -20) (* 44 -92)) (let ((i (sub1 48))) (block "i"))) 65) (* (let ((y (sub1 (block -97 false -46)))) (- (let ((z true)) "y") (block false false "y" "y"))) (let ((loop_var_106 (sub1 54))) (loop (if (< loop_var_106 (+ (sub1 54) 106)) (block (set! loop_var_106 (+ loop_var_106 1))) (break (block -38)))))))) (block (> (let ((loop_var_197 (fun1 -17))) (loop (if (< loop_var_197 (+ (fun1 -17) 197)) (block (set! loop_var_197 (+ loop_var_197 1))) (break (+ (set! loop_var_197 -97) (- -19 "loop_var_197")))))) -22) (+ (block (block (block (let ((c true) (j input) (d false)) false) (let ((loop_var_190 -30)) (loop (if (< loop_var_190 (+ -30 190)) (block (set! loop_var_190 (+ loop_var_190 1)) -19 -86 -33) (break 20)))))) (if (sub1 (block -70 false 11 84 -82)) (= false (if -23 true true)) (isnum (if 21 true true))) (add1 (+ (* 43 55) (block 64 false 19)))) (let ((g (sub1 (if true (block input true true false 66) (+ -27 -73)))) (f (let ((loop_var_125 (if true -4 40))) (loop (if (> loop_var_125 (- (if true -4 40) 125)) (block (set! loop_var_125 (- loop_var_125 1))) (break (if false false true)))))) (b (<= (let ((a (* "g" 82)) (b (block 13 "f" "a" "a" -42)) (d (let ((loop_var_104 -82)) (loop (if (< loop_var_104 (+ -82 104)) (block (set! loop_var_104 (+ loop_var_104 1)) "f" false) (break "f")))))) (let ((h false) (f -58)) "g")) (- (block "g") (block "g" "f" "g" -48 "g"))))) (let ((e (block "g" false (- "g" 83))) (i (isnum false))) (* 6 (let ((g "e") (c 24)) "g"))))) (+ 26 (our_code_starts_here (+ (let ((f (isnum true))) -15) (let ((d (+ 32 -9)) (a (isbool true)) (x (+ -43 "d"))) "d")) (block (+ (+ 15 38) (sub1 -72)) (- (block 16 30 false 69) (let ((c -15) (h 75)) 85)) (fun1 52)) (- (let ((loop_var_15 86)) (loop (if (< loop_var_15 (+ 86 15)) (block (set! loop_var_15 (+ loop_var_15 1))) (break 0)))) (if (> 98 20) (block false true false 1) (+ 6 -32))) (let ((c (block (let ((e true) (c -37) (h false)) -23))) (y (block (* "c" "c") (set! c 96))) (j (if (block false 59 "y" true false) (main "c" -36 true false 29 "c" "y" false -87) true))) (let ((h (block "j" -28 false "c" "c")) (g -59)) (block 9 -36 "y"))) 30 (let ((loop_var_81 (+ -77 -43))) (loop (if (> loop_var_81 (- (+ -77 -43) 81)) (block (set! loop_var_81 (- loop_var_81 1))) (break (block "loop_var_81" "loop_var_81" "loop_var_81" false))))) (isnum (block (+ 68 0) (* -70 33) (* 69 -37) (let ((loop_var_187 -29)) (loop (if (< loop_var_187 (+ -29 187)) (block (set! loop_var_187 (+ loop_var_187 1))) (break false)))) (< 18 -16))) (isbool (block -92 (<= -53 61) (add1 -45) (main -62 -83 true true 53 27 91 true -62) (main -72 -15 false false 54 2 -35 false -14))) (let ((b (let ((b (sub1 75)) (j false)) (- 95 11))) (i (<= (block -60) (let ((loop_var_7 "b")) (loop (if (< loop_var_7 (+ "b" 7)) (block (set! loop_var_7 (+ loop_var_7 1)) (set! b "b") (set! b 43)) (break -96)))))) (a (block (add1 21) (let ((e "b") (y "b") (f "y")) "e") (>= "b" 18)))) (<= (- "b" -78) (let ((b true) (j -25) (y "b")) "b"))))))))