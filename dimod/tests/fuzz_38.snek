(fun (our_code_starts_here energy) (if (<= energy 0) 68 (block (set! energy (- energy 1)) (* (+ (let ((b (let ((h "energy")) 52)) (x (< 69 "b"))) (set! b 95)) (set! energy (let ((f 47)) "energy"))) (let ((z (isbool false)) (j (main (block false "z" "energy" true "energy") (our_code_starts_here -16) (< -27 25)))) (+ (let ((a -36)) -39) (* "energy" "energy")))))))
(fun (main energy g y) (if (<= energy 0) true (block (set! energy (- energy 1)) (< (let ((a (- (set! y 27) (let ((x "g")) -28))) (z (block (let ((x 22) (g false) (d 35)) true) (set! a false) (block 25 true true "y" -3) (- -23 "a")))) (let ((x (set! z "g")) (a (>= "a" -6)) (h (>= 1 43))) (add1 "energy"))) (fun2 (add1 (block "y")) -53 (if (block 62 "y" false) true (let ((d -89) (j "y")) true)) (set! g (let ((f false) (x "f") (z "y")) "energy")))))))
(fun (fun1 energy z h j g x e) (if (<= energy 0) -90 (block (set! energy (- energy 1)) (+ 54 (if (fun1 (+ -2 "j") (main "energy" "z" "h") "g" (set! energy "energy") (add1 "x") (let ((j "x")) false) (set! e "h")) (+ (let ((b "j")) 66) (let ((j 5)) -34)) (block (let ((g false)) "e") (fun1 -9 true "j" -52 -69 true "h") (if false "z" "z") (<= -71 64) (+ "g" -94)))))))
(fun (fun2 energy d f a) (if (<= energy 0) 95 (block (set! energy (- energy 1)) (- (if (let ((z (< 32 8))) (if true "z" false)) "f" -48) (block (main "energy" (+ "energy" "d") (< -88 "d")) (add1 (+ -25 -28)) (<= (block "energy" -62 "energy") (- "energy" "f")) (- "f" (* "f" "energy")))))))
(> (sub1 (block (let ((loop_var_122 (if false 37 -40))) (loop (if (> loop_var_122 (- (if false 37 -40) 122)) (block (set! loop_var_122 (- loop_var_122 1))) (break (let ((j (let ((y (set! loop_var_122 77)) (x (let ((b -92)) "y"))) (add1 "x")))) (let ((f (block 23 false 47 false))) "f")))))) (= (add1 (let ((h (block (add1 -77)))) (set! h (let ((d true) (h 84) (e "h")) "e")))) (if (* (block (= -35 32) true (let ((z -21) (b 9) (a 85)) 23) false (let ((y true) (h "y")) -94)) (* (sub1 53) (block true false -15 -15 53))) (+ (fun1 (block true 54) (block true false) (+ -27 58) (+ -7 40) (block -100 -3) (block -54 false 12 false true) (block false false false)) (let ((f (block false -49 -45 input -22)) (i (isnum false))) (let ((h "f")) "f"))) (let ((z (* (let ((g false) (x "g")) 51) (let ((c 13) (b false) (i 65)) -98))) (h (block (let ((e false) (b false)) "z") (<= "z" -4) (isnum true) (block "z")))) (set! h (sub1 "h"))))) (let ((y (main (let ((loop_var_98 59)) (loop (if (> loop_var_98 (- 59 98)) (block (set! loop_var_98 (- loop_var_98 1)) (+ 11 -89) (if false -54 -96) (* 81 -30)) (break (block false false true 97 -65))))) (let ((c (- (let ((h -6)) "h") (block false false false 83 91)))) (+ (* "c" 99) (let ((x "c") (c 97)) 30))) (let ((i (>= -7 (block 87)))) (> 89 79)))) (i (+ (set! y (add1 (let ((x "y") (b "y")) "b"))) 84))) (add1 (let ((c (isbool (let ((y -61) (d true)) true))) (a (let ((g (block true)) (d (< -81 "y"))) (+ "y" 44))) (f (block (let ((c false) (d false)) -23) (isnum true) (let ((x true) (g false)) "x")))) (block (- "i" -13) (block 59 "f" -68 "i" "c") (add1 "y") (if "f" "c" "c") "a")))))) (block (block (= (block (< (let ((loop_var_196 -40)) (loop (if (< loop_var_196 (+ -40 196)) (block (set! loop_var_196 (+ loop_var_196 1)) -6 -23 -18) (break "loop_var_196")))) (block (block input true false false -26) (add1 86))) (add1 (- (let ((j false)) 93) (let ((e true)) 38))) (let ((loop_var_150 (* 25 72))) (loop (if (> loop_var_150 (- (* 25 72) 150)) (block (set! loop_var_150 (- loop_var_150 1))) (break (let ((c -91)) 94))))) (+ (let ((g (>= -39 -34))) (let ((loop_var_132 -66)) (let ((loop_var_36 14)) (loop (if (< loop_var_36 (+ 14 36)) (block (set! loop_var_36 (+ loop_var_36 1)) -23 19) (break "loop_var_36")))))) -93)) (let ((d true)) (let ((c (< (block -7 true 71) (* 22 76))) (h (isbool (let ((x true)) "x"))) (y (let ((j (* -41 91))) (let ((b false) (j "j")) "j")))) 86)))) (let ((g (block (- (block false (block (>= 13 -97) (let ((z true)) false)) (add1 (block true -23 -82)) (- (block -23 -75) (add1 82)) (our_code_starts_here (+ -95 -60))) (add1 (let ((a (- -30 -37))) "a"))) (* (let ((d (fun1 (let ((loop_var_118 -28)) (loop (if (< loop_var_118 (+ -28 118)) (block (set! loop_var_118 (+ loop_var_118 1)) -46 57) (break -4)))) (let ((f true) (g -28)) true) (let ((i false) (y false)) -19) (let ((loop_var_147 97)) (loop (if (< loop_var_147 (+ 97 147)) (block (set! loop_var_147 (+ loop_var_147 1)) -69) (break 78)))) (let ((b -7) (f "b") (y false)) "f") (let ((d -96) (g 85)) true) (if -71 input true)))) (+ (let ((i "d") (e "i") (y "i")) "y") (set! d "d"))) (let ((z (let ((a (block -60 input true)) (x -62) (y (let ((g -80) (h false) (y -34)) -98))) (let ((j false) (c -59) (f true)) "x"))) (e (* (set! z "z") (let ((loop_var_48 49)) (loop (if (> loop_var_48 (- 49 48)) (block (set! loop_var_48 (- loop_var_48 1)) "z") (break 60)))))) (f (set! z (let ((loop_var_20 -56)) (loop (if (> loop_var_20 (- -56 20)) (block (set! loop_var_20 (- loop_var_20 1)) (set! z true) (set! z true) (set! z true) true) (break true))))))) (+ (let ((b true) (y 20)) "z") (add1 -5)))) (- 81 4))) (x (let ((y (set! g "g")) (i (block (isbool (if (- -54 "g") (let ((y "g") (h -40)) input) (isbool true))) (isnum (let ((loop_var_187 -95)) (let ((loop_var_61 "g")) (let ((loop_var_57 "g")) (loop (if (< loop_var_57 (+ "g" 57)) (block (set! loop_var_57 (+ loop_var_57 1)) (set! g true) (set! y false) true true true) (break false))))))) (let ((loop_var_32 (add1 -29))) (loop (if (< loop_var_32 (+ (add1 -29) 32)) (block (set! loop_var_32 (+ loop_var_32 1)) (set! y (isbool false)) (set! y (set! y true)) (set! y (< "g" -99)) (= true true)) (break (block 4 true false false true))))) (isnum (let ((b (block "y" -94)) (c (block "b"))) (isbool false))))) (g (block (add1 (let ((e (block false "i" 0 "y" -13)) (a (block "i"))) "g")) (isnum (let ((g (let ((c -43) (y 100) (z true)) "z"))) (let ((f "i")) "f"))) (if (let ((a (let ((a -32)) "i"))) (set! g 78)) (+ (set! y "g") 93) (block (let ((g 13) (h "i") (j "g")) -92) "g")) (- (- "y" (let ((a false) (h 6)) 19)) (let ((loop_var_86 -14)) (let ((loop_var_63 -14)) (let ((loop_var_161 -23)) (loop (if (< loop_var_161 (+ -23 161)) (block (set! loop_var_161 (+ loop_var_161 1)) -34) (break 10)))))))))) (let ((j (let ((a (isbool (set! y true))) (e (let ((loop_var_76 "g")) (loop (if (> loop_var_76 (- "g" 76)) (block (set! loop_var_76 (- loop_var_76 1)) (set! a false) (set! g "i") true) (break "a")))))) (block (block 99 "a" -41 "a") (set! a true) (let ((d "a") (g "g") (a true)) "y") (* "g" "y") (sub1 "y")))) (z (block (set! j (let ((loop_var_29 -19)) (loop (if (< loop_var_29 (+ -19 29)) (block (set! loop_var_29 (+ loop_var_29 1)) "y" "j" "g") (break "loop_var_29"))))))) (b (let ((a (let ((d (sub1 "y"))) (sub1 -30)))) (let ((loop_var_39 70)) (loop (if (< loop_var_39 (+ 70 39)) (block (set! loop_var_39 (+ loop_var_39 1)) (set! y false) "i" "i") (break false))))))) (* (block (let ((x false) (z "y")) 60)) (let ((y (main "j" -3 "b")) (e (< 99 -10))) (* -99 69)))))) (h (block (> (block (let ((loop_var_133 "g")) (loop (if (> loop_var_133 (- "g" 133)) (block (set! loop_var_133 (- loop_var_133 1)) (set! x false) (set! g false)) (break false)))) (let ((loop_var_169 73)) (loop (if (< loop_var_169 (+ 73 169)) (block (set! loop_var_169 (+ loop_var_169 1)) -46 2) (break "x")))) (block false (* "x" "x") input) (>= "g" (sub1 100)) (add1 (- 68 "g"))) "x") (fun2 (let ((h (let ((h (block -20))) (block false false))) (b (block (let ((g "h") (b -31) (i "g")) true) (let ((g 28) (x false)) "h") (isnum "h") "g"))) (let ((g (let ((y false)) -61)) (h (block "h" "h" "h" false))) (set! g 95))) (- (block (block false -86)) (sub1 (- "g" "g"))) (block "x" (let ((b (let ((loop_var_123 46)) (loop (if (> loop_var_123 (- 46 123)) (block (set! loop_var_123 (- loop_var_123 1)) (set! g "g") -4 66 "x") (break "x"))))) (f (sub1 "g")) (d (set! b "g"))) (block 41 false false false true))) (let ((h (>= (let ((a input) (j -57)) -98) (let ((loop_var_51 -26)) (let ((loop_var_143 "x")) (loop (if (< loop_var_143 (+ "x" 143)) (block (set! loop_var_143 (+ loop_var_143 1)) "x") (break "g"))))))) (b (if (<= 22 "x") (if "x" "x" -93) (+ "x" 27)))) (sub1 (block "g" "g" "b" "x")))) (- (- (add1 (let ((loop_var_59 "x")) (loop (if (< loop_var_59 (+ "x" 59)) (block (set! loop_var_59 (+ loop_var_59 1)) (set! x "g")) (break "x"))))) (block (let ((i false)) false) (let ((h true) (x "x")) "g"))) (let ((loop_var_70 (let ((d -9) (g "x") (i true)) -96))) (loop (if (< loop_var_70 (+ (let ((d -9) (g "x") (i true)) -96) 70)) (block (set! loop_var_70 (+ loop_var_70 1)) (set! x (let ((a 20)) "a")) (set! x (- "g" "x")) (set! x (block false "x" false "x"))) (break (let ((e false) (h -87)) "h"))))))))) (isbool (isnum (let ((c (let ((x (+ "h" "x"))) (- -48 8))) (d (<= (let ((loop_var_147 "c")) (let ((loop_var_23 61)) (loop (if (< loop_var_23 (+ 61 23)) (block (set! loop_var_23 (+ loop_var_23 1))) (break 58))))) (block "h" "h"))) (f (block (> 35 -9) (let ((loop_var_59 "h")) (loop (if (< loop_var_59 (+ "h" 59)) (block (set! loop_var_59 (+ loop_var_59 1)) (set! h "h") (set! c "h") (set! h 59)) (break -6)))) (sub1 "g")))) (isnum (>= "h" 39)))))) (- (fun2 (let ((loop_var_9 (let ((c -100) (h false)) 27))) (let ((loop_var_195 3)) (loop (if (> loop_var_195 (- 3 195)) (block (set! loop_var_195 (- loop_var_195 1)) (let ((e (let ((g -89) (a false) (c 92)) "a")) (i (isnum true)) (j (set! e -57))) (set! e "j"))) (break (if true (sub1 "loop_var_195") (- -82 -30))))))) (let ((b (isnum (let ((loop_var_75 22)) (loop (if (< loop_var_75 (+ 22 75)) (block (set! loop_var_75 (+ loop_var_75 1))) (break true))))))) (add1 (+ (block -93 -65 -77 -90) (+ 56 71)))) true (let ((loop_var_161 (if input -33 100))) (loop (if (> loop_var_161 (- (if input -33 100) 161)) (block (set! loop_var_161 (- loop_var_161 1)) (block (block false) (let ((z false) (h "z") (x true)) -33))) (break (let ((h (fun1 84 true "loop_var_161" "loop_var_161" "loop_var_161" false true)) (z (let ((b "h") (x -3) (f "b")) "h"))) (block true false 63 true "loop_var_161"))))))) (* 93 (+ (let ((h (block (+ -14 -98) (<= 29 -75) (block -40 -98 true true -74)))) -43) (block (let ((loop_var_26 -50)) (loop (if (< loop_var_26 (+ -50 26)) (block (set! loop_var_26 (+ loop_var_26 1)) 95) (break "loop_var_26")))) false (+ (- -88 -30) (if true 51 74))))))))