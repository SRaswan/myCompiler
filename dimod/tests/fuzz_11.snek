(fun (our_code_starts_here energy) (if (<= energy 0) -46 (block (set! energy (- energy 1)) (our_code_starts_here energy))))
(fun (main energy i e j x h y c z) (if (<= energy 0) false (block (set! energy (- energy 1)) (isbool (let ((f 1) (d (block (set! i 93) (= 22 29) (our_code_starts_here "i") (+ "z" -54))) (g (block (let ((b -24) (f -92) (e -26)) "h") (set! z -26) (if "i" "i" "z") (block false) (let ((d "x") (z true)) -77)))) (let ((e (block false "c" false 44)) (h 8) (j (<= -9 "e"))) (block "i" 7 true false)))))))
(block (- (let ((i true) (y (block (+ (let ((g (isbool (>= 62 88))) (d (let ((x (let ((h true) (c "i")) true)) (y (let ((a 64)) 42)) (j "y")) (let ((loop_var_188 "y")) (loop (if (> loop_var_188 (- "y" 188)) (block (set! loop_var_188 (- loop_var_188 1)) -85 "y" 13) (break "j")))))) (y (let ((loop_var_194 9)) (loop (if (> loop_var_194 (- 9 194)) (block (set! loop_var_194 (- loop_var_194 1))) (break "d")))))) (let ((loop_var_140 75)) (loop (if (< loop_var_140 (+ 75 140)) (block (set! loop_var_140 (+ loop_var_140 1)) (set! g "y") (set! d -51) (set! y 31) "d") (break "y"))))) (let ((g (block (- 96 -87) (<= -69 -32))) (z (let ((loop_var_76 80)) (loop (if (> loop_var_76 (- 80 76)) (block (set! loop_var_76 (- loop_var_76 1)) (set! g -41) (set! g -19) (set! g 82) 41 -63 0) (break -51)))))) (let ((b (set! z "i"))) (let ((f "z") (y "b")) "f")))) (block (let ((loop_var_185 (set! i 86))) (let ((loop_var_85 (our_code_starts_here -7))) (let ((loop_var_114 (let ((h "i") (c "i") (g true)) -30))) (loop (if (> loop_var_114 (- (let ((h "i") (c "i") (g true)) -30) 114)) (block (set! loop_var_114 (- loop_var_114 1))) (break (- -26 "loop_var_114"))))))) (add1 (block (+ 55 -84) "i" (block "i" 9 -9 -16 -6) (let ((loop_var_117 1)) (loop (if (< loop_var_117 (+ 1 117)) (block (set! loop_var_117 (+ loop_var_117 1))) (break true)))) (add1 -35))) (let ((c (= (let ((loop_var_144 -19)) (loop (if (> loop_var_144 (- -19 144)) (block (set! loop_var_144 (- loop_var_144 1)) (set! i false) (set! i false)) (break "i")))) (let ((g true) (x "g") (e true)) false)))) (- (- -49 94) (sub1 55))) (+ (+ (let ((loop_var_144 55)) (loop (if (< loop_var_144 (+ 55 144)) (block (set! loop_var_144 (+ loop_var_144 1)) 61 -66 -83) (break -12)))) (set! i 39)) (let ((a (<= 93 39)) (e (let ((x 39)) -81))) (block "a" "e" -41 "e"))) (let ((h (let ((b (let ((z true) (a 32) (x -92)) "x"))) (let ((i "i") (b input)) "i")))) true)) (- (our_code_starts_here (- (block -81) (let ((loop_var_46 -83)) (let ((loop_var_61 -31)) (loop (if (> loop_var_61 (- -31 61)) (block (set! loop_var_61 (- loop_var_61 1)) (set! i 36) (set! i -5) (set! i 89)) (break "loop_var_61"))))))) (sub1 47))))) (sub1 (let ((loop_var_53 (let ((y "y") (z "i")) 48))) (loop (if (< loop_var_53 (+ (let ((y "y") (z "i")) 48) 53)) (block (set! loop_var_53 (+ loop_var_53 1)) (set! y (+ (+ -21 "y") (block -90))) (set! i "y") (set! i (set! i (let ((j -58)) "y")))) (break (block (our_code_starts_here "y") (isbool false) (- 75 "y") (let ((j 85) (d "loop_var_53")) -8)))))))) (block (block (block (block (+ (let ((g -31) (a false)) "g") (let ((loop_var_145 1)) (loop (if (< loop_var_145 (+ 1 145)) (block (set! loop_var_145 (+ loop_var_145 1))) (break "loop_var_145")))))) (* (* (block 19) (let ((y 67)) -77)) (if (let ((f 22) (x true)) "x") (our_code_starts_here -18) (+ -49 37))) (let ((h (let ((loop_var_4 17)) (loop (if (< loop_var_4 (+ 17 4)) (block (set! loop_var_4 (+ loop_var_4 1)) 75) (break -9))))) (a (set! h (block "h" true true true)))) true) (let ((j (let ((a (let ((loop_var_92 -40)) (loop (if (< loop_var_92 (+ -40 92)) (block (set! loop_var_92 (+ loop_var_92 1)) -35 52 -49) (break "loop_var_92"))))) (x (let ((loop_var_61 "a")) (loop (if (> loop_var_61 (- "a" 61)) (block (set! loop_var_61 (- loop_var_61 1)) input false) (break false))))) (i (let ((loop_var_57 "a")) (loop (if (< loop_var_57 (+ "a" 57)) (block (set! loop_var_57 (+ loop_var_57 1)) (set! x 1) 75 8 65) (break -72)))))) (block "i" false))) (y -35) (d (- (block true "y") (sub1 "y")))) (let ((y -34) (x (add1 -57))) (- 10 "y")))) (>= (sub1 (let ((a false) (y (+ 25 -27)) (z (let ((z false) (i "a") (j "y")) input))) (let ((loop_var_87 "y")) (loop (if (< loop_var_87 (+ "y" 87)) (block (set! loop_var_87 (+ loop_var_87 1))) (break 96)))))) (- (+ (* 82 39) (our_code_starts_here -71)) -43)) (our_code_starts_here (let ((loop_var_37 (+ -42 78))) (loop (if (> loop_var_37 (- (+ -42 78) 37)) (block (set! loop_var_37 (- loop_var_37 1)) (* -74 41) (our_code_starts_here 60)) (break (sub1 "loop_var_37")))))) (let ((x (add1 (if (let ((j 30) (b "j")) -93) (- 39 98) (if true 65 -58)))) (y (add1 (block (block "x" false "x" "x" false) (- 29 -51) (* -89 "x") "x")))) (let ((y (let ((a (- "x" -7)) (e (> "a" "a"))) (main -78 "e" true 38 "e" true false -63 -60)))) (block (let ((loop_var_39 38)) (loop (if (< loop_var_39 (+ 38 39)) (block (set! loop_var_39 (+ loop_var_39 1)) (set! y false) false) (break "y"))))))) (block (block (+ 52 (block false true 14)) (let ((loop_var_6 9)) (let ((loop_var_80 -42)) (loop (if (< loop_var_80 (+ -42 80)) (block (set! loop_var_80 (+ loop_var_80 1))) (break true))))) false (let ((i (let ((h true) (i "h")) "h")) (f -77)) (block true 33 48 true "i"))))) (- -43 (block (isbool (let ((b (< 95 -31)) (z (if 100 true false)) (x (sub1 29))) (block "z"))) (let ((z (if false false (main 64 false true -71 false false false -95 30))) (d (> (add1 -48) (sub1 -3))) (h (add1 (+ -83 -9)))) (- (add1 -32) -93)) (- (let ((d (block -22)) (g (our_code_starts_here 79))) (let ((loop_var_95 "d")) (let ((loop_var_199 "d")) (loop (if (> loop_var_199 (- "d" 199)) (block (set! loop_var_199 (- loop_var_199 1))) (break -55)))))) (- (our_code_starts_here -31) (let ((loop_var_28 92)) (loop (if (> loop_var_28 (- 92 28)) (block (set! loop_var_28 (- loop_var_28 1))) (break 45)))))))) (- (block (< 37 (sub1 (let ((b input) (g "b") (d true)) 17))) (block (block (let ((z true) (c 44) (i "z")) "c") (< -69 32) 100 -84) (sub1 (let ((z 47) (d "z") (x "d")) "z")) (block (block true -39 input -88) (< 38 -88) (block 54 -34 38 10 19)) (let ((loop_var_184 -62)) (loop (if (> loop_var_184 (- -62 184)) (block (set! loop_var_184 (- loop_var_184 1))) (break "loop_var_184")))) (block (let ((f true)) true) (main 95 true false 68 true false true -28 -24))) (let ((b (let ((a (> -39 -52)) (c (* 17 24))) (add1 "c"))) (h (block (+ -3 -20) (let ((b "b")) "b") (let ((loop_var_199 -72)) (let ((loop_var_18 -19)) (let ((loop_var_111 "b")) (loop (if (> loop_var_111 (- "b" 111)) (block (set! loop_var_111 (- loop_var_111 1))) (break 86)))))) (let ((x -70) (j "x") (f false)) false))) (x (>= (block "b" -77 90) (- "b" "b")))) (let ((y (let ((loop_var_17 -45)) (loop (if (> loop_var_17 (- -45 17)) (block (set! loop_var_17 (- loop_var_17 1)) true false false) (break "x")))))) (>= "b" "b"))) (let ((b (let ((loop_var_104 -60)) (let ((loop_var_192 -17)) (loop (if (< loop_var_192 (+ -17 192)) (block (set! loop_var_192 (+ loop_var_192 1)) false true) (break false))))))) -93)) (let ((g (let ((loop_var_172 (our_code_starts_here 98))) (loop (if (> loop_var_172 (- (our_code_starts_here 98) 172)) (block (set! loop_var_172 (- loop_var_172 1)) (* 73 -98) (let ((b true)) 73)) (break (* "loop_var_172" -88)))))) (e (let ((loop_var_65 (set! g "g"))) (loop (if (< loop_var_65 (+ (set! g "g") 65)) (block (set! loop_var_65 (+ loop_var_65 1)) (block "g" 87 "g") (- "g" 23)) (break "g")))))) (set! g (* (set! g 39) (let ((d true) (e 40)) -44))))))))