(fun (our_code_starts_here energy d g f i b j) (if (<= energy 0) -82 (block (set! energy (- energy 1)) (* (block (+ (set! i "b") (let ((h -4) (j false) (g true)) 94)) 90 (block (let ((i false) (j false)) "j") (isnum false) (let ((d 21) (z "j")) "z")) (+ (block "g" 5 true 57 -61) (let ((a "i") (c "j")) "a"))) -88))))
(fun (main energy f c z i y) (if (<= energy 0) false (block (set! energy (- energy 1)) (let ((y (let ((x (set! i (block -99 "energy" "energy" 85 45))) (i (> (let ((j -45) (c "z") (a false)) 7) (sub1 "c"))) (j (>= (block "z" false 56 "y" -59) (let ((c -50) (b "z")) "c")))) (let ((e (let ((g -71) (d "i") (i "x")) 9)) (b (set! c -66)) (f (isnum false))) (add1 -30)))) (a (block (let ((x (block "energy" "z" "y")) (f (>= "y" 14))) (let ((b "energy") (g "b")) false)) (add1 35) (block (< -50 -43) (let ((j "y") (h "energy") (f "y")) "h") (set! energy "energy") (set! f "f") (let ((y "y")) -86)) (set! energy (let ((x 71) (g "c") (c "c")) "energy")) (block (< -50 68) (+ 99 "c") "y" (block false true "y" "z" "z") (* "y" "c")))) (z (let ((f (if (sub1 4) -16 (let ((y "energy")) 68)))) (- (+ "f" -50) (- 94 "a"))))) (let ((i (block (set! a "f") (let ((c -50)) true) (isbool "y") (* "energy" "z") "y")) (a (main (* -45 "z") (set! a "c") (let ((b "y") (z "i") (x 67)) "z") (>= "z" -27) (block "i" -29 "z" false) (> "f" 78))) (j (block (isbool "i")))) (set! z (main "f" "energy" "a" false true false)))))))
(fun (fun1 energy) (if (<= energy 0) -64 (block (set! energy (- energy 1)) (- (let ((f (+ (let ((h -68) (f -47) (d -39)) -48) (block "energy"))) (i (let ((j (let ((h false) (a 39) (z -12)) 55)) (a (let ((y "f") (d false) (a "d")) -72)) (i (let ((c "j") (j true)) 90))) (set! f "i"))) (x (block (< 34 -68)))) "energy") (+ (- (block true 43) (let ((z true)) 69)) (let ((g (block "energy" "energy")) (i (block true "energy" false)) (a (+ -11 "energy"))) (fun1 8)))))))
(fun (fun2 energy y a d x g) (if (<= energy 0) 1 (block (set! energy (- energy 1)) (sub1 (+ (block (fun3 "y" false false "a" false) (block "d" true 12)) (+ (+ 78 "y") (block "y" 52)))))))
(fun (fun3 energy h x f b) (if (<= energy 0) 22 (block (set! energy (- energy 1)) (let ((a (set! energy (set! x (let ((c "f")) "f")))) (g (<= (- (let ((i -59) (z 11) (a "z")) "b") (- -72 67)) (* (- -64 "energy") (add1 "energy"))))) (block (+ "energy" "b") 64 (= (set! energy "energy") (sub1 35)) (block "x" (set! g 24) (<= -4 -31) "f" (set! energy "energy")) (set! a (let ((a 56) (c "h")) -11)))))))
(if (let ((e false) (j 33) (i (= (+ (add1 "j") (block (let ((loop_var_102 (let ((g -49) (y true)) "g"))) (loop (if (< loop_var_102 (+ (let ((g -49) (y true)) "g") 102)) (block (set! loop_var_102 (+ loop_var_102 1)) (= -65 "j")) (break "e")))) (let ((a (- (* -98 "j") -74))) (<= (+ "a" "a") (let ((e false) (y "a") (a 52)) "j"))) (>= (let ((i -31)) (set! j -45)) (let ((e (set! j true)) (f (set! j "j")) (j "j")) (set! e input))) (let ((b true) (a (block -10)) (g (main -78 (set! b -65) (isnum true) (let ((b false)) true) (let ((j "b") (c 61) (b "c")) false) "e"))) (let ((c (sub1 "g")) (j (block "c"))) 90)))) (block (if (set! e "e") (fun1 (+ (add1 input) (let ((b "e") (i 33) (d "i")) "j"))) "j") (block (let ((h (let ((c false)) (+ "j" input))) (y (let ((loop_var_169 49)) (let ((loop_var_200 62)) (let ((loop_var_157 "h")) (loop (if (> loop_var_157 (- "h" 157)) (block (set! loop_var_157 (- loop_var_157 1))) (break 83))))))) (e (+ (block 18 87) (sub1 -13)))) (let ((x (let ((z "e")) input)) (i "e")) false))) (let ((e (set! j (+ (set! e "j") (set! j 78))))) (block (>= (if false "j" 23) (* 48 "j")))) (let ((b (let ((loop_var_90 (sub1 -3))) (loop (if (< loop_var_90 (+ (sub1 -3) 90)) (block (set! loop_var_90 (+ loop_var_90 1)) (set! e (block "j" 93 -31)) (set! j (block false "j" false -4)) (set! j (set! e -40)) (- "j" 12) (block 33 true "j" "j")) (break (let ((a "loop_var_90") (d "loop_var_90") (b true)) "j")))))) (c "e") (z (let ((loop_var_29 (let ((y 71) (i 81) (e true)) "i"))) (loop (if (> loop_var_29 (- (let ((y 71) (i 81) (e true)) "i") 29)) (block (set! loop_var_29 (- loop_var_29 1))) (break (+ "loop_var_29" "j"))))))) (- (block 26 5 (isnum "e") (let ((f 41)) "j")) (- (* "j" -99) (- 20 "j")))))))) (add1 (add1 (block (block (let ((f (let ((j false)) "i")) (a (* 49 "j")) (j (let ((b "i") (i "j")) "j"))) (* 51 -62)) (block (block "e" false false true) (let ((loop_var_63 12)) (loop (if (> loop_var_63 (- 12 63)) (block (set! loop_var_63 (- loop_var_63 1))) (break -34)))) (< 16 "j") (> "j" input) (= false "i")) (let ((j (<= 35 -70))) (add1 "j")) (let ((c (> "j" 23)) (h (<= 61 98))) (block "h" 87))) (block (let ((b (> -33 "j"))) (>= "j" -93)) (* (block true false "i" "j") (block false 5 "j"))) 5 (main (sub1 (sub1 "j")) (block (sub1 -11) "j" (let ((g -82) (z "i") (x "g")) true) (our_code_starts_here 11 false "j" "j" "j" "e" -75) (let ((z 17) (a "i")) "z")) (isnum (isnum true)) (block (let ((h "i")) false)) (set! e (> -15 -50)) (let ((g (sub1 "j")) (b (>= input "g"))) (let ((y "e")) false))) (block (<= (let ((g true)) 56) (if "j" "j" "j")) (+ (let ((d 5)) "d") (block 4 "j" -76)) (let ((g (* input 67)) (y (let ((loop_var_112 26)) (loop (if (< loop_var_112 (+ 26 112)) (block (set! loop_var_112 (+ loop_var_112 1)) (set! i 84) (set! e "g") (set! e -60) 18 "g" "g") (break -83)))))) (block 23 "y"))))))) (fun2 (* (block (add1 (let ((d (block (block input) (if true -88 -47) 75 (block 66 91 false true) (let ((d true) (i "d")) 91))) (g (let ((e (let ((y 1)) false))) (let ((h "d")) true))) (y (> (+ "d" "d") (* "d" "d")))) (* 49 (set! g -61))))) (let ((a (+ (* (block (block -94 -77 -74) (let ((loop_var_84 11)) (let ((loop_var_85 input)) (let ((loop_var_129 70)) (loop (if (> loop_var_129 (- 70 129)) (block (set! loop_var_129 (- loop_var_129 1)) 42) (break "loop_var_129"))))))) (* (- -49 -21) (+ 36 -5))) (* (block (if true false false) (let ((a true)) -32)) -28))) (h (<= -98 (- (let ((g (block false false)) (c (let ((a "g")) "g"))) (+ "a" "a")) 71)))) (let ((h (let ((loop_var_70 (block "a"))) (loop (if (< loop_var_70 (+ (block "a") 70)) (block (set! loop_var_70 (+ loop_var_70 1)) (set! a (set! a "h")) (set! a (isnum "h")) (set! h (let ((b true) (y "h") (c "b")) "h"))) (break (let ((h "loop_var_70")) false))))))) (* (let ((g (- -2 27)) (j (> "a" "g")) (c (if 67 "g" -66))) (let ((d true)) "c")) (+ "a" (set! h "a")))))) (- (block (let ((d (= (let ((x (block false))) (add1 35)) (sub1 (block true 80)))) (i (isbool (let ((loop_var_18 23)) (loop (if (< loop_var_18 (+ 23 18)) (block (set! loop_var_18 (+ loop_var_18 1)) (set! d true) "d") (break "d")))))) (f (+ (let ((d (isnum "d"))) (- -76 27)) (* (let ((d "d") (i false) (j "i")) 76) (let ((f true)) -10))))) (* (- (let ((j false)) "f") (let ((i false)) -99)) (set! d (- 36 -48))))) 93) 25 (sub1 -33) (block (isbool true) (fun1 (let ((loop_var_194 (- 84 -83))) (loop (if (< loop_var_194 (+ (- 84 -83) 194)) (block (set! loop_var_194 (+ loop_var_194 1)) (let ((i (let ((e -57) (y true)) "e"))) (fun1 -26)) (fun1 (fun1 -61)) (let ((y (let ((h false) (a -97) (y -41)) true)) (e (block "y" true -85 -20 -27)) (c (< "e" 37))) (let ((a -19) (g true) (e -31)) -51))) (break (fun2 27 (sub1 "loop_var_194") (let ((g false) (d false)) "loop_var_194") "loop_var_194" "loop_var_194" (let ((i 88) (g input) (y -45)) input)))))))) (block (let ((g (= (let ((f 7) (g "f")) "g") (let ((c (+ (if 52 56 -13) (let ((loop_var_121 14)) (loop (if (< loop_var_121 (+ 14 121)) (block (set! loop_var_121 (+ loop_var_121 1))) (break 2)))))) (i (let ((x (>= "c" 5))) (let ((c false)) false)))) (let ((c (+ -67 86)) (b (block "c" "i" 15)) (h (let ((loop_var_114 -74)) (let ((loop_var_11 -7)) (loop (if (< loop_var_11 (+ -7 11)) (block (set! loop_var_11 (+ loop_var_11 1)) (set! c -60) (set! b 55)) (break "b"))))))) (+ -24 "b"))))) (d (> (let ((loop_var_6 (let ((a 37) (z false) (x 92)) "x"))) (let ((loop_var_86 (+ -85 input))) (loop (if (< loop_var_86 (+ (+ -85 input) 86)) (block (set! loop_var_86 (+ loop_var_86 1)) (set! g (set! g 50))) (break 56))))) (* (block (- 27 -9) 69) (block (let ((j "g") (c "j")) true) (- -15 -100) (let ((d 93) (j true) (c false)) "d") (add1 6) (set! g -87))))) (z (let ((g (let ((e (<= (let ((y -36) (h "y")) "h") (block "g" 50)))) (let ((loop_var_143 -31)) (loop (if (> loop_var_143 (- -31 143)) (block (set! loop_var_143 (- loop_var_143 1)) 2 -77 -80) (break 28))))))) (let ((h (let ((g (let ((z "d") (f "g") (c "g")) "g")) (e (let ((loop_var_115 80)) (loop (if (< loop_var_115 (+ 80 115)) (block (set! loop_var_115 (+ loop_var_115 1))) (break -85))))) (a (let ((y -72)) -68))) (add1 input)))) (= (fun2 "g" 81 -90 60 "g" "h") (let ((loop_var_104 "g")) (let ((loop_var_10 "g")) (let ((loop_var_139 -37)) (loop (if (> loop_var_139 (- -37 139)) (block (set! loop_var_139 (- loop_var_139 1))) (break 83))))))))))) (let ((i (> (let ((j (let ((b -26)) true)) (y (sub1 -10)) (h (+ "y" 2))) (let ((a false) (i "a")) -75)) (* (let ((loop_var_158 input)) (loop (if (< loop_var_158 (+ input 158)) (block (set! loop_var_158 (+ loop_var_158 1)) (set! g 7) (set! d 92)) (break 16)))) (add1 -83)))) (c (let ((a (<= (block -83) (- -6 -82))) (z (let ((x -15)) (let ((e "x")) -25))) (d (isbool (< "z" "z")))) (block (* "z" 20) (<= -20 "z") (- "z" input))))) (block (let ((j (let ((a -28)) "i")) (c (let ((c false) (g "d")) -72))) (let ((loop_var_92 "c")) (loop (if (> loop_var_92 (- "c" 92)) (block (set! loop_var_92 (- loop_var_92 1)) (set! c "c") 7) (break "c"))))) (let ((loop_var_126 "c")) (loop (if (< loop_var_126 (+ "c" 126)) (block (set! loop_var_126 (+ loop_var_126 1))) (break "loop_var_126"))))))))) (block (let ((g (block (let ((e (block (>= (block true true true 65 40) (block false -22 -41 65)) (main (let ((loop_var_11 60)) (loop (if (> loop_var_11 (- 60 11)) (block (set! loop_var_11 (- loop_var_11 1)) -75 -44) (break "loop_var_11")))) (let ((a false) (f input)) -10) (if -6 true true) (block 42 34 false) (let ((d true)) false) (< 7 -69))))) (- (* 10 (+ -88 -8)) (block (block 64) true (<= 49 25) "e" (let ((a false) (c -4) (g 45)) 93)))) true (* (let ((c (main (let ((h -56) (d "h")) "h") (- -46 -97) (<= 37 -7) (<= -47 -19) true (block false 27 true false false))) (x (add1 (let ((loop_var_190 "c")) (let ((loop_var_85 79)) (loop (if (< loop_var_85 (+ 79 85)) (block (set! loop_var_85 (+ loop_var_85 1))) (break "c")))))))) (let ((x (fun3 -69 false false 81 true))) (let ((loop_var_89 "x")) (loop (if (> loop_var_89 (- "x" 89)) (block (set! loop_var_89 (- loop_var_89 1))) (break -56)))))) (block (fun2 (block -50) (* -29 43) (* 34 76) (block false 56 76) (block 22 false -8) (let ((loop_var_122 -41)) (loop (if (< loop_var_122 (+ -41 122)) (block (set! loop_var_122 (+ loop_var_122 1)) -81 -68) (break "loop_var_122"))))))) (- (block (let ((f (>= -25 75)) (x (let ((loop_var_87 38)) (loop (if (> loop_var_87 (- 38 87)) (block (set! loop_var_87 (- loop_var_87 1)) (set! f "f") (set! f "f") (set! f "f")) (break "f"))))) (z (let ((a 56) (j true)) -13))) "x") (+ (let ((c 94) (b true)) 93) (let ((e true)) 46))) (add1 (* (let ((e true) (x -99) (y -87)) 89) (let ((loop_var_108 15)) (loop (if (> loop_var_108 (- 15 108)) (block (set! loop_var_108 (- loop_var_108 1)) -16 -74) (break -45))))))))) (z (- (+ (block (< (+ "g" 55) (block true -60 -23)) (block (set! g 70) (isnum false) (>= "g" 99) (let ((i 54)) 2) (let ((d "g")) true)) (add1 (+ "g" -60))) (+ (let ((j (let ((f -51)) "f")) (e (* 83 "g")) (g (let ((z "e") (b true) (h 78)) "g"))) "j") (let ((f (let ((loop_var_159 -21)) (let ((loop_var_92 "g")) (loop (if (< loop_var_92 (+ "g" 92)) (block (set! loop_var_92 (+ loop_var_92 1)) (set! g false) (set! g true) (set! g true) true) (break true)))))) (j (>= -63 11)) (z (set! f 0))) (+ -70 -47)))) "g")) (b (let ((a (* (let ((loop_var_54 (if true 6 89))) (loop (if (< loop_var_54 (+ (if true 6 89) 54)) (block (set! loop_var_54 (+ loop_var_54 1)) (set! z (- -55 "z")) (set! z (let ((f 24) (c "g")) "f")) (block -6 true 85 "g" 26) 37 (let ((j input) (i "z")) -69)) (break (sub1 -98))))) (block (* (if -56 "g" "g") (* "g" -48))))) (b (block (+ (- (if -49 11 "a") (add1 "a")) (let ((loop_var_149 -99)) (let ((loop_var_170 "z")) (loop (if (< loop_var_170 (+ "z" 170)) (block (set! loop_var_170 (+ loop_var_170 1))) (break 67)))))) (+ (set! z "a") (let ((e (block "a" "g" true))) (add1 "z"))) (block (block (block true 4 11 false) (let ((f 75) (j false) (h -42)) true) (let ((loop_var_6 65)) (loop (if (> loop_var_6 (- 65 6)) (block (set! loop_var_6 (- loop_var_6 1)) "a" -7 "a") (break -70)))))) (+ 77 (- (+ "g" "g") (let ((loop_var_148 52)) (loop (if (< loop_var_148 (+ 52 148)) (block (set! loop_var_148 (+ loop_var_148 1)) (set! a "z") (set! a "a") input -22 83) (break 72)))))))) (e (block (> (block (= false false) (block "z" "b") (let ((loop_var_104 18)) (let ((loop_var_47 input)) (loop (if (< loop_var_47 (+ input 47)) (block (set! loop_var_47 (+ loop_var_47 1)) (set! g false) (set! b false) false) (break false))))) (block 22) (- "b" 51)) (sub1 (let ((loop_var_49 -47)) (let ((loop_var_15 "b")) (loop (if (> loop_var_15 (- "b" 15)) (block (set! loop_var_15 (- loop_var_15 1))) (break -59))))))) (let ((loop_var_111 (* "z" "b"))) (let ((loop_var_109 (block "g"))) (loop (if (> loop_var_109 (- (block "g") 109)) (block (set! loop_var_109 (- loop_var_109 1)) (set! a "b") (set! z "b") (set! z 94)) (break (add1 93)))))) (sub1 (let ((loop_var_37 -80)) (loop (if (< loop_var_37 (+ -80 37)) (block (set! loop_var_37 (+ loop_var_37 1)) (set! b "a")) (break -29))))) (block (> (block false -73 "b" "g") (block "b" "z" "a")))))) (let ((x (block (let ((loop_var_79 92)) (loop (if (> loop_var_79 (- 92 79)) (block (set! loop_var_79 (- loop_var_79 1)) (set! a false)) (break true)))) (set! z "b") (let ((b (block "z" false)) (z (> 61 -19))) (set! b 46)) (block true) (add1 (let ((j "a") (e false)) "a"))))) (* (* (+ -5 "z") (let ((b -53) (d 78) (c "x")) "c")) (- (if "a" "g" "x") (* "z" -73))))))) (* (block (block (let ((b false)) (let ((d false) (x "d") (c "z")) false)) (let ((loop_var_77 -50)) (loop (if (> loop_var_77 (- -50 77)) (block (set! loop_var_77 (- loop_var_77 1))) (break 17)))))) -92)) (= (> (let ((loop_var_43 (* 50 41))) (let ((loop_var_159 (let ((a 4) (e "a")) 12))) (let ((loop_var_7 (block -74))) (loop (if (< loop_var_7 (+ (block -74) 7)) (block (set! loop_var_7 (+ loop_var_7 1))) (break (let ((a (set! loop_var_7 true)) (f (block "loop_var_7" "a" input)) (x (let ((x "loop_var_7") (z 38) (d 0)) "a"))) (let ((y input) (h false)) "y")))))))) (- (let ((loop_var_35 (let ((e 46) (a 64)) "a"))) (loop (if (< loop_var_35 (+ (let ((e 46) (a 64)) "a") 35)) (block (set! loop_var_35 (+ loop_var_35 1)) (* -59 36) (let ((e -24) (d "e")) "d")) (break (let ((c true) (d false)) "loop_var_35"))))) (let ((c (+ (- 75 input) (our_code_starts_here 23 true -75 -4 30 true 24))) (e (set! c (let ((e true)) -43))) (f (- (block true false "e" true "e") (if input "c" 90)))) (let ((loop_var_133 "c")) (loop (if (> loop_var_133 (- "c" 133)) (block (set! loop_var_133 (- loop_var_133 1)) (set! f -45) (set! c 36) (set! c "e") "e" "e") (break "f"))))))) (let ((z (>= (block (+ (- 27 86) (block -50)) 26) (block (* (+ -38 70) (let ((loop_var_146 30)) (loop (if (< loop_var_146 (+ 30 146)) (block (set! loop_var_146 (+ loop_var_146 1))) (break 20)))))))) (d (let ((j "z")) (let ((c false)) (block (set! j false) (let ((loop_var_143 -10)) (loop (if (> loop_var_143 (- -10 143)) (block (set! loop_var_143 (- loop_var_143 1)) (set! z false) (set! c "z") "z" "c") (break "j")))))))) (c (set! d (let ((loop_var_29 (block false -1 -32))) (loop (if (< loop_var_29 (+ (block false -1 -32) 29)) (block (set! loop_var_29 (+ loop_var_29 1)) (fun3 input "z" "z" input true) (set! z 96)) (break (* "loop_var_29" "loop_var_29")))))))) (let ((loop_var_193 (let ((c true) (g true) (e "c")) "e"))) (let ((loop_var_43 (let ((d "c")) 13))) (let ((loop_var_191 (sub1 -35))) (loop (if (< loop_var_191 (+ (sub1 -35) 191)) (block (set! loop_var_191 (+ loop_var_191 1)) (let ((e (let ((f false)) true)) (b (if "c" "c" -36))) -74)) (break (* (+ -68 "loop_var_191") (sub1 input)))))))))) (block (let ((a (> (- (+ (let ((b 19)) 72) (- 55 -74)) (let ((loop_var_23 31)) (loop (if (> loop_var_23 (- 31 23)) (block (set! loop_var_23 (- loop_var_23 1))) (break "loop_var_23"))))) (- (fun1 (let ((e 22) (y -9) (z true)) -76)) (+ 0 66)))) (b (sub1 (fun2 (let ((b (let ((loop_var_72 -92)) (loop (if (< loop_var_72 (+ -92 72)) (block (set! loop_var_72 (+ loop_var_72 1)) (set! a "a") true "a" "a") (break false))))) (z (= false "b"))) (let ((h false) (z input) (f "h")) "z")) (add1 (sub1 5)) (let ((loop_var_198 32)) (loop (if (< loop_var_198 (+ 32 198)) (block (set! loop_var_198 (+ loop_var_198 1)) (set! a -98) 97) (break "loop_var_198")))) (block (add1 98) (= false true) (let ((x -67) (i "a")) "x")) (add1 (let ((loop_var_143 -56)) (loop (if (< loop_var_143 (+ -56 143)) (block (set! loop_var_143 (+ loop_var_143 1)) (set! a -1) (set! a -75)) (break "loop_var_143"))))) (let ((loop_var_44 -17)) (loop (if (< loop_var_44 (+ -17 44)) (block (set! loop_var_44 (+ loop_var_44 1)) 79) (break -28)))))))) (+ (- (set! b (+ -10 -58)) (- (let ((loop_var_193 "b")) (let ((loop_var_58 "b")) (loop (if (> loop_var_58 (- "b" 58)) (block (set! loop_var_58 (- loop_var_58 1)) (set! b "b") (set! b "b") "b" "b" 75) (break "b"))))) (* "b" "b"))) "b"))) -97 (let ((loop_var_105 (let ((h true)) 62))) (loop (if (> loop_var_105 (- (let ((h true)) 62) 105)) (block (set! loop_var_105 (- loop_var_105 1))) (break (set! loop_var_105 (>= (- (our_code_starts_here "loop_var_105" false -99 "loop_var_105" "loop_var_105" false "loop_var_105") (+ 19 "loop_var_105")) (block (block false "loop_var_105" input 76 false) (- 47 77) (let ((e input) (c true)) "e") (- 17 -25))))))))))