(fun (our_code_starts_here energy d c a f z i e b) (if (<= energy 0) 74 (block (set! energy (- energy 1)) (block (let ((i (set! f (let ((y "i") (h -59) (b "z")) 48))) (z false)) (set! a (<= "z" -9))) (block (let ((c (block "d" -68 -37 -59)) (y (* "c" "c"))) (block true "z" -59 "d")) (add1 (- "f" 67))) 50 (our_code_starts_here (block (if "z" "i" true) (* 12 "e") (* "energy" "f") (let ((d -78) (a 77) (h false)) false) (- "d" "d")) (set! d (< 74 -49)) (set! z (< "z" 64)) (block (block 28 "d" true) (+ -50 "energy")) -59 (let ((g (block -21)) (j "b")) (= -37 "z")) (block (set! e "d") (let ((y -21) (x "b") (c "b")) "f") (let ((b "a") (i -59) (j -7)) 47)) (>= 60 (let ((d true) (g "c") (h -47)) -91)) (main (let ((y "f") (h false)) "y") (isbool "i") (+ 18 -71))) (let ((x "i") (j (if "z" (>= "f" "z") (isnum false))) (g (sub1 (our_code_starts_here -26 "j" false "f" -59 "x" 33 "x" true)))) 0)))))
(fun (main energy d a) (if (<= energy 0) false (block (set! energy (- energy 1)) (block (add1 (+ (set! a 95) (* -85 "d"))) (set! energy (> (let ((d "energy") (e false) (b "energy")) 5) (- 48 -39))) (let ((y "energy") (a (block (set! a true) (= true "a") (let ((i "a")) -79) (set! y -85)))) (- (- -85 "energy") (let ((d "a") (e "d") (y "a")) -5))) (isbool (set! a (> -85 "energy")))))))
45