(fun (our_code_starts_here energy a j i b h x) (if (<= energy 0) 41 (block (set! energy (- energy 1)) "energy")))
(fun (main energy d e) (if (<= energy 0) false (block (set! energy (- energy 1)) (isbool (let ((d (if (let ((i 27)) "d") (= "energy" 4) (block false false))) (b (let ((d "energy") (j (set! d true))) (block "d")))) (isbool (isnum true)))))))
(fun (fun1 energy c j g i a e) (if (<= energy 0) false (block (set! energy (- energy 1)) (> (sub1 (* (- "e" -2) (* "a" 51))) (- (let ((z (let ((z "e")) "g"))) (let ((g "e") (a "j") (h false)) "energy")) (our_code_starts_here (let ((x false)) "energy") (our_code_starts_here -71 "e" "energy" "g" "j" -24 "g") (let ((c 18)) "i") (<= "e" 22) (if -16 false true) (let ((f "i") (j "g")) 0) (let ((x "c")) false)))))))
(let ((i (block (let ((f (<= (+ (+ (+ (let ((loop_var_18 68)) (loop (if (> loop_var_18 (- 68 18)) (block (set! loop_var_18 (- loop_var_18 1))) (break -69)))) 96) (- (let ((loop_var_138 23)) (loop (if (> loop_var_138 (- 23 138)) (block (set! loop_var_138 (- loop_var_138 1)) -84 95) (break "loop_var_138")))) -39)) (let ((loop_var_166 (let ((h -5) (b true)) 40))) (loop (if (< loop_var_166 (+ (let ((h -5) (b true)) 40) 166)) (block (set! loop_var_166 (+ loop_var_166 1))) (break (- "loop_var_166" -9)))))) (let ((z (let ((j 66) (h (isnum (let ((x true)) true)))) (block (+ 86 -34)))) (j (block (let ((c (add1 -77)) (h (* 18 "c"))) (set! c true)) (let ((y (* -40 45))) (block 89)) (let ((j (block "z" true false "z")) (x (* "j" "z")) (e (block -63 -69 true "j"))) (- "z" "e")) (- (let ((loop_var_117 "z")) (loop (if (> loop_var_117 (- "z" 117)) (block (set! loop_var_117 (- loop_var_117 1)) (set! z -95)) (break -87)))) (let ((f false) (e input)) "z")) (add1 (* "z" "z")))) (i (main (let ((loop_var_159 16)) (loop (if (< loop_var_159 (+ 16 159)) (block (set! loop_var_159 (+ loop_var_159 1)) (set! j 71) (set! j -82) (set! z 2)) (break -40)))) (let ((loop_var_132 "j")) (loop (if (> loop_var_132 (- "j" 132)) (block (set! loop_var_132 (- loop_var_132 1)) (set! z "j")) (break -45)))) (> "z" (let ((loop_var_136 -33)) (loop (if (> loop_var_136 (- -33 136)) (block (set! loop_var_136 (- loop_var_136 1)) (set! j -9) (set! j "j")) (break -13)))))))) (let ((loop_var_182 (let ((x 28)) "x"))) (let ((loop_var_180 (set! i "z"))) (let ((loop_var_29 (block "z" "i" "j"))) (loop (if (< loop_var_29 (+ (block "z" "i" "j") 29)) (block (set! loop_var_29 (+ loop_var_29 1)) (let ((z "j") (g -73) (e "z")) 71) (* -81 -16) (let ((f "z") (e true) (x "z")) 90)) (break (+ 22 -48))))))))))) (sub1 (let ((loop_var_80 (let ((j 58) (x "f")) "j"))) (loop (if (> loop_var_80 (- (let ((j 58) (x "f")) "j") 80)) (block (set! loop_var_80 (- loop_var_80 1))) (break (if (add1 "loop_var_80") (set! f "loop_var_80") "loop_var_80"))))))) 86 (block (fun1 (let ((z (let ((x (let ((h (- 74 -69)) (e (= true false))) (block "e" "h")))) (let ((x 94) (c (let ((b false) (d 93) (j "b")) true)) (a (let ((loop_var_184 -16)) (loop (if (> loop_var_184 (- -16 184)) (block (set! loop_var_184 (- loop_var_184 1)) "x" "x") (break 36)))))) (let ((b -84) (g true) (d "x")) "x")))) (g (our_code_starts_here (let ((loop_var_75 "z")) (let ((loop_var_134 "z")) (loop (if (> loop_var_134 (- "z" 134)) (block (set! loop_var_134 (- loop_var_134 1)) (set! z 83) (set! z "z")) (break -37))))) (if (let ((d 91) (x "z") (y -37)) "x") (+ -16 -24) (let ((loop_var_61 36)) (let ((loop_var_121 "z")) (let ((loop_var_155 -92)) (loop (if (< loop_var_155 (+ -92 155)) (block (set! loop_var_155 (+ loop_var_155 1)) (set! z 34) (set! z -7) (set! z "z")) (break "loop_var_155"))))))) (- (* "z" "z") (block true -9 true "z")) (let ((c (block 39 false 37 "z")) (d (let ((loop_var_76 "c")) (loop (if (< loop_var_76 (+ "c" 76)) (block (set! loop_var_76 (+ loop_var_76 1)) "z") (break "z")))))) (let ((j false) (c "j") (e 23)) "c")) (set! z (block true true -69 false)) (* (let ((loop_var_138 "z")) (loop (if (> loop_var_138 (- "z" 138)) (block (set! loop_var_138 (- loop_var_138 1)) (set! z "z") "z" 25) (break 100)))) (our_code_starts_here -98 2 83 true true "z" false)) (let ((y (let ((c "z") (d "c") (e "c")) input))) (<= "z" 57)))) (h (let ((f false) (a (let ((loop_var_169 "g")) (loop (if (> loop_var_169 (- "g" 169)) (block (set! loop_var_169 (- loop_var_169 1))) (break true))))) (d (let ((loop_var_167 16)) (loop (if (> loop_var_167 (- 16 167)) (block (set! loop_var_167 (- loop_var_167 1)) "z" "z") (break "g")))))) (set! d (> "z" "z"))))) (let ((a (isnum (>= "z" 89))) (h (block (let ((e "g") (b false)) "e") (block "h" true) (block "h") (let ((z "z") (f "g") (d "a")) "z"))) (c (block (block true) (> "g" "g") (block false 56 "h" "g" "z") (block "h" "g") "h"))) (+ (let ((h "z") (d "c") (z input)) "h") (- 47 "h")))) (< (block (let ((loop_var_72 8)) (loop (if (< loop_var_72 (+ 8 72)) (block (set! loop_var_72 (+ loop_var_72 1))) (break false)))) (let ((loop_var_93 -21)) (let ((loop_var_52 1)) (loop (if (> loop_var_52 (- 1 52)) (block (set! loop_var_52 (- loop_var_52 1)) false) (break true))))) (sub1 (* -28 41)) (+ (sub1 -9) (* -26 -3))) (let ((loop_var_145 14)) (loop (if (< loop_var_145 (+ 14 145)) (block (set! loop_var_145 (+ loop_var_145 1)) (+ -41 -26)) (break (block "loop_var_145" -6)))))) (main (let ((i (main -45 (sub1 -22) (>= -37 85))) (f (block (> -41 -13) (block -93 -56)))) (block (block "i" "i" -49 56 true) (let ((loop_var_137 "f")) (loop (if (> loop_var_137 (- "f" 137)) (block (set! loop_var_137 (- loop_var_137 1))) (break "loop_var_137")))))) (* (let ((f (let ((y true) (e 66) (f 39)) "y"))) (let ((loop_var_38 43)) (let ((loop_var_199 -44)) (loop (if (> loop_var_199 (- -44 199)) (block (set! loop_var_199 (- loop_var_199 1)) (set! f 78) (set! f 6) (set! f 79) -98 65 56) (break -83)))))) (block (fun1 -7 true true -46 -100 39 false) (* -24 -72) (sub1 -95))) (fun1 (let ((y (let ((i false)) -24)) (d (isnum false))) (+ "y" "y")) (block (>= -60 83) (let ((loop_var_46 42)) (loop (if (< loop_var_46 (+ 42 46)) (block (set! loop_var_46 (+ loop_var_46 1))) (break -19)))) (let ((loop_var_111 -18)) (loop (if (< loop_var_111 (+ -18 111)) (block (set! loop_var_111 (+ loop_var_111 1)) 7) (break 78)))) true) (let ((loop_var_159 23)) (loop (if (< loop_var_159 (+ 23 159)) (block (set! loop_var_159 (+ loop_var_159 1))) (break true)))) (block (isbool true) (our_code_starts_here -26 41 -70 false true -69 false) (let ((j false) (i true) (b -11)) input) (our_code_starts_here 24 -11 25 false false -8 true)) (let ((g (- -76 78)) (z (* 42 "g")) (f (= -96 -69))) (let ((d "f") (b "d") (e true)) "z")) (let ((c (isnum true))) (let ((a false) (j true) (e 48)) -28)) (= (let ((e true)) "e") (block -69 true)))) (- (let ((y (let ((loop_var_63 62)) (let ((loop_var_81 61)) (loop (if (> loop_var_81 (- 61 81)) (block (set! loop_var_81 (- loop_var_81 1)) -7 -8 90) (break "loop_var_81"))))))) (* (set! y "y") (if false "y" 11))) (if (let ((z (let ((i false) (e 92) (h "e")) "i"))) true) (block (our_code_starts_here -38 -28 44 true false 22 true)) (* (- -95 -49) -64))) (if (<= (+ (sub1 -36) (let ((f -38) (a 23)) -39)) (* (+ -38 -74) (block true -85 -82 false -19))) (let ((loop_var_73 (* 77 43))) (loop (if (< loop_var_73 (+ (* 77 43) 73)) (block (set! loop_var_73 (+ loop_var_73 1)) (+ 60 34)) (break (let ((h false)) "loop_var_73"))))) (+ (let ((b (let ((loop_var_65 92)) (loop (if (> loop_var_65 (- 92 65)) (block (set! loop_var_65 (- loop_var_65 1))) (break true))))) (i (let ((f "b") (z false)) -12)) (c (+ "i" 20))) (add1 "c")) (+ (let ((e false) (i -2) (c "e")) "i") (let ((f -77) (i false)) -75)))) (sub1 (let ((j (let ((a (= -96 -37)) (e (= -93 19)) (c (let ((loop_var_74 -52)) (loop (if (< loop_var_74 (+ -52 74)) (block (set! loop_var_74 (+ loop_var_74 1)) input false) (break "a")))))) (let ((j -76) (g "a")) 74))) (a (* (* 81 -34) (let ((f 77) (z false) (d "z")) "j")))) (add1 (let ((i false)) "j")))) (let ((loop_var_99 (* -89 -90))) (let ((loop_var_174 (let ((a true) (f true) (z 83)) 59))) (loop (if (> loop_var_174 (- (let ((a true) (f true) (z 83)) 59) 174)) (block (set! loop_var_174 (- loop_var_174 1))) (break (let ((y (block true true false "loop_var_174" -87))) (let ((i true) (c false) (z -17)) true)))))))) (< (* (let ((f (our_code_starts_here (block 3 96 20) (if 29 85 22) (+ 26 24) (block true -73 true false) (let ((f false) (b 91)) "f") (let ((y -74) (f 49)) -90) true)) (d (let ((a (let ((f -92) (c true) (z "c")) "c")) (e (let ((a false) (x "f")) -83))) (let ((a false) (g true)) "f"))) (a (block (let ((loop_var_41 100)) (let ((loop_var_89 17)) (loop (if (< loop_var_89 (+ 17 89)) (block (set! loop_var_89 (+ loop_var_89 1)) (set! f false)) (break true))))) (< -45 "f") (set! f true) (let ((d false) (y "f")) 74) (< "f" "d")))) (let ((e (let ((g 2) (h -88) (f "a")) "f"))) (let ((z true)) "d"))) (add1 (sub1 (let ((loop_var_176 58)) (loop (if (< loop_var_176 (+ 58 176)) (block (set! loop_var_176 (+ loop_var_176 1))) (break "loop_var_176"))))))) (let ((d (let ((loop_var_58 (let ((f true)) -52))) (loop (if (< loop_var_58 (+ (let ((f true)) -52) 58)) (block (set! loop_var_58 (+ loop_var_58 1)) (> 11 -7) (isbool true)) (break true))))) (z (= (let ((f (set! d -36)) (y (fun1 "f" true "d" "f" 22 "f" "d")) (i (isnum false))) (+ 40 "f")) (add1 (our_code_starts_here -19 5 23 "d" true -60 true))))) (+ (block (<= 67 34) (set! d -81)) (block (< -22 73) (block "d" true 81) (> 70 -78) (< 49 6) 33)))) (let ((z (let ((loop_var_127 (- -82 32))) (loop (if (> loop_var_127 (- (- -82 32) 127)) (block (set! loop_var_127 (- loop_var_127 1))) (break (let ((g (<= 27 "loop_var_127")) (c (let ((e "loop_var_127")) input)) (h "loop_var_127")) (block -13 "c" true "loop_var_127"))))))) (a (let ((e (= (let ((loop_var_91 "z")) (loop (if (< loop_var_91 (+ "z" 91)) (block (set! loop_var_91 (+ loop_var_91 1))) (break 9)))) (let ((loop_var_121 "z")) (loop (if (< loop_var_121 (+ "z" 121)) (block (set! loop_var_121 (+ loop_var_121 1)) -6) (break 93)))))) (h (let ((loop_var_134 (* -68 -16))) (loop (if (< loop_var_134 (+ (* -68 -16) 134)) (block (set! loop_var_134 (+ loop_var_134 1)) (set! e (> -96 -75)) (set! z (let ((b "z") (a "e")) input)) (block "e" "z" "z" "e") "e") (break (> "loop_var_134" "loop_var_134")))))) (z (let ((x (+ (add1 -82) (let ((j true) (z true) (g "z")) "z"))) (d -78) (a (let ((i false) (a (let ((y "x") (i "d") (g true)) "g")) (f "z")) (let ((g false) (y "e")) "d")))) (block (let ((loop_var_49 "a")) (let ((loop_var_155 68)) (loop (if (> loop_var_155 (- 68 155)) (block (set! loop_var_155 (- loop_var_155 1)) 25 38 72) (break 1))))) "e" (let ((i "e")) "a") (+ -79 "d") (add1 80))))) (let ((loop_var_182 (block true "h" 42 37))) (let ((loop_var_187 -70)) (loop (if (> loop_var_187 (- -70 187)) (block (set! loop_var_187 (- loop_var_187 1)) (set! z (let ((f input) (j false)) "z")) (set! z (block 35 "e" "z" true "z")) (set! z (set! z 77))) (break (+ 100 -98))))))))) (let ((loop_var_196 (add1 -91))) (let ((loop_var_145 (our_code_starts_here 84 -25 73 true true "z" false))) (loop (if (> loop_var_145 (- (our_code_starts_here 84 -25 73 true true "z" false) 145)) (block (set! loop_var_145 (- loop_var_145 1)) (set! z (* (set! a -42) (* "a" "a"))) (let ((h (sub1 "z"))) (block false false -11 44)) "a") (break (our_code_starts_here (let ((f true)) "z") 20 (block "loop_var_145" "z") (< 59 "a") (let ((j "loop_var_145") (b true) (e true)) "b") (block -58) input))))))) (* (let ((g (block (* -6 83) (let ((f (sub1 -72))) (* "f" -86)) (block (block false 4 -89 true 52) (our_code_starts_here 16 29 23 false false 48 false) (> 95 8))))) -11) (let ((j (let ((e (isbool (block true -96 true))) (b (isbool (<= 43 23)))) (- (let ((y "b") (c 23) (h false)) 15) (- -3 -3)))) (f (- (block (add1 "j")) (let ((loop_var_114 75)) (loop (if (> loop_var_114 (- 75 114)) (block (set! loop_var_114 (- loop_var_114 1)) (set! j "j") (set! j 12)) (break 17))))))) (if (let ((d 61) (h (block input false true true))) -81) (* (* -26 -70) "f") (block (let ((loop_var_160 48)) (let ((loop_var_40 "j")) (loop (if (< loop_var_40 (+ "j" 40)) (block (set! loop_var_40 (+ loop_var_40 1))) (break "loop_var_40"))))) (set! f true) -21))))))) (a (let ((a (block (isbool (< (* (let ((loop_var_56 "i")) (loop (if (> loop_var_56 (- "i" 56)) (block (set! loop_var_56 (- loop_var_56 1)) (set! i -39) (set! i -4) -7) (break 82)))) (* (add1 45) (let ((a false)) "i"))) (let ((loop_var_160 (let ((a "i") (d true) (b "d")) -43))) (let ((loop_var_48 (let ((b true)) -14))) (loop (if (> loop_var_48 (- (let ((b true)) -14) 48)) (block (set! loop_var_48 (- loop_var_48 1)) (set! i 6) (set! i (let ((x 83)) 5)) (set! i (let ((i 85) (y "i")) -73))) (break (block "loop_var_48" false "i" "loop_var_48")))))))))) (h (let ((loop_var_118 (block 50))) (loop (if (< loop_var_118 (+ (block 50) 118)) (block (set! loop_var_118 (+ loop_var_118 1)) (set! i (>= (our_code_starts_here (let ((x true)) (* "i" 56)) (let ((c (let ((y "a") (z "a")) "i"))) (- "c" "i")) (let ((e (sub1 "i"))) (our_code_starts_here "e" "e" 76 true "a" "i" "a")) (< (* -72 "i") (- -40 -39)) (isnum (let ((d 63) (j 67)) true)) (our_code_starts_here (- "i" "i") (let ((d "a") (f "i") (c "d")) -22) (+ "i" 99) (block "a" "i" "a" true false) (block "a" -53 "a" false) (* "i" 91) (let ((i false) (h true)) true)) (block (+ -83 -87) (>= "i" -12) "i" (let ((i "i") (z "a")) true))) (- (let ((h (let ((x -27) (g 59)) "x")) (d (let ((f "a") (i "i") (h "a")) "h"))) (sub1 "d")) (sub1 (set! a "i"))))) (block (block false (isbool (= false true)) (block (set! a true) (set! a "i") (- -68 "i") (block false true "i" input -34) (set! a "a")) (let ((d (isnum input))) (> "i" "i"))) (+ (let ((c (if -86 37 79)) (f (add1 "i")) (y -3)) (- 78 -91)) (if (let ((i 87) (d "i") (a false)) "a") (+ "i" "i") (our_code_starts_here "i" "i" "i" "a" true "i" false))) (block (let ((z "a") (d (main "i" -78 false))) (block 80 "i" 38 false "i")) (sub1 (our_code_starts_here 93 "i" "i" "a" "a" "i" "a")) (* "i" 79) (let ((d (= "a" "a"))) (isnum true)))) (block (>= -43 (block (add1 -48))))) (break (= true input))))))) (let ((loop_var_139 (sub1 -53))) (loop (if (< loop_var_139 (+ (sub1 -53) 139)) (block (set! loop_var_139 (+ loop_var_139 1)) (+ (block (- "i" (* "i" "i")) (<= (let ((j "i")) "j") 94) (add1 (- "i" 46))) (our_code_starts_here "i" (let ((f (let ((e "a") (h 33) (f false)) "h")) (g (if false "i" "i")) (e (let ((z input)) -99))) (- -60 "e")) (- (block "a" 0) (let ((e -51) (f "h") (c "e")) "e")) (< (our_code_starts_here 99 "i" -45 "a" "a" 15 "a") (* 61 "i")) (isnum "h") (our_code_starts_here (set! i "i") (set! a "i") 11 false (block 66 -21 "a" true "h") (let ((f 25) (e false) (h 12)) -2) "h") (let ((a (let ((i "i")) "i"))) (<= "a" -15)))) (+ (let ((d (let ((z (add1 "i")) (f (let ((a "a") (x 5)) "z")) (i (block 83 true 94 true "h"))) (our_code_starts_here "z" "f" "z" false false "i" true))) (j true)) (let ((d (set! h true)) (a true) (g 3)) 32)) (set! a (if (let ((d -63) (g input)) false) (+ "i" "i") (set! h -92))))) (break (block (block (our_code_starts_here (set! loop_var_139 79) (block 21) (set! h "i") (let ((h "a") (i 50)) true) (if false true false) (our_code_starts_here 86 -75 -33 "h" "a" "i" false) (isnum "a")) (block (let ((b false) (e 40) (c "loop_var_139")) "c"))))))))))) (let ((e (let ((loop_var_183 (let ((c true) (x "a")) -54))) (loop (if (< loop_var_183 (+ (let ((c true) (x "a")) -54) 183)) (block (set! loop_var_183 (+ loop_var_183 1)) (set! i (let ((e (block (let ((g (set! a false)) (z (let ((j "i") (i -29) (z true)) "i")) (i (add1 44))) (let ((g -91)) false)) (our_code_starts_here (if -96 "i" -67) (- 77 "a") (block true false true -6 "i") (block "a" false) (isnum true) "i" (let ((a true)) "a")) (block (+ "i" "i") 27 (let ((a false) (f "i")) "a") (let ((z "a") (x "a")) false) (isbool true))))) (- (let ((h (if "e" input false)) (f (set! i "h"))) (set! e 49)) (block (* 27 34) (set! e -13) (let ((j false) (f false)) "i")))))) (break (let ((x "i") (g (block (our_code_starts_here "i" (block input true "i") -51 (block -15 -91 true) (fun1 "a" true false "x" 6 -42 true) (block 42 81 "a" -38 -94) (isnum true)) (block (let ((i 94)) true) 85))) (e (> (let ((x 7)) (block 25)) (* (set! x 84) (let ((y 54) (a true)) "g"))))) (let ((f (set! loop_var_183 (add1 6))) (c (main (let ((x "x") (d 69)) -13) (+ -53 -35) (< "a" -66)))) (- (- "i" "c") (our_code_starts_here 66 -47 "c" false true -16 true)))))))))) (let ((loop_var_137 (set! i -12))) (loop (if (> loop_var_137 (- (set! i -12) 137)) (block (set! loop_var_137 (- loop_var_137 1)) (set! i (* "i" (+ (- (set! i 57) (if false 19 -5)) (* (block false "e" 64) (let ((x "i")) -41))))) (+ (let ((g (let ((z (* "e" -38)) (g (let ((g true) (c "g") (f "c")) "a")) (c (sub1 "z"))) (+ -7 -33))) (a (let ((z (* 58 "g")) (i (sub1 -74))) (let ((z true) (d 100)) 46))) (f (our_code_starts_here (let ((e true) (x "e") (g "i")) "i") (let ((i true) (j 27)) 96) (let ((x "a") (a -49)) "g") (isbool true) (<= "g" -84) (block false "i") (let ((i 15) (h true)) false)))) (if (let ((f "e") (b "a")) "f") -97 (add1 28))) (set! a (our_code_starts_here (block false false true "a" "a") (add1 "e") (let ((j "a") (g true) (i true)) -11) (isbool true) (let ((a input)) false) (+ "e" 29) (let ((x false)) "x"))))) (break (let ((c (* (block (our_code_starts_here "e" "a" -14 false false -58 false)) (- (our_code_starts_here "e" -95 25 false input 6 true) (- -12 "i")))) (z (let ((e (let ((e (< "loop_var_137" "c")) (g (< -88 "i"))) (let ((x 96)) "e"))) (c (> (if true "a" 2) 99))) (set! c (block true "e" 44 "c" 22)))) (d (let ((e (- (+ 28 "z") (block "e" "i"))) (j false)) (main (sub1 "e") -89 (isbool "j"))))) (sub1 -35))))))))