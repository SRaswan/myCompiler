(fun (our_code_starts_here energy j e) (if (<= energy 0) -37 (block (set! energy (- energy 1)) (block (add1 (fun2 (* "e" "energy") (let ((g false)) true) (fun2 -86 true 69 false 78 "energy") (fun1 8 "e" true true) (let ((y 78) (j false)) "y") (* "energy" "e"))) (fun1 "energy" (block (let ((b false) (g -60)) "b") false (block true false false false true) (isnum true) (let ((x true) (z -89)) 5)) (>= (let ((e true) (g "e")) "j") (let ((a "energy") (x "energy")) "a")) (block (block false false) (> -45 "e") (block "energy" true true) (isnum true))) -92 (let ((c (block (>= "energy" 78)))) (block (block false "e" false "j" "j") (let ((b "c") (d 75) (e "d")) "e") (block -7 false))) (set! e (sub1 (let ((j true) (x 44) (f -42)) "e")))))))
(fun (main energy j y a d x i) (if (<= energy 0) true (block (set! energy (- energy 1)) (fun1 energy (let ((c (let ((x (* 29 "i"))) (if "x" "j" -44))) (d (+ (+ 46 86) -98)) (z "d")) (let ((y (block "energy" "z" "d"))) (block false true "z" -93))) (set! energy (block (our_code_starts_here -94 "a" false) (let ((z -2) (y "d") (e false)) "d") (block true 72) (block true))) (set! a (let ((d (= 91 "i"))) (set! a "d")))))))
(fun (fun1 energy b d c) (if (<= energy 0) true (block (set! energy (- energy 1)) false)))
(fun (fun2 energy f z j b g) (if (<= energy 0) 8 (block (set! energy (- energy 1)) (- (+ 7 "g") (let ((i (block (block "f" "z" "j" 83) (our_code_starts_here 79 91 true) (* "f" "g") (sub1 "g") (* -75 4)))) (block (+ 35 "g") 4 (set! b false) (* "energy" "g") (set! z "g")))))))
(fun (fun3 energy e b c y j g) (if (<= energy 0) 24 (block (set! energy (- energy 1)) (let ((d "y")) (let ((i (+ (+ "b" 0) (* -25 -3)))) (set! i (set! b "j")))))))
(let ((i 54) (d (block (let ((g (block (isbool (< (+ (- "i" -28) (let ((h true)) -85)) (let ((loop_var_88 32)) (let ((loop_var_53 "i")) (loop (if (> loop_var_53 (- "i" 53)) (block (set! loop_var_53 (- loop_var_53 1))) (break "loop_var_53")))))))))) (let ((loop_var_169 -98)) (loop (if (> loop_var_169 (- -98 169)) (block (set! loop_var_169 (- loop_var_169 1))) (break (- (set! i (* "loop_var_169" -71)) (let ((g (block 61 "g")) (f "i")) (block input)))))))) (sub1 (block (let ((d (isnum (let ((b (block "i" false)) (d (<= "i" 61)) (x (block "b" "i" "d" "b"))) (let ((j -30) (i -78) (c false)) "c"))))) -25) (sub1 (- -50 (- (let ((x false) (b false) (g "x")) -55) (let ((i true)) -38)))) (if (* (let ((d (set! i false)) (j (let ((f "i") (d -8) (h "i")) "d")) (e (set! d true))) (add1 "i")) "i") (let ((loop_var_113 (set! i "i"))) (let ((loop_var_67 (set! i "i"))) (loop (if (> loop_var_67 (- (set! i "i") 67)) (block (set! loop_var_67 (- loop_var_67 1)) (set! i (let ((y false)) 12)) (set! i (block "i" false "i" "i")) (let ((i 40) (c true) (y "i")) -62) (add1 -89) (+ "i" "i")) (break (let ((d -19) (b false) (g "b")) 15)))))) (let ((loop_var_9 "i")) (loop (if (> loop_var_9 (- "i" 9)) (block (set! loop_var_9 (- loop_var_9 1))) (break (+ 36 "i")))))) (+ (block (isbool (= false false)) (block (main "i" 79 "i" true -97 27 34) (isnum true) (let ((loop_var_135 "i")) (loop (if (< loop_var_135 (+ "i" 135)) (block (set! loop_var_135 (+ loop_var_135 1)) false) (break false))))) (let ((loop_var_127 "i")) (loop (if (> loop_var_127 (- "i" 127)) (block (set! loop_var_127 (- loop_var_127 1)) (set! i false) (set! i true) (set! i true) true) (break true)))) (add1 (let ((f 2)) -59)) "i") (* (let ((loop_var_74 1)) (let ((loop_var_97 74)) (loop (if (> loop_var_97 (- 74 97)) (block (set! loop_var_97 (- loop_var_97 1)) -100 "i" -90) (break -62))))) (let ((g (block false)) (j (- "i" 92))) 17))))) (let ((g (* (block (* (- (block true "i") (let ((d -40) (b false)) -78)) -6)) (* (block (set! i (block true input 79))) (block (let ((loop_var_135 "i")) (loop (if (> loop_var_135 (- "i" 135)) (block (set! loop_var_135 (- loop_var_135 1)) "i") (break "i")))) (* (let ((loop_var_97 19)) (let ((loop_var_140 "i")) (loop (if (< loop_var_140 (+ "i" 140)) (block (set! loop_var_140 (+ loop_var_140 1)) -6 "i") (break "i"))))) (block -12)) (let ((d (let ((g false) (a "g") (z false)) "i"))) (<= "i" input)) (* (let ((loop_var_81 "i")) (loop (if (< loop_var_81 (+ "i" 81)) (block (set! loop_var_81 (+ loop_var_81 1)) 27) (break -2)))) (block "i")))))) (e (sub1 (sub1 (let ((f (sub1 (sub1 "g"))) (a (* 20 (* "g" input))) (g (block (block true true false 25) (sub1 -50) (let ((h 97) (x 54) (e "f")) "g")))) (+ (let ((loop_var_5 "g")) (loop (if (< loop_var_5 (+ "g" 5)) (block (set! loop_var_5 (+ loop_var_5 1))) (break 40)))) (fun2 "g" false 21 false -41 "g"))))))) (let ((x (> (let ((d (let ((loop_var_149 "i")) (loop (if (> loop_var_149 (- "i" 149)) (block (set! loop_var_149 (- loop_var_149 1)) false) (break true)))))) "e") (* (block (isbool true) (>= 96 "i") (let ((x "i")) "g") (< 42 12) (let ((j false) (y "g")) -93)) (set! g (let ((h true)) -46))))) (d (set! e (block "i" (let ((loop_var_101 -3)) (loop (if (> loop_var_101 (- -3 101)) (block (set! loop_var_101 (- loop_var_101 1)) (set! i 20)) (break "i")))) (set! e (< "g" "i")) (isnum (< -75 -27)))))) (let ((x (< (if "g" (set! e "g") (add1 "g")) (let ((x (let ((z "d") (c "g") (g false)) -43)) (f (let ((loop_var_110 -80)) (loop (if (< loop_var_110 (+ -80 110)) (block (set! loop_var_110 (+ loop_var_110 1))) (break "i"))))) (i (let ((loop_var_13 24)) (let ((loop_var_62 "i")) (let ((loop_var_58 "i")) (loop (if (> loop_var_58 (- "i" 58)) (block (set! loop_var_58 (- loop_var_58 1)) (set! x "x") (set! g "d") (set! x true) "d" true) (break "x")))))))) (let ((loop_var_12 49)) (loop (if (< loop_var_12 (+ 49 12)) (block (set! loop_var_12 (+ loop_var_12 1))) (break -17)))))))) false))) (if (let ((i (set! i (= (- (let ((a true) (y 58)) "i") (set! i "i")) (let ((i (let ((loop_var_180 -89)) (loop (if (> loop_var_180 (- -89 180)) (block (set! loop_var_180 (- loop_var_180 1)) true) (break true)))))) (block true true -99 input "i"))))) (j (* (+ (+ (set! i "i") (let ((a "i")) -40)) (+ (let ((f false) (j "i")) 77) (- -19 "i"))) (let ((b (main (let ((a -88) (g false) (z 9)) "i") (let ((f "i")) "i") (let ((f "i")) "i") (let ((loop_var_12 -82)) (let ((loop_var_29 "i")) (loop (if (< loop_var_29 (+ "i" 29)) (block (set! loop_var_29 (+ loop_var_29 1)) (set! i "i") (set! i true) (set! i "i")) (break false))))) (fun3 "i" "i" true false "i" "i" input) (* 96 input) (* "i" "i"))) (x (let ((i 47) (f (block "i" false "i" "i" "i")) (x (block -54))) (<= "b" 44))) (y (let ((loop_var_128 "i")) (loop (if (< loop_var_128 (+ "i" 128)) (block (set! loop_var_128 (+ loop_var_128 1)) (set! x input) (set! i 62) (set! i 65)) (break "b")))))) (* (sub1 53) (let ((c 40) (d "b")) "d")))))) (let ((f (let ((c (set! i (let ((loop_var_165 -24)) (loop (if (> loop_var_165 (- -24 165)) (block (set! loop_var_165 (- loop_var_165 1)) false) (break "i"))))))) (<= (if true "i" 53) (block -13 "j" "j")))) (y (let ((loop_var_160 (set! f -94))) (let ((loop_var_130 (let ((g 52)) 77))) (loop (if (< loop_var_130 (+ (let ((g 52)) 77) 130)) (block (set! loop_var_130 (+ loop_var_130 1)) (set! i (block "j")) (set! i (set! f input)) (set! f (add1 74))) (break (let ((c "f") (j "j") (a false)) 1)))))))) (- (+ (let ((loop_var_108 "i")) (loop (if (< loop_var_108 (+ "i" 108)) (block (set! loop_var_108 (+ loop_var_108 1)) (set! y "y") 12 -74) (break 25)))) (let ((g true) (i false) (y 68)) "y")) (let ((e (let ((h -21) (c 5) (d 87)) "f"))) (let ((x "f") (y true) (b "f")) 2))))) (let ((b true) (d (< (let ((h (if (let ((a -44)) "b") (let ((b "b") (g "i")) "i") (* input "i"))) (i (- (block true "h" false -25) (if "b" 62 -60)))) (let ((loop_var_111 11)) (loop (if (> loop_var_111 (- 11 111)) (block (set! loop_var_111 (- loop_var_111 1))) (break "loop_var_111"))))) (- (block (= false "b") (>= "i" "i") (let ((z "i") (c "b") (y -68)) false) (block true) (let ((z "i") (a "z")) 83)) (let ((c (fun3 "i" -20 "b" "b" "i" true "i")) (d (let ((f -99)) "f")) (z (<= -94 "c"))) (block false -76))))) (i (let ((h (- (let ((loop_var_56 "i")) (let ((loop_var_100 "i")) (let ((loop_var_20 "i")) (loop (if (< loop_var_20 (+ "i" 20)) (block (set! loop_var_20 (+ loop_var_20 1)) (set! i input)) (break "i")))))) (set! d "i")))) (let ((z (* (sub1 -63) (let ((loop_var_133 "h")) (let ((loop_var_22 -2)) (let ((loop_var_98 72)) (loop (if (< loop_var_98 (+ 72 98)) (block (set! loop_var_98 (+ loop_var_98 1))) (break -17)))))))) (c (* (* "z" -16) (+ -100 "z"))) (a (block (block "b")))) (let ((h (+ "z" "h")) (y (block "i" 83)) (e (< 99 "h"))) (let ((f "d")) "h")))))) true) (let ((loop_var_137 (- -5 "i"))) (loop (if (> loop_var_137 (- (- -5 "i") 137)) (block (set! loop_var_137 (- loop_var_137 1)) (= (let ((j (isnum true)) (y (sub1 input))) (let ((y "i") (b "y") (i false)) input)) "i")) (break (let ((y (let ((e (let ((j 40) (i -14) (x false)) "loop_var_137")) (h (sub1 "i")) (g "h")) (block 1 true)))) (if (let ((y "y")) -11) (> "loop_var_137" "i") (> 44 "loop_var_137"))))))))))) (sub1 (fun3 (- (set! d (block (block (- 84 "i") (let ((loop_var_94 9)) (loop (if (< loop_var_94 (+ 9 94)) (block (set! loop_var_94 (+ loop_var_94 1)) (set! d "d") (set! d true) (set! i false) "d" true true) (break "d"))))) (let ((loop_var_50 76)) (loop (if (< loop_var_50 (+ 76 50)) (block (set! loop_var_50 (+ loop_var_50 1)) (set! i "d") false "d" "d") (break true)))) input (+ (+ "i" -13) (- -2 86)) (- (* "i" "i") (block 27 "i" false "i")))) (let ((loop_var_136 (set! i 24))) (loop (if (< loop_var_136 (+ (set! i 24) 136)) (block (set! loop_var_136 (+ loop_var_136 1)) (set! i (* (block true "i" "i") (block true true false "d" -41))) (set! i "i") (set! d (add1 (block "i" -96 -60 -14))) (block (<= "i" 20) (let ((e "i") (i 83)) false) (* 70 "i") (>= "i" -20) (let ((e 73) (d -35)) "d"))) (break (if (block "i" "d" "i" "d" true) (+ 42 56) (let ((a "d") (d input)) "d"))))))) (set! i (let ((j (let ((x "i")) (let ((b (< 19 "i")) (g (block false "x" false true "d"))) "i")))) (let ((loop_var_185 (let ((a "d")) "i"))) (loop (if (< loop_var_185 (+ (let ((a "d")) "i") 185)) (block (set! loop_var_185 (+ loop_var_185 1)) (* "j" input) (let ((z false)) "i") (let ((i "d")) 21)) (break (add1 "loop_var_185"))))))) (block (fun1 20 (our_code_starts_here (let ((loop_var_194 -38)) (let ((loop_var_97 input)) (loop (if (< loop_var_97 (+ input 97)) (block (set! loop_var_97 (+ loop_var_97 1)) (set! d "i") (set! d "i")) (break "i"))))) (* -82 -1) (block (let ((loop_var_141 "i")) (loop (if (> loop_var_141 (- "i" 141)) (block (set! loop_var_141 (- loop_var_141 1)) "i") (break "loop_var_141")))) (let ((i false)) true) "d")) (let ((b (block (let ((loop_var_50 75)) (loop (if (> loop_var_50 (- 75 50)) (block (set! loop_var_50 (- loop_var_50 1)) true) (break true)))) (let ((i -70) (d true) (x 6)) 82) (let ((a -23)) true) 74 (block "i" "d" "d" "i"))) (d (let ((x (block "d" "d" "i"))) "x")) (h (let ((f (let ((loop_var_144 40)) (loop (if (< loop_var_144 (+ 40 144)) (block (set! loop_var_144 (+ loop_var_144 1)) true true) (break false))))) (i (sub1 71))) "d"))) (block (> "d" 37) (sub1 "i") (= "h" false))) (fun1 (* (let ((y "i") (j -87)) input) (block false true -86 -1 "i")) (let ((j (= "d" true)) (f (let ((loop_var_16 input)) (loop (if (< loop_var_16 (+ input 16)) (block (set! loop_var_16 (+ loop_var_16 1)) (set! i -57)) (break "i"))))) (y (block false true))) "f") (let ((b (isbool true)) (i (< "i" -4))) (let ((c true) (x -56) (h "x")) "c")) "d"))) (let ((loop_var_27 96)) (let ((loop_var_61 (add1 -50))) (let ((loop_var_49 (let ((z "d") (d "i")) "i"))) (loop (if (< loop_var_49 (+ (let ((z "d") (d "i")) "i") 49)) (block (set! loop_var_49 (+ loop_var_49 1)) (set! d (= (block (= "i" "i") (block "d" true) (set! i -6) (let ((i "d") (z "i") (b "z")) -86) (* 100 "i")) (+ (block true true 3) (set! d -79))))) (break "d")))))) (let ((a false) (e (block (block (let ((h (let ((c "i") (d false) (x false)) "d")) (z (let ((i -39) (g "i") (x "i")) "i"))) (add1 46)) (block (set! a 37)) (block (let ((loop_var_195 "i")) (let ((loop_var_150 -11)) (loop (if (< loop_var_150 (+ -11 150)) (block (set! loop_var_150 (+ loop_var_150 1))) (break "loop_var_150")))))) true) (let ((i (fun1 (* "i" -73) (let ((loop_var_36 "i")) (loop (if (< loop_var_36 (+ "i" 36)) (block (set! loop_var_36 (+ loop_var_36 1))) (break 86)))) (= "i" "i") (< "i" -47))) (j (fun2 (+ "i" -86) (let ((loop_var_103 "i")) (loop (if (> loop_var_103 (- "i" 103)) (block (set! loop_var_103 (- loop_var_103 1)) (set! a true) (set! i true) (set! i true)) (break "a")))) (set! a 59) true (block "i") (block "a" "i" 27)))) (block (block -92 "a" "a") (* 76 "i") (= "d" "d"))) (- (- (let ((b 99)) "b") (let ((loop_var_125 -26)) (let ((loop_var_159 58)) (loop (if (> loop_var_159 (- 58 159)) (block (set! loop_var_159 (- loop_var_159 1)) (set! d -21) (set! a 0) (set! i "i") "i" 7) (break input)))))) (+ (let ((e false) (d -23) (j -31)) "d") (fun3 "i" "i" "d" "d" "i" true input))) (if (* (* "i" -3) (block "i" "d" -70)) (let ((loop_var_60 "i")) (loop (if (< loop_var_60 (+ "i" 60)) (block (set! loop_var_60 (+ loop_var_60 1)) "i") (break "i")))) (+ (block true input false input) (if "a" -61 -96)))))) -13) (let ((f (let ((i (let ((c "d") (e (> (* -67 75) (let ((z 28) (b "d") (y "c")) -67)))) (block (* "i" -30) (let ((loop_var_153 "i")) (let ((loop_var_116 "i")) (loop (if (< loop_var_116 (+ "i" 116)) (block (set! loop_var_116 (+ loop_var_116 1)) (set! e "i") 66 42) (break 72))))) (= -73 "i"))))) (isbool (block (let ((d "d") (a 80)) "i") (let ((a "d") (i "a") (f input)) "i") (<= -47 -85) (let ((i "d") (x "i")) true) (let ((i -6)) "i"))))) (d (- (let ((a (- (set! f input) (let ((a 14) (c true) (i false)) -22))) (h (let ((e (block "a")) (x (let ((i input)) true)) (f (block -65 "f" true -33 "d"))) (sub1 "e"))) (i (>= (add1 "i") (set! i 94)))) (sub1 (block "f" -95 true 81 "i"))) (- (set! f (block true -88 false 84)) "i"))) (y (let ((c (block (<= (+ 72 "d") (let ((z "d")) "d")) (let ((g (add1 -100)) (e false)) true) (let ((loop_var_20 -56)) (loop (if (< loop_var_20 (+ -56 20)) (block (set! loop_var_20 (+ loop_var_20 1)) (set! d "d") (set! d 21) (set! d -12)) (break "i")))))) (d (let ((b (- (- "c" "i") (block "c"))) (j "c")) (add1 (- -16 38)))) (h (let ((z (sub1 (let ((loop_var_117 "c")) (loop (if (< loop_var_117 (+ "c" 117)) (block (set! loop_var_117 (+ loop_var_117 1))) (break "c"))))))) (sub1 (fun2 "c" true -27 "f" "d" "i"))))) (= (block (if -79 false false) (> "i" "d") (isbool true) (block 83)) (let ((x (* "d" input))) (let ((loop_var_134 "x")) (let ((loop_var_164 "i")) (loop (if (> loop_var_164 (- "i" 164)) (block (set! loop_var_164 (- loop_var_164 1)) "x" 88) (break "loop_var_164")))))))))) (> (let ((loop_var_151 (- "d" 22))) (loop (if (< loop_var_151 (+ (- "d" 22) 151)) (block (set! loop_var_151 (+ loop_var_151 1)) (set! f "i") (let ((y "f")) -15) (let ((x 53) (y "i")) -28)) (break (* "d" "i"))))) (fun2 (let ((d (- 6 "d")) (a (isnum "y")) (c (let ((a false) (h "f")) false))) (let ((x "f") (g -51)) "i")) (let ((loop_var_79 "i")) (loop (if (> loop_var_79 (- "i" 79)) (block (set! loop_var_79 (- loop_var_79 1)) (set! i "f") (set! d "d") true false false) (break true)))) (block (block -88 "i") true (* "d" "i") (let ((f true) (i false)) "d") (+ "i" 32)) (<= (- "i" -10) "i") (block (let ((d 7)) "y") (let ((loop_var_126 -90)) (loop (if (> loop_var_126 (- -90 126)) (block (set! loop_var_126 (- loop_var_126 1)) "i") (break "d"))))) (- (- 20 88) (let ((h "y") (b "f")) "d"))))) (let ((loop_var_165 (let ((d "d") (b 70)) "i"))) (loop (if (< loop_var_165 (+ (let ((d "d") (b 70)) "i") 165)) (block (set! loop_var_165 (+ loop_var_165 1))) (break (block (* (set! i "i") (set! i 55)) (>= (- "loop_var_165" "loop_var_165") (block "d" false "d" -23 83)) (+ (let ((i 71) (j "d") (d "d")) -60) (let ((x true)) 28)) (sub1 (+ -7 "i")) (+ (if false "loop_var_165" "loop_var_165") (set! d "i"))))))))))