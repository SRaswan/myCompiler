(fun (our_code_starts_here energy h j x e z i f) (if (<= energy 0) -59 (block (set! energy (- energy 1)) (our_code_starts_here energy (+ (+ (block "j" 13 "x" 90) (+ "z" "h")) (let ((h (* "j" -42)) (z (if true 19 "z")) (f (set! e -35))) (let ((d "h") (g true) (b -45)) 27))) (set! j (isbool (let ((b "j")) true))) (set! energy (isbool (set! f "f"))) (- (let ((z (let ((g 99) (e true)) "x")) (x (+ -20 84))) (let ((a "z")) -19)) (+ (block "x" true true "j") (set! x "z"))) (let ((c (* (block "energy" 5) (block 86 -73 "z" "j"))) (h (let ((g (> 84 "z")) (c (block "g" false))) (block "c" "e" 9 "i")))) "h") (isnum (= (let ((g "h") (c false)) true) (let ((j "i")) "x"))) false))))
(fun (main energy z j f b) (if (<= energy 0) false (block (set! energy (- energy 1)) (let ((c (* (+ "energy" (set! j 58)) "z")) (a (add1 (* (let ((g "f") (b "z") (f -65)) -89) (block 73 "energy"))))) (block (let ((b (<= "a" -78)) (j (* 24 "c")) (d (block "c" false 33 "b"))) (* 58 10)) (let ((c (let ((a -95) (c "b")) 58))) (isnum "b")) (let ((i false) (g (let ((x "j") (b "c")) true))) (set! a 58)) (= (block true "j" "energy" "j" "energy") (block "b" "z" "f" -33)) (set! a (let ((y false) (d true) (b "f")) false)))))))
(fun (fun1 energy f g) (if (<= energy 0) false (block (set! energy (- energy 1)) (>= 28 (let ((g (sub1 (set! g "energy"))) (j (our_code_starts_here (let ((x true) (g true) (y "energy")) 76) -32 (isnum "g") (= "energy" -32) (set! g "energy") (block "g" true true -34 true) (> "energy" "g") (block true)))) (let ((x (+ -78 -33)) (y (let ((g false)) "g")) (i (let ((j true)) true))) (our_code_starts_here 26 "energy" false "y" "x" false "g" "j")))))))
(block (sub1 (- (let ((y (isnum (let ((h (block input (+ -17 76) (* -32 82))) (d (let ((c (block true true "h" -23)) (d (let ((b "c") (f "b")) true)) (e (let ((loop_var_126 "c")) (loop (if (> loop_var_126 (- "c" 126)) (block (set! loop_var_126 (- loop_var_126 1)) (set! d -96) (set! c -78) (set! h "c") "c" "c") (break "h")))))) (if false -71 -35)))) (set! d (let ((j true) (h false) (a "d")) "h")))))) (let ((loop_var_113 (let ((z -41)) -55))) (loop (if (< loop_var_113 (+ (let ((z -41)) -55) 113)) (block (set! loop_var_113 (+ loop_var_113 1)) (set! y (let ((j (let ((h true) (a -44)) "a"))) (our_code_starts_here "j" "j" "y" "y" "j" true "y" "y")))) (break (- (* -94 "loop_var_113") (let ((d -31) (x "y")) "d"))))))) (let ((c (block (let ((i (let ((a (let ((j -86) (h "j")) true)) (i (+ -91 15)) (y (= "a" "a"))) (let ((h -15) (d "y") (b false)) "a"))) (f (set! i (let ((c -46) (y -10) (d -55)) false)))) (let ((h (let ((loop_var_87 93)) (loop (if (< loop_var_87 (+ 93 87)) (block (set! loop_var_87 (+ loop_var_87 1)) (set! f -21) 25 -43 -21) (break "loop_var_87"))))) (z (let ((z "h")) -51))) (let ((e true)) false))) (let ((c true)) (>= (+ input -62) (let ((g "c") (x input) (y "g")) "x"))) (>= (let ((loop_var_58 -25)) (let ((loop_var_20 67)) (loop (if (> loop_var_20 (- 67 20)) (block (set! loop_var_20 (- loop_var_20 1)) -69 66 74) (break "loop_var_20"))))) (- (let ((b false) (e -53) (g "e")) "e") (let ((loop_var_63 -4)) (loop (if (< loop_var_63 (+ -4 63)) (block (set! loop_var_63 (+ loop_var_63 1))) (break "loop_var_63")))))))) (e (isnum (< -98 (- (let ((f false) (h true)) -86) (block -54 97 true 83)))))) (let ((loop_var_63 (block -80))) (loop (if (> loop_var_63 (- (block -80) 63)) (block (set! loop_var_63 (- loop_var_63 1)) (block (let ((z -22) (j "c")) "c") (* 4 59) (let ((d -82) (f "e")) "d")) -51) (break (block "loop_var_63" (set! loop_var_63 "loop_var_63") (block "c") (block "loop_var_63" "e" "loop_var_63" true) (* "loop_var_63" "loop_var_63"))))))))))