(fun (our_code_starts_here energy g z) (if (<= energy 0) 92 (block (set! energy (- energy 1)) (let ((y 56)) (if (block (set! energy "g") (set! y "g") (set! energy true)) (- (let ((j true)) "y") "g") (block (* "energy" "y") (add1 "y") (= "energy" -67) (block 41 "energy" "z" 41)))))))
(fun (main energy b c g j f) (if (<= energy 0) false (block (set! energy (- energy 1)) (block (fun6 (our_code_starts_here (- "energy" 75) (isbool true) (let ((z 72)) -20)) (sub1 (block "c" "f" "energy")) (block (let ((c "b")) "f")) (block (- -71 58) (+ "b" -89)) (set! f (let ((z "c") (e -4) (a 92)) 24)) (set! f (block "b" -16 "f" false 39)) (sub1 (let ((h "b") (z false) (b "z")) "energy"))) (fun2 (sub1 (let ((a true)) -37)) (block (let ((z "g") (g 16) (j false)) true) true (* 38 -82) (let ((z "g") (f "j") (c "f")) "z")) (let ((j (block -62 "f" "f")) (h (>= "g" 94))) (= false "h")) (+ (sub1 51) (block "b" 42)) (<= (let ((j "f")) -30) (let ((h -91) (e "j")) 68)) (isnum (block "f" true)) (block (let ((e 18) (j -20) (x "j")) false) (set! b "f")) (let ((f false) (a (let ((c "j") (f "g") (y "f")) -55)) (c (sub1 "j"))) (<= "j" "j"))) (= (block (block 62 "g") (if "f" "c" -80) (+ "b" -21)) (block (* -96 "c") (let ((i "j")) "f") (let ((j -44) (g 22) (b "f")) -16) (block true "f" "f" 42 "g")))))))
(fun (fun1 energy g z y f b i a) (if (<= energy 0) -34 (block (set! energy (- energy 1)) (fun8 energy (- "z" (let ((g (sub1 "f")) (a (let ((f false) (h 37) (e -43)) true))) (let ((h 22) (y 34)) -77))) (set! z (+ (* -70 "a") (block "i" false "g" "a" 9))) (let ((j (+ (block "y" false -85) (* -91 27))) (x (set! j (let ((b "f") (i 30)) -72))) (h (if (fun2 -17 "x" true "x" "b" "b" true true) (= false "y") (let ((y "energy") (b "f")) "b")))) (* (- 56 "j") (add1 "z"))) (isbool (block (let ((i "g")) "g") (let ((j "f") (x false)) "y"))) (> (let ((j (block true "energy" "y")) (a (let ((i "z") (a -35) (c -62)) false))) (* "a" 88)) (block (let ((a 49) (j "y") (e "y")) false) (block 50 0 true false 94) true (isbool false) (let ((x "energy") (e "f") (c "i")) 45)))))))
(fun (fun2 energy f h x g j b z) (if (<= energy 0) false (block (set! energy (- energy 1)) (set! g (>= (block (block -81 -5 "x") (let ((h "g") (x "x") (e -52)) true) (set! h "b") (+ 45 -11)) (set! h (+ -8 "h")))))))
(fun (fun3 energy i j g e c) (if (<= energy 0) 20 (block (set! energy (- energy 1)) "energy")))
(fun (fun4 energy f) (if (<= energy 0) -9 (block (set! energy (- energy 1)) (sub1 (+ (set! f (block -7)) (set! f (- -85 "energy")))))))
(fun (fun5 energy) (if (<= energy 0) 82 (block (set! energy (- energy 1)) (block true false (set! energy (< (block "energy" "energy" -93) (- 19 "energy"))) (block (isnum (block "energy" false -80 true true))) (let ((h (let ((h (<= "energy" "energy")) (f (let ((g 31) (c -94)) true)) (a (add1 "energy"))) (block -97 "a" "energy")))) (* (let ((h 88)) 40) (add1 "h")))))))
(fun (fun6 energy h a b z g c) (if (<= energy 0) true (block (set! energy (- energy 1)) (if (* (+ (let ((i 73) (x 40) (a 20)) "energy") (set! energy -79)) (block (- "z" "g") (block true -57 true) (fun5 82) (fun7 "h" false true "a") (* "g" 24))) (let ((c (let ((b (set! g "a"))) (block "b" false -76 "b" "b")))) (if (block 27 "h" "energy") (< 76 20) (isnum false))) (<= (fun5 (set! z "g")) (block -77))))))
(fun (fun7 energy f h x) (if (<= energy 0) true (block (set! energy (- energy 1)) (= (let ((x (block 71 (> -62 20) (+ "f" -50) (if "energy" -30 "energy"))) (i (+ -89 (let ((b false) (g "b") (d 1)) -1))) (d (>= (+ "x" "f") (+ "energy" "x")))) (let ((c (> 37 "energy"))) (* -74 "f"))) (set! f (* (let ((b 41) (f "energy")) 28) (* -63 -4)))))))
(fun (fun8 energy i j a e h) (if (<= energy 0) 43 (block (set! energy (- energy 1)) (* (+ (- (let ((a "a")) "i") "energy") (set! energy (let ((c "energy") (a "h")) -55))) (let ((x -17) (y true) (a (let ((h (+ -37 -34)) (a (set! i false)) (e (* "energy" "a"))) (+ -49 "x")))) (block 35))))))
false