(fun (our_code_starts_here energy d i y x e) (if (<= energy 0) -4 (block (set! energy (- energy 1)) (block (* (- (set! d 72) (let ((z "i")) "energy")) (block (isbool true) -95 (* "y" "e"))) "x" (block (block (let ((y "e") (d -76) (z "i")) "z") false (if 67 "x" "i")) (let ((a (let ((g -66) (f -72)) "x"))) (let ((d true)) -64)) (set! x (let ((j "x") (y true) (a -45)) true)) (> (let ((d false) (h true) (x "d")) -85) (* "e" -22)) (block (<= "y" 69) (isnum false) (set! y 70))) (let ((c true)) (* (block 72 "e" "c" "i" "d") 36))))))
(fun (main energy h j z a e) (if (<= energy 0) false (block (set! energy (- energy 1)) (isnum (isbool (let ((h (block "a" -80 "h" 50 50))) "j"))))))
(fun (fun1 energy z i d x) (if (<= energy 0) false (block (set! energy (- energy 1)) (isbool (set! d (isbool (block 67 true true true)))))))
(fun (fun2 energy b z g) (if (<= energy 0) false (block (set! energy (- energy 1)) (block (let ((g (+ (* "z" "z") (let ((e 49) (d false) (h "d")) "b"))) (a (> (if true -90 "z") (let ((g -58)) "z")))) (- -64 "b")) (< (- (block true false false 80 "z") (sub1 53)) (if (* "b" 82) (our_code_starts_here "z" true -16 true 98 -68) (set! b "b")))))))
(+ (let ((f (let ((c (* (block (let ((loop_var_186 43)) (loop (if (> loop_var_186 (- 43 186)) (block (set! loop_var_186 (- loop_var_186 1))) (break (let ((c "loop_var_186")) true))))) (- (block (let ((loop_var_132 48)) (loop (if (< loop_var_132 (+ 48 132)) (block (set! loop_var_132 (+ loop_var_132 1))) (break false)))) (- -57 -87)) (+ 58 (block false false 39 56)))) (if (<= 51 (let ((y (let ((a -10) (e true) (z false)) "a")) (j (let ((loop_var_173 -43)) (loop (if (> loop_var_173 (- -43 173)) (block (set! loop_var_173 (- loop_var_173 1))) (break true))))) (b (block false "j"))) (+ "y" 20))) (our_code_starts_here (* (block -14) (let ((f -75)) 53)) (let ((e (let ((x false) (h false)) 62)) (i (block "e" false 16)) (z (our_code_starts_here -61 false "i" false -30 7))) (fun2 "e" "i" "e" "z")) (block (block -17 0)) (block (let ((z -67) (d true)) "d") (let ((loop_var_1 -17)) (loop (if (> loop_var_1 (- -17 1)) (block (set! loop_var_1 (- loop_var_1 1))) (break false)))) (isnum true) (+ -16 12) (block 95 true false true false)) (let ((loop_var_177 1)) (let ((loop_var_68 -10)) (loop (if (> loop_var_68 (- -10 68)) (block (set! loop_var_68 (- loop_var_68 1)) input) (break "loop_var_68"))))) (block (* -81 55) (< -15 -61) (block true false -76) (let ((loop_var_78 -86)) (loop (if (< loop_var_78 (+ -86 78)) (block (set! loop_var_78 (+ loop_var_78 1)) 60 30) (break -36)))))) (our_code_starts_here (- (let ((loop_var_94 38)) (loop (if (< loop_var_94 (+ 38 94)) (block (set! loop_var_94 (+ loop_var_94 1)) 99 72) (break input)))) (let ((loop_var_114 91)) (loop (if (< loop_var_114 (+ 91 114)) (block (set! loop_var_114 (+ loop_var_114 1))) (break 58))))) (let ((g (block true 47)) (b (let ((d true) (f "d") (x true)) "g"))) (isbool false)) (let ((c (>= -54 50))) (+ 87 -66)) (> (let ((a -46) (i false) (j true)) "a") (block 53 false 90 -42 -25)) 33 (let ((loop_var_130 92)) (loop (if (< loop_var_130 (+ 92 130)) (block (set! loop_var_130 (+ loop_var_130 1)) -2 -67 8) (break "loop_var_130"))))))))) (let ((e (block (let ((x (< "c" (let ((loop_var_167 "c")) (let ((loop_var_30 -98)) (loop (if (< loop_var_30 (+ -98 30)) (block (set! loop_var_30 (+ loop_var_30 1))) (break "c"))))))) (j (block (let ((i "x") (e true)) 14))) (z (block (let ((loop_var_59 -90)) (loop (if (< loop_var_59 (+ -90 59)) (block (set! loop_var_59 (+ loop_var_59 1)) "x" "x" "x") (break false)))) (+ 93 "c") "c" (set! j "c") (let ((e 50)) "x")))) (fun2 (if "x" 4 "j") (block "j") (let ((loop_var_99 "c")) (let ((loop_var_182 91)) (loop (if (> loop_var_182 (- 91 182)) (block (set! loop_var_182 (- loop_var_182 1)) -99 35) (break -64))))) (let ((h "x") (e 16)) "h"))) (let ((x (block (* "c" 87) (let ((e false)) "e") (fun2 43 "c" "c" true))) (y (>= (let ((loop_var_54 50)) (let ((loop_var_37 "c")) (loop (if (< loop_var_37 (+ "c" 37)) (block (set! loop_var_37 (+ loop_var_37 1))) (break -18))))) (let ((i "x")) "c"))) (c (let ((g (let ((d true) (y "y") (a "d")) input))) (- -26 "c")))) (set! c (set! c 4))) (sub1 (+ (block 59 20) (let ((a "c") (g "a") (z "a")) -90))))) (j (block false (block (set! e (+ "c" 9)) (add1 (block 47 false false 8 -8))) (block -82 (< (block true false false "c" "e") (* "e" "e"))))) (z (let ((h "j") (a (= (= (let ((e 41) (x "e") (g "h")) "h") (let ((loop_var_149 -5)) (loop (if (< loop_var_149 (+ -5 149)) (block (set! loop_var_149 (+ loop_var_149 1)) (set! j "h")) (break true))))) (= (+ -82 92) -7))) (i -24)) (let ((b (let ((g (<= "i" 83))) (let ((b false) (a false) (d input)) "h"))) (h (>= (let ((f "j")) input) (+ 95 -91))) (a (let ((a (sub1 95)) (c (let ((y false) (z "b") (a "h")) "h"))) (our_code_starts_here -25 "j" -82 true "c" "c")))) (let ((c (add1 -87))) (block false 97 false "a")))))) (> (let ((loop_var_49 (* "e" 61))) (loop (if (> loop_var_49 (- (* "e" 61) 49)) (block (set! loop_var_49 (- loop_var_49 1)) (set! c (if false "c" -64))) (break "e")))) (* (let ((x (let ((loop_var_161 20)) (let ((loop_var_36 "e")) (loop (if (< loop_var_36 (+ "e" 36)) (block (set! loop_var_36 (+ loop_var_36 1)) "j") (break "z"))))))) (block 70 "c" "e")) input))))) (g (* (block (add1 (block (let ((j (let ((z 93) (g 88)) input)) (y true) (e (let ((d -64) (z "d") (b false)) "d"))) (let ((i "j") (f false) (h "j")) false)) input (if (let ((j -100)) "j") (let ((j -69) (i input) (h "f")) 3) (- 32 21)) (let ((loop_var_67 93)) (loop (if (> loop_var_67 (- 93 67)) (block (set! loop_var_67 (- loop_var_67 1)) (set! f -6) (set! f 51) -76 -5) (break "loop_var_67")))))) (add1 (set! f (* (let ((h true) (a -43) (x false)) 56) (sub1 input)))) (let ((h (let ((c (add1 (add1 48)))) (let ((i (let ((j input) (g -68) (c "f")) false)) (d (let ((f "c") (i -8) (a "i")) 19))) true)))) (sub1 (* (let ((c 56) (i "f") (h "c")) 68) (+ -11 -76))))) (let ((loop_var_30 -66)) (loop (if (> loop_var_30 (- -66 30)) (block (set! loop_var_30 (- loop_var_30 1))) (break (let ((a "f")) (add1 (block false true "f" 89)))))))))) (* (let ((a (set! f (block (let ((loop_var_54 "g")) (loop (if (< loop_var_54 (+ "g" 54)) (block (set! loop_var_54 (+ loop_var_54 1)) (set! g -15) (set! f input) 16 "g" 90) (break 5)))) (let ((j true) (a (let ((b "f")) "g"))) (- "a" "g")) false (set! g (sub1 "g")) (set! g (let ((loop_var_158 98)) (loop (if (> loop_var_158 (- 98 158)) (block (set! loop_var_158 (- loop_var_158 1)) -22) (break "loop_var_158"))))))))) (let ((c (block (block (* -8 -93) (block 36 79 true "f") "g" (our_code_starts_here 79 true -17 "f" "a" 74) true) (>= (+ 13 28) (- 50 83)) (let ((loop_var_196 43)) (let ((loop_var_162 input)) (let ((loop_var_120 input)) (loop (if (> loop_var_120 (- input 120)) (block (set! loop_var_120 (- loop_var_120 1))) (break "f")))))) (let ((i (* input 87))) (let ((h "f") (e "a")) true)) (let ((loop_var_57 "a")) (loop (if (< loop_var_57 (+ "a" 57)) (block (set! loop_var_57 (+ loop_var_57 1))) (break 59))))))) (block (+ (block "g" "g") (* 34 "c")) (- (+ "g" 8) (if "f" -33 "a")) "a" (+ (block "f" 34 "f" false "g") (let ((loop_var_21 -67)) (let ((loop_var_156 "a")) (loop (if (> loop_var_156 (- "a" 156)) (block (set! loop_var_156 (- loop_var_156 1)) (set! a -1) (set! f "c") (set! f "g")) (break -79)))))) (let ((loop_var_62 3)) (loop (if (< loop_var_62 (+ 3 62)) (block (set! loop_var_62 (+ loop_var_62 1)) (set! a "a") (set! f -70) (set! a -14) "g" -89) (break -13))))))) (block (add1 (block (set! f (* "g" 8))))))) (- (- (block (let ((loop_var_50 (+ 85 -25))) (loop (if (> loop_var_50 (- (+ 85 -25) 50)) (block (set! loop_var_50 (- loop_var_50 1)) (block -30 (> 10 -45) (isnum true) (add1 -66)) (- (block -92 90) (sub1 -2))) (break (let ((x (let ((b false) (g "b")) false))) "loop_var_50"))))) (* (let ((loop_var_95 (sub1 -30))) (let ((loop_var_181 (let ((i true)) 53))) (loop (if (> loop_var_181 (- (let ((i true)) 53) 181)) (block (set! loop_var_181 (- loop_var_181 1))) (break (* 46 "loop_var_181")))))) (let ((b (let ((x (block -27))) (+ "x" 88)))) (let ((c (+ -22 "b")) (h (let ((loop_var_19 "c")) (loop (if (< loop_var_19 (+ "c" 19)) (block (set! loop_var_19 (+ loop_var_19 1)) (set! b "c") (set! b 94) (set! b 32) input "b") (break "c")))))) (- -10 "b")))) (let ((b (if (< (let ((c -81) (e 74)) "e") 93) (let ((g (let ((loop_var_181 4)) (loop (if (< loop_var_181 (+ 4 181)) (block (set! loop_var_181 (+ loop_var_181 1))) (break false)))))) (let ((loop_var_75 -54)) (loop (if (< loop_var_75 (+ -54 75)) (block (set! loop_var_75 (+ loop_var_75 1)) -14) (break "loop_var_75"))))) (block (let ((a -32) (f 86) (g "a")) "a") (let ((d false) (h input)) "d") (sub1 43)))) (x (set! b (let ((i true)) (block -43 -81 true true false))))) (let ((loop_var_49 (block 52 "b" true "x" -58))) (loop (if (< loop_var_49 (+ (block 52 "b" true "x" -58) 49)) (block (set! loop_var_49 (+ loop_var_49 1))) (break (- 82 "b")))))) (block (if (* (add1 9) (+ 95 24)) (- 86 (add1 -21)) (block (>= 74 -13) (let ((y true) (j 87) (f false)) "y") (let ((h -93)) "h") (our_code_starts_here -31 true 99 true 10 87) input)) (block (let ((loop_var_30 95)) (loop (if (< loop_var_30 (+ 95 30)) (block (set! loop_var_30 (+ loop_var_30 1))) (break true)))) (>= (sub1 -7) 5)) (fun2 (let ((x (= true false))) (+ -30 input)) (let ((a (let ((i -22) (z true) (y "i")) "i")) (i (- "a" "a")) (e (main "i" false "i" true "a" "a"))) (our_code_starts_here -72 true -53 false -56 72)) (- (- 99 38) (let ((j true) (y 84)) "y")) (block (let ((i true)) input) (block -36 false) (if 65 86 43) (>= 31 -28))) (let ((c (our_code_starts_here (let ((i true)) 41) (>= -56 39) (let ((loop_var_95 -20)) (loop (if (< loop_var_95 (+ -20 95)) (block (set! loop_var_95 (+ loop_var_95 1)) -71) (break "loop_var_95")))) (block 86 true true 43 true) (- 56 -63) (add1 52)))) (let ((j (+ "c" -35))) (* -14 "j")))) (block (let ((d (= (- -94 3) (block 32))) (y false)) 50) (let ((a (+ (let ((loop_var_162 86)) (loop (if (> loop_var_162 (- 86 162)) (block (set! loop_var_162 (- loop_var_162 1)) 74 58) (break "loop_var_162")))) (let ((loop_var_51 59)) (loop (if (> loop_var_51 (- 59 51)) (block (set! loop_var_51 (- loop_var_51 1))) (break "loop_var_51"))))))) (let ((loop_var_16 -29)) (let ((loop_var_197 -66)) (loop (if (> loop_var_197 (- -66 197)) (block (set! loop_var_197 (- loop_var_197 1)) (set! a 37) (set! a -32) (set! a -23)) (break -17)))))))) (block -38 (block (>= (block true (> -50 61) -63) (our_code_starts_here (* 97 -1) (let ((loop_var_26 86)) (loop (if (< loop_var_26 (+ 86 26)) (block (set! loop_var_26 (+ loop_var_26 1))) (break false)))) -51 (let ((d false) (e true) (g "e")) true) (let ((z 94)) input) (let ((f -63) (i true) (y 45)) 84))) (+ (+ (sub1 41) (- -16 42)) (add1 (let ((y true) (j 4)) "j"))) (block (let ((loop_var_189 54)) (loop (if (> loop_var_189 (- 54 189)) (block (set! loop_var_189 (- loop_var_189 1)) 6 -28) (break "loop_var_189")))) (our_code_starts_here (if true -81 -70) (<= 18 68) (let ((loop_var_116 -94)) (loop (if (> loop_var_116 (- -94 116)) (block (set! loop_var_116 (- loop_var_116 1)) -27) (break 37)))) (let ((y -36) (b "y") (e "y")) false) (let ((z -100) (y 76) (c 9)) 65) (let ((x 12) (i true)) "x"))) (sub1 (- (let ((loop_var_84 input)) (loop (if (< loop_var_84 (+ input 84)) (block (set! loop_var_84 (+ loop_var_84 1)) -26 -35) (break 42)))) (block 71 -63 -54 28)))) (+ (let ((z (let ((i (< 85 -63)) (g (= -1 -16)) (x (isnum "i"))) (if -38 8 51))) (a (let ((loop_var_120 "z")) (loop (if (< loop_var_120 (+ "z" 120)) (block (set! loop_var_120 (+ loop_var_120 1)) -41 -32 31) (break 60))))) (c "z")) (block (block true) (set! a "c"))) (+ (* (- 28 45) (let ((loop_var_164 60)) (let ((loop_var_188 -18)) (loop (if (< loop_var_188 (+ -18 188)) (block (set! loop_var_188 (+ loop_var_188 1))) (break "loop_var_188")))))) (block (sub1 6)))))) (sub1 (block (<= (sub1 (+ (sub1 -91) (- 31 9))) (if (fun2 (* -67 -64) (+ 84 -93) (add1 31) (> -26 52)) (block (let ((a 66) (x "a")) -17)) (let ((y (+ 15 -70))) (- 35 "y")))) false (if (* (let ((loop_var_3 46)) (loop (if (> loop_var_3 (- 46 3)) (block (set! loop_var_3 (- loop_var_3 1)) 54 -44) (break -8)))) (let ((e true) (x (let ((d 11) (g "d")) false))) 42)) (< (our_code_starts_here (block true 98) (< -30 -46) (let ((loop_var_24 -59)) (loop (if (> loop_var_24 (- -59 24)) (block (set! loop_var_24 (- loop_var_24 1)) 68 -53 53) (break -8)))) (block -53 true) -63 (sub1 -54)) (our_code_starts_here (add1 54) (fun2 17 82 -47 false) (* input 22) (block true false false) (* 41 6) (+ -5 -67))) (<= (block (block -28 true true -2)) (let ((h 86) (i (block false)) (x (+ input "h"))) (let ((b -1) (d "x")) 41)))) (block 45 (block (block (let ((loop_var_19 -17)) (loop (if (> loop_var_19 (- -17 19)) (block (set! loop_var_19 (- loop_var_19 1))) (break false)))) (let ((b 80) (c true) (h -50)) "b") -1 (> -89 input) (* -89 86)) (+ (our_code_starts_here 64 false 33 false -38 79) (let ((loop_var_133 88)) (loop (if (> loop_var_133 (- 88 133)) (block (set! loop_var_133 (- loop_var_133 1)) -28 -79) (break "loop_var_133"))))) (>= (- 83 9) (let ((loop_var_55 1)) (loop (if (> loop_var_55 (- 1 55)) (block (set! loop_var_55 (- loop_var_55 1))) (break "loop_var_55")))))) (- (let ((loop_var_129 81)) (loop (if (< loop_var_129 (+ 81 129)) (block (set! loop_var_129 (+ loop_var_129 1))) (break "loop_var_129")))) (let ((a (let ((c false) (h true)) true))) (let ((a false) (f "a") (d 84)) "d"))) (- 34 84)) 48))))