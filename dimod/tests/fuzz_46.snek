(fun (our_code_starts_here energy e c) (if (<= energy 0) -60 (block (set! energy (- energy 1)) (+ (- (* (- "energy" "e") "energy") (let ((a true) (x (block true true true 54 false))) (let ((i false) (b -95) (a "a")) 46))) (our_code_starts_here (set! c (set! energy "energy")) (> -59 (let ((z -82)) 6)) (isnum (block "c")))))))
(fun (main energy y c) (if (<= energy 0) true (block (set! energy (- energy 1)) (set! energy false))))
(< (let ((x (let ((j (if (let ((f (let ((loop_var_27 (let ((c -39) (h -66) (d "h")) "c"))) (loop (if (> loop_var_27 (- (let ((c -39) (h -66) (d "h")) "c") 27)) (block (set! loop_var_27 (- loop_var_27 1)) (block -64 15)) (break (block -15 -84 "loop_var_27")))))) (a "f")) (let ((loop_var_162 48)) (loop (if (> loop_var_162 (- 48 162)) (block (set! loop_var_162 (- loop_var_162 1)) (set! f (let ((b 92)) -42)) (set! a (let ((i input) (g -19)) "g"))) (break 22))))) (let ((loop_var_146 (if true -16 -65))) (loop (if (< loop_var_146 (+ (if true -16 -65) 146)) (block (set! loop_var_146 (+ loop_var_146 1))) (break (set! loop_var_146 (isnum true)))))) (block -44 (let ((i (* (let ((loop_var_170 -83)) (loop (if (< loop_var_170 (+ -83 170)) (block (set! loop_var_170 (+ loop_var_170 1))) (break 1)))) -47)) (f (let ((i (let ((loop_var_184 -83)) (let ((loop_var_149 "i")) (loop (if (< loop_var_149 (+ "i" 149)) (block (set! loop_var_149 (+ loop_var_149 1)) (set! i true) (set! i true)) (break false)))))) (g (block "i" "i" input 66 "i"))) (isbool true))) (b (block (- "i" "i") (<= "i" -74) (<= -81 "i") (set! i "i") (>= -82 60)))) -95) true))) (z (let ((e (let ((z (sub1 (block (isnum "j") (block true false) (sub1 46)))) (h (< (block (let ((x "j")) -50) (let ((loop_var_181 "z")) (loop (if (> loop_var_181 (- "z" 181)) (block (set! loop_var_181 (- loop_var_181 1)) (set! z true) false true) (break input)))) (<= -38 35) (let ((d "z")) "z")) (let ((loop_var_149 "z")) (loop (if (< loop_var_149 (+ "z" 149)) (block (set! loop_var_149 (+ loop_var_149 1)) (set! j "z") (set! z "z")) (break "loop_var_149")))))) (b (sub1 "z"))) (let ((h (let ((a (isnum true)) (e (+ -50 -1))) (let ((f "a") (j "b") (g true)) -68))) (y (block -54 (let ((i 12) (c "i") (y "h")) "h") (sub1 90) (let ((e "h")) -67) (let ((a "j") (d "j")) -16)))) (+ (- "z" -13) (* 16 -48))))) (c (= (> (sub1 (let ((loop_var_82 -57)) (loop (if (> loop_var_82 (- -57 82)) (block (set! loop_var_82 (- loop_var_82 1)) (set! j "e") -78 -38 20) (break "loop_var_82"))))) (let ((f (* "e" "e")) (a (block 42 true))) (add1 98))) (let ((loop_var_95 (- 24 "e"))) (loop (if (> loop_var_95 (- (- 24 "e") 95)) (block (set! loop_var_95 (- loop_var_95 1)) (set! j (let ((g true) (a "e")) "j")) (set! e (> "e" "e")) (set! e (set! j "j")) (let ((z "e")) true)) (break (block "j"))))))) (d (- 76 (block (>= (let ((loop_var_29 94)) (loop (if (< loop_var_29 (+ 94 29)) (block (set! loop_var_29 (+ loop_var_29 1)) (set! j -22) (set! c -19)) (break -21)))) (let ((j true) (i "e")) 4)) (< (let ((x "e") (g input)) -100) (* 59 -79)) "j" (isbool "j") (let ((e (set! e "j")) (j (set! c "c")) (c (let ((h "e")) 48))) (if false -64 "c")))))) (block (let ((loop_var_198 (if "e" -95 "d"))) (loop (if (< loop_var_198 (+ (if "e" -95 "d") 198)) (block (set! loop_var_198 (+ loop_var_198 1)) (let ((g -1) (b -17) (i "c")) "i")) (break "c")))) (let ((j (isbool (isbool true))) (z (>= (sub1 -14) (let ((a "e")) -2))) (h (let ((a (isbool false)) (y (let ((loop_var_31 "e")) (let ((loop_var_184 "e")) (loop (if (> loop_var_184 (- "e" 184)) (block (set! loop_var_184 (- loop_var_184 1)) "d" -74 25) (break 48)))))) (e (set! a "y"))) (let ((loop_var_169 -80)) (loop (if (> loop_var_169 (- -80 169)) (block (set! loop_var_169 (- loop_var_169 1))) (break "y"))))))) (>= (+ 8 "e") (let ((a "z") (f "c")) "e"))))))) (block (sub1 (let ((b (set! j (let ((d true) (z "d") (g 92)) "g"))) (d (main -59 (isbool false) (block true "j" true "b"))) (x (let ((j (let ((loop_var_39 "b")) (loop (if (< loop_var_39 (+ "b" 39)) (block (set! loop_var_39 (+ loop_var_39 1))) (break "loop_var_39"))))) (e "b") (z (* 93 "j"))) (block false)))) (let ((b (sub1 5)) (x "b")) (+ "x" "b")))) (let ((loop_var_63 (set! z 5))) (loop (if (> loop_var_63 (- (set! z 5) 63)) (block (set! loop_var_63 (- loop_var_63 1))) (break (block (main "loop_var_63" "j" "loop_var_63") (>= -55 5) (block false "z" 40 "z" true)))))) (<= (let ((a (block (let ((c 68) (f 79) (y -34)) input) (let ((c false)) "c") (block "j" false -73 70) (- 25 0) (= false "z")))) (+ (let ((loop_var_117 -87)) (let ((loop_var_28 -7)) (loop (if (< loop_var_28 (+ -7 28)) (block (set! loop_var_28 (+ loop_var_28 1))) (break -4))))) (block -94 29 true "j" -97))) (add1 22))))) (y (let ((d (+ (sub1 (our_code_starts_here (- (block true -46 -98 true -98) (let ((loop_var_36 -27)) (loop (if (> loop_var_36 (- -27 36)) (block (set! loop_var_36 (- loop_var_36 1)) -80) (break 46))))) (< (* 27 66) (* -68 22)) true)) -87)) (j (let ((a (let ((i (let ((a (let ((loop_var_95 24)) (loop (if (> loop_var_95 (- 24 95)) (block (set! loop_var_95 (- loop_var_95 1)) (set! x "d") (set! d -87)) (break "d"))))) (z (isbool (= "a" -72))) (x (> "a" (let ((h "a") (i true)) -26)))) (block (block "d")))) (b (let ((d (block (block "x" "x" -68 "x" false) (let ((loop_var_78 68)) (loop (if (< loop_var_78 (+ 68 78)) (block (set! loop_var_78 (+ loop_var_78 1)) (set! d true)) (break "x")))) (set! i "d") (+ 48 "d")))) (isnum (= false "x"))))) (< (set! i (let ((b "x") (i -65) (x "b")) -83)) (block (let ((loop_var_106 60)) (loop (if (> loop_var_106 (- 60 106)) (block (set! loop_var_106 (- loop_var_106 1)) (set! d true) (set! i "b") (set! i "x")) (break "b")))) (block "i" 42 false true) (add1 "d") (let ((f 41) (z "x") (g 1)) 48)))))) (>= -93 (add1 (if -57 (sub1 "d") "d"))))) (f (- (let ((d 21) (f (block (let ((loop_var_23 62)) (loop (if (> loop_var_23 (- 62 23)) (block (set! loop_var_23 (- loop_var_23 1)) (set! j "x")) (break "x")))) (* (let ((z 6)) -39) (* -6 "d")) (let ((a (let ((x "j")) input)) (b (>= "d" -54))) -24) 60)) (z (let ((b (< (* "d" 87) (let ((f false) (j false)) -46))) (f (let ((loop_var_179 -75)) (let ((loop_var_148 -46)) (loop (if (< loop_var_148 (+ -46 148)) (block (set! loop_var_148 (+ loop_var_148 1)) (set! d false) (set! j false) false "j" "x") (break "j"))))))) (* (let ((loop_var_56 75)) (loop (if (> loop_var_56 (- 75 56)) (block (set! loop_var_56 (- loop_var_56 1)) (set! x 42) (set! x -54)) (break "d")))) (- "d" "d"))))) (sub1 (let ((b (let ((d 16)) "d"))) (let ((loop_var_4 "b")) (loop (if (< loop_var_4 (+ "b" 4)) (block (set! loop_var_4 (+ loop_var_4 1)) (set! z "f") (set! d "f") "f") (break "d"))))))) (let ((loop_var_93 (block 84 "d" "d"))) (loop (if (< loop_var_93 (+ (block 84 "d" "d") 93)) (block (set! loop_var_93 (+ loop_var_93 1)) (set! d (set! d (+ 81 26))) (set! d "d") (set! d (sub1 (set! d "d")))) (break (* (sub1 "d") (* "loop_var_93" -62))))))))) (let ((a (let ((d (isbool (block (let ((loop_var_187 -35)) (loop (if (> loop_var_187 (- -35 187)) (block (set! loop_var_187 (- loop_var_187 1))) (break false))))))) (b (let ((c (let ((z (let ((h "f") (y "j")) false)) (b (block "d" "z" "d" "f"))) (>= "f" 40))) (y (set! d (let ((z "f")) "j")))) (set! d (block false "f" true 82 "f"))))) (let ((loop_var_185 (set! j -27))) (let ((loop_var_107 97)) (loop (if (> loop_var_107 (- 97 107)) (block (set! loop_var_107 (- loop_var_107 1)) (set! j (our_code_starts_here "b" "j" "d")) (set! f (+ 95 1)) (set! x (* 57 "b"))) (break (sub1 -24))))))))) (block (block (let ((e (block "x" 23 input)) (x (block "x" "x" -43 "j" 51))) (* -34 "x"))) (let ((x (let ((e (let ((y "j") (d "x") (f -76)) -78))) (let ((g "d")) "x"))) (h (let ((loop_var_139 -22)) (loop (if (< loop_var_139 (+ -22 139)) (block (set! loop_var_139 (+ loop_var_139 1)) true true) (break false)))))) (+ (let ((g "j") (i "j")) "a") (if "d" "f" "d")))))))) -31) (our_code_starts_here (if (block (* (our_code_starts_here (+ (add1 -72) (add1 -40)) (block (let ((g false) (x false)) false)) (> 33 (if 36 -61 34))) (block (block (let ((c false)) true) (block -98 80) (let ((z 54)) false) (= true true)) (add1 (our_code_starts_here 87 false true)))) (block (our_code_starts_here (let ((a (= input input)) (b (let ((loop_var_90 -16)) (loop (if (< loop_var_90 (+ -16 90)) (block (set! loop_var_90 (+ loop_var_90 1)) "a" true "a") (break true)))))) (+ -27 27)) (let ((d (let ((loop_var_156 6)) (loop (if (< loop_var_156 (+ 6 156)) (block (set! loop_var_156 (+ loop_var_156 1)) true false) (break true))))) (a (* 50 19)) (z (let ((loop_var_190 "a")) (let ((loop_var_53 "a")) (let ((loop_var_1 68)) (loop (if (< loop_var_1 (+ 68 1)) (block (set! loop_var_1 (+ loop_var_1 1))) (break false)))))))) (block true false -52 "z")) (if (<= 46 -41) (let ((j false) (g "j")) "g") (<= -1 -5))) (isnum (let ((a (isnum input)) (j (* -89 -15))) false)) (< (let ((loop_var_200 72)) (let ((loop_var_166 25)) (loop (if (> loop_var_166 (- 25 166)) (block (set! loop_var_166 (- loop_var_166 1))) (break 36))))) (let ((f (block -4))) (add1 "f"))) (main (add1 (let ((e false) (d "e")) 45)) (block (main 72 true 73) (= -30 3)) (sub1 (block 28)))) (block (let ((loop_var_116 (let ((g true) (i false) (a false)) 58))) (loop (if (> loop_var_116 (- (let ((g true) (i false) (a false)) 58) 116)) (block (set! loop_var_116 (- loop_var_116 1)) (- -1 -64) (let ((a input) (c 98)) "c")) (break (- 50 "loop_var_116"))))) (+ (block -12 (+ 31 68) (block -6 false false false -81)) (block (let ((i true) (a -79)) "a") (block false 2 19 16 -98))) (main -50 (= (block false input 1 39 -89) (let ((x 38)) 100)) (block (<= -13 -40) (let ((y true) (c 87) (a 47)) -35))) (> (block (+ -67 46) (>= -39 18) (> 81 59) (block true 81 28 32)) (* (* 53 16) (block false false -21))) (let ((f (let ((loop_var_117 -47)) (loop (if (> loop_var_117 (- -47 117)) (block (set! loop_var_117 (- loop_var_117 1)) 8 -90 -54) (break 48))))) (d (let ((i (set! f false)) (z (let ((g "f")) "i"))) (block "f" 90))) (y (block (let ((loop_var_91 0)) (loop (if (< loop_var_91 (+ 0 91)) (block (set! loop_var_91 (+ loop_var_91 1)) true) (break false)))) (+ -59 "f")))) (if (block false "f" -60 "f") (block true true 34 77 "f") (* "y" 57)))) (let ((loop_var_145 (sub1 -56))) (loop (if (< loop_var_145 (+ (sub1 -56) 145)) (block (set! loop_var_145 (+ loop_var_145 1))) (break (main (+ "loop_var_145" 45) false (block "loop_var_145" "loop_var_145" -88 false -44))))))) (+ (let ((loop_var_29 (block 88 23))) (loop (if (> loop_var_29 (- (block 88 23) 29)) (block (set! loop_var_29 (- loop_var_29 1))) (break (let ((x (isbool true))) (block 37 "x" "x" true "loop_var_29")))))) (add1 (block (our_code_starts_here (let ((g true) (e "g")) 20) (let ((loop_var_114 -12)) (loop (if (> loop_var_114 (- -12 114)) (block (set! loop_var_114 (- loop_var_114 1)) true false true) (break true)))) (main 59 input 25)) (block (let ((loop_var_37 55)) (loop (if (> loop_var_37 (- 55 37)) (block (set! loop_var_37 (- loop_var_37 1))) (break -94)))) (let ((loop_var_167 90)) (let ((loop_var_38 22)) (loop (if (> loop_var_38 (- 22 38)) (block (set! loop_var_38 (- loop_var_38 1))) (break true))))) (let ((b input) (c "b") (y 51)) 24) (let ((h 26)) true)) (+ (block 29) (sub1 42)) (> (let ((j 20) (a true)) "j") (our_code_starts_here -17 false true)) (+ (- -31 49) -12)))) (let ((a (let ((loop_var_19 (if false 60 -18))) (loop (if (< loop_var_19 (+ (if false 60 -18) 19)) (block (set! loop_var_19 (+ loop_var_19 1)) (let ((h (+ 30 23)) (y (* "h" 92)) (c (let ((z 41)) -43))) (block -93 false false false "y"))) (break (block (set! loop_var_19 "loop_var_19")))))))) (our_code_starts_here 98 (isnum (= (< "a" 84) (isnum true))) (let ((e (- (let ((h true) (c true)) "a") (sub1 -10))) (z (> (let ((d true) (a 1)) "a") "e"))) "z")))) (let ((b (<= (our_code_starts_here (let ((loop_var_18 (add1 -100))) (loop (if (> loop_var_18 (- (add1 -100) 18)) (block (set! loop_var_18 (- loop_var_18 1))) (break (block 23 true false 39))))) (>= (block (block true true true -60) (block -18) (* -76 -64) -25) 0) false) (block -48))) (a (let ((loop_var_32 (block 62))) (loop (if (> loop_var_32 (- (block 62) 32)) (block (set! loop_var_32 (- loop_var_32 1)) (set! b (block (= 52 -42) (set! b (let ((j true) (x "j")) "b")) (let ((g (set! b "b"))) (let ((i false) (y 61)) "y")) (if (let ((g 25) (h "b")) -86) (let ((f 73) (i "b")) -84) -37) (set! b (sub1 -86)))) (block (> (sub1 -63) -100) (add1 (block 93)) false (- (set! b 0) (let ((g "b")) -46))) (let ((i (set! b "b"))) (if (- -72 23) (sub1 -57) (our_code_starts_here -82 true true))) (set! b (if (set! b true) 69 (block "b" "b" 20)))) (break (our_code_starts_here (+ (let ((y "loop_var_32") (e -33)) -53) (* -78 13)) (block (>= 9 46)) (set! b (block false true true)))))))) (x (main (let ((loop_var_159 (let ((e 94) (y 60) (x "a")) "x"))) (loop (if (> loop_var_159 (- (let ((e 94) (y 60) (x "a")) "x") 159)) (block (set! loop_var_159 (- loop_var_159 1)) (add1 (- -20 "a")) (let ((a false) (z (isnum true)) (i (let ((h true) (g "b") (e false)) -10))) (let ((y "b")) -38))) (break (block (let ((g input) (d 6) (c false)) false) (- -46 75) (- "a" -59) -70))))) (isbool (let ((x (sub1 (set! b -10))) (a (* (our_code_starts_here 89 false "b") (block 57))) (i (> (block -49 "b" "a" -45) (- "a" "x")))) (let ((d (main "a" false "a"))) (= "a" -68)))) (sub1 "a")))) (set! a (isnum (let ((z (= (let ((e -57)) "a") (* -4 "a")))) (let ((j (let ((loop_var_116 "x")) (let ((loop_var_124 "a")) (let ((loop_var_182 70)) (loop (if (< loop_var_182 (+ 70 182)) (block (set! loop_var_182 (+ loop_var_182 1))) (break "b")))))))) (block input "j" "j")))))) (= (>= (let ((loop_var_51 (sub1 23))) (let ((loop_var_116 (block true true false -1))) (let ((loop_var_169 (let ((x -64) (c "x") (f false)) "x"))) (loop (if (< loop_var_169 (+ (let ((x -64) (c "x") (f false)) "x") 169)) (block (set! loop_var_169 (+ loop_var_169 1)) -9 (let ((x (- 5 -74)) (y (if true true true))) (let ((h true) (a "x") (b "y")) -90)) (our_code_starts_here (block true -69 false -70) (if 78 false false) (let ((i false)) false))) (break (let ((j (+ "loop_var_169" 12))) (let ((h true) (e true)) "j")))))))) -75) (let ((loop_var_190 15)) (let ((loop_var_72 (if -84 -61 -20))) (let ((loop_var_69 (block true 32))) (loop (if (< loop_var_69 (+ (block true 32) 69)) (block (set! loop_var_69 (+ loop_var_69 1))) (break (let ((x (< (+ "loop_var_69" -78) (let ((y "loop_var_69") (h true) (x true)) "y"))) (j (< (set! loop_var_69 1) (add1 -23)))) (= (isbool "x") (main -4 "j" "loop_var_69"))))))))))))