(fun (our_code_starts_here energy d z) (if (<= energy 0) -32 (block (set! energy (- energy 1)) (let ((h (* (+ (add1 81) 48) (add1 (block false 98)))) (j (let ((a (let ((i 7)) (if 55 -71 "h")))) (= (let ((z -12) (b true)) 96) (set! energy -8))))) (if (let ((x (let ((z -6) (f "j")) -81))) (> "energy" "x")) (- (let ((h 96) (i 83) (x "j")) "d") (* "energy" "z")) (fun4 (block "z" "h" true false -51) (block "energy" true) (>= 3 "energy") (- 55 -28) (fun3 90 true -25 "j" true "energy" "h") (let ((z "d") (y true)) 10)))))))
(fun (main energy a) (if (<= energy 0) true (block (set! energy (- energy 1)) (isnum (let ((x (if true (block false) (< -21 84))) (d "a")) (block (= "energy" -14) (block "energy" true "x" 53) (let ((h "x") (x "x") (f false)) "x")))))))
(fun (fun1 energy j y h c z i x e) (if (<= energy 0) false (block (set! energy (- energy 1)) (>= (+ (set! c (block "x" -70 91)) (block (fun2 "z" "energy") (add1 26))) (let ((f (add1 (add1 -25))) (c (<= (let ((d "h")) "e") (add1 -25)))) (+ (set! c "f") (add1 72)))))))
(fun (fun2 energy c) (if (<= energy 0) -42 (block (set! energy (- energy 1)) 60)))
(fun (fun3 energy d c i f j x) (if (<= energy 0) 11 (block (set! energy (- energy 1)) (set! x (* (if (let ((a true)) "c") (let ((x "energy")) 92) (let ((j -96) (z "j")) 77)) (- (if "d" "energy" "d") (block true 2 "j" "x")))))))
(fun (fun4 energy d e a y c) (if (<= energy 0) -77 (block (set! energy (- energy 1)) (* (if (> (let ((i "e") (h "y")) -6) (block "energy" 49)) (let ((y (block 64))) (block -45 false -65 "y")) "y") (set! energy "d")))))
(* (sub1 (let ((j (block (* (- 68 (add1 (block true -38 false 70 -83))) 22) (let ((loop_var_31 (- -86 60))) (loop (if (< loop_var_31 (+ (- -86 60) 31)) (block (set! loop_var_31 (+ loop_var_31 1))) (break (fun1 (- "loop_var_31" "loop_var_31") (let ((b true)) false) (let ((y true) (x 63) (d "x")) false) (block "loop_var_31") (set! loop_var_31 -51) false (let ((j false)) true) "loop_var_31" (block true "loop_var_31" false true))))))))) (let ((x "j") (g (set! x (sub1 -53)))) (set! j (* (set! g (let ((i 63) (f "g") (j 53)) 72)) 97))))) (let ((loop_var_87 (our_code_starts_here 53 -40 false))) (loop (if (> loop_var_87 (- (our_code_starts_here 53 -40 false) 87)) (block (set! loop_var_87 (- loop_var_87 1)) 18) (break (* (block "loop_var_87") (add1 (+ (set! loop_var_87 (+ 69 "loop_var_87")) (let ((b 43)) (let ((c false)) 22))))))))))